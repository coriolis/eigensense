"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[552],{588:(e,t,n)=>{e.exports=n.p+"static/media/ort-wasm-simd-threaded.jsep.87cecdc304ba43944fd3.wasm"},552:(e,t,n)=>{n.d(t,{oye:()=>Ov,v6I:()=>Am,syV:()=>h_,YOx:()=>hb,a2Z:()=>mp});var r={};n.r(r),n.d(r,{InferenceSession:()=>Ie,TRACE:()=>Se,TRACE_FUNC_BEGIN:()=>Ae,TRACE_FUNC_END:()=>Te,Tensor:()=>Ee,TrainingSession:()=>Oe,default:()=>Bc,env:()=>ue,registerBackend:()=>re});var s=n(9),i=n(837),a=n(499);const o="undefined"!==typeof self,l=o&&"DedicatedWorkerGlobalScope"===self.constructor.name,u=o&&"caches"in self,d="undefined"!==typeof navigator&&"gpu"in navigator,c="undefined"!==typeof navigator&&"ml"in navigator,p="undefined"!==typeof process,h=p&&"node"===process?.release?.name,f=!x(s),m=!x(i),g=Object.freeze({IS_BROWSER_ENV:o,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:u,IS_WEBGPU_AVAILABLE:d,IS_WEBNN_AVAILABLE:c,IS_PROCESS_AVAILABLE:p,IS_NODE_ENV:h,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:m}),_=f&&m,w=_?i.dirname(i.dirname(a.fileURLToPath("file:///Users/ganesh/work/privacy-preserving-surveillance/frontend/node_modules/@xenova/transformers/src/env.js"))):"./",y=_?i.join(w,"/.cache/"):null,b="/models/",v={version:"3.0.0-alpha.21",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!o,localModelPath:_?i.join(w,b):b,useFS:f,useBrowserCache:u,useFSCache:f,cacheDir:y,useCustomCache:!1,customCache:null};function x(e){return 0===Object.keys(e).length}const $=class{constructor(){let e=function(){return e._call(...arguments)};return Object.setPrototypeOf(e,new.target.prototype)}_call(){throw Error("Must implement _call method in subclass")}};function k(e,t){e&&e(t)}function E(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function S(e){const t=[];let n=e;for(;Array.isArray(n);)t.push(n.length),n=n[0];return t}function C(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Array.prototype.concat.apply([],t)}function A(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}function T(e,t){return Math.abs((e+t)%(2*t)-t)}function z(e,t){return Object.assign({},...t.map((t=>{if(void 0!==e[t])return{[t]:e[t]}})))}function I(e){let t=0;for(const n of e)++t;return t}var M=n(143),O=n(603);const B={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class R{constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=M.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=M.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();let n=this;this.body=new ReadableStream({start(e){n.arrayBuffer().then((t=>{e.enqueue(new Uint8Array(t)),e.close()}))}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",B[e]??"application/octet-stream")}clone(){let e=new R(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await M.promises.readFile(this.filePath)).buffer}async blob(){const e=await M.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await M.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function P(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;try{t=new URL(e)}catch(s){return!1}return!(n&&!n.includes(t.protocol))&&!(r&&!r.includes(t.hostname))}async function D(e){if(v.useFS&&!P(e,["http:","https:","blob:"]))return new R(e);if("undefined"!==typeof process&&"node"===process?.release?.name){const t=!!{NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_SLACK_WEBHOOK_URL:"https://hooks.slack.com/services/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"}?.TESTING_REMOTELY,n=v.version,r=new Headers;r.set("User-Agent",`transformers.js/${n}; is_ci/${t};`);if(P(e,["http:","https:"],["huggingface.co","hf.co"])){const e={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_SLACK_WEBHOOK_URL:"https://hooks.slack.com/services/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"}?.HF_TOKEN??{NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_SLACK_WEBHOOK_URL:"https://hooks.slack.com/services/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"}?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const L={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class F{constructor(e){this.path=e}async match(e){let t=O.join(this.path,e),n=new R(t);return n.exists?n:void 0}async put(e,t){const n=Buffer.from(await t.arrayBuffer());let r=O.join(this.path,e);try{await M.promises.mkdir(O.dirname(r),{recursive:!0}),await M.promises.writeFile(r,n)}catch(s){console.warn("An error occurred while writing the file to cache:",s)}}}async function N(e,t){let n,r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!v.allowLocalModels){if(s.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!v.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}if(k(s.progress_callback,{status:"initiate",name:e,file:t}),!n&&v.useBrowserCache){if("undefined"===typeof caches)throw Error("Browser cache is not available in this environment.");try{n=await caches.open("transformers-cache")}catch(ee){console.warn("An error occurred while opening the browser cache:",ee)}}if(!n&&v.useFSCache&&(n=new F(s.cache_dir??v.cacheDir)),!n&&v.useCustomCache){if(!v.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!v.customCache.match||!v.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");n=v.customCache}const i=s.revision??"main";let a,o,l=j(e,t),u=j(v.localModelPath,l),d=j(v.remoteHost,v.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(i)),t),c="main"===i?l:j(e,i,t),p=n instanceof F?c:d,h=!1;n&&(o=await async function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(let s of n)try{let t=await e.match(s);if(t)return t}catch(ee){continue}}(n,u,p));const f=void 0!==o;if(void 0===o){if(v.allowLocalModels){if(P(l,["http:","https:"])){if(s.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${l}.`);if(!v.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${l}.`)}else try{o=await D(u),a=u}catch(ee){console.warn(`Unable to load from local path "${u}": "${ee}"`)}}if(void 0===o||404===o.status){if(s.local_files_only||!v.allowRemoteModels){if(r)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${u}".`);return null}if(o=await D(d),200!==o.status)return function(e,t,n){if(!n)return null;throw Error(`${L[e]??`Error (${e}) occurred while trying to load file`}: "${t}".`)}(o.status,d,r);a=p}h=n&&"undefined"!==typeof Response&&o instanceof Response&&200===o.status}k(s.progress_callback,{status:"download",name:e,file:t});const m={status:"progress",name:e,file:t};let g;return s.progress_callback?f&&"undefined"!==typeof navigator&&/firefox/i.test(navigator.userAgent)?(g=new Uint8Array(await o.arrayBuffer()),k(s.progress_callback,{...m,progress:100,loaded:g.length,total:g.length})):g=await async function(e,t){const n=e.headers.get("Content-Length");null===n&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let r=parseInt(n??"0"),s=new Uint8Array(r),i=0;const a=e.body.getReader();async function o(){const{done:e,value:n}=await a.read();if(e)return;let l=i+n.length;if(l>r){r=l;let e=new Uint8Array(r);e.set(s),s=e}s.set(n,i),i=l;return t({progress:i/r*100,loaded:i,total:r}),o()}return await o(),s}(o,(e=>{k(s.progress_callback,{...m,...e})})):g=new Uint8Array(await o.arrayBuffer()),h&&a&&void 0===await n.match(a)&&await n.put(a,new Response(g,{headers:o.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})),k(s.progress_callback,{status:"done",name:e,file:t}),g}async function U(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=await N(e,t,n,r);if(null===s)return{};let i=new TextDecoder("utf-8").decode(s);return JSON.parse(i)}function j(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return(t=t.map(((e,n)=>(n&&(e=e.replace(new RegExp("^/"),"")),n!==t.length-1&&(e=e.replace(new RegExp("/$"),"")),e)))).join("/")}function V(e){const t=G(e)[0],n=e.map((e=>Math.exp(e-t))),r=n.reduce(((e,t)=>e+t),0);return n.map((e=>e/r))}function q(e){const t=G(e)[0];let n=0;for(let s=0;s<e.length;++s)n+=Math.exp(e[s]-t);const r=Math.log(n);return e.map((e=>e-t-r))}function W(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],n=r);return[t,n]}function G(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],n=r);return[Number(t),n]}function H(e){return e>0&&0===(e&e-1)}class K{constructor(e){if(this.size=0|e,this.size<=1||!H(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let n=0;n<this.table.length;n+=2){const e=Math.PI*n/this.size;this.table[n]=Math.cos(e),this.table[n+1]=-Math.sin(e)}let t=0;for(let n=1;this.size>n;n<<=1)++t;this._width=t%2===0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let n=0;n<this._bitrev.length;++n){this._bitrev[n]=0;for(let e=0;e<this._width;e+=2){const t=this._width-e-2;this._bitrev[n]|=(n>>>e&3)<<t}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const n=t||new Array(e.length>>>1);for(let r=0;r<e.length;r+=2)n[r>>>1]=e[r];return n}toComplexArray(e,t){const n=t||this.createComplexArray();for(let r=0;r<n.length;r+=2)n[r]=e[r>>>1],n[r+1]=0;return n}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let n=0;n<e.length;++n)e[n]/=this.size}_transform4(e,t,n){const r=this._csize;let s,i,a=1<<this._width,o=r/a<<1;const l=this._bitrev;if(4===o)for(s=0,i=0;s<r;s+=o,++i){const n=l[i];this._singleTransform2(t,e,s,n,a)}else for(s=0,i=0;s<r;s+=o,++i){const r=l[i];this._singleTransform4(t,e,s,r,a,n)}const u=this.table;for(a>>=2;a>=2;a>>=2){o=r/a<<1;const t=o>>>2;for(s=0;s<r;s+=o){const r=s+t-1;for(let i=s,o=0;i<r;i+=2,o+=a){const r=i,s=r+t,a=s+t,l=a+t,d=e[r],c=e[r+1],p=e[s],h=e[s+1],f=e[a],m=e[a+1],g=e[l],_=e[l+1],w=u[o],y=n*u[o+1],b=p*w-h*y,v=p*y+h*w,x=u[2*o],$=n*u[2*o+1],k=f*x-m*$,E=f*$+m*x,S=u[3*o],C=n*u[3*o+1],A=g*S-_*C,T=g*C+_*S,z=d+k,I=c+E,M=d-k,O=c-E,B=b+A,R=v+T,P=n*(b-A),D=n*(v-T);e[r]=z+B,e[r+1]=I+R,e[s]=M+D,e[s+1]=O-P,e[a]=z-B,e[a+1]=I-R,e[l]=M-D,e[l+1]=O+P}}}}_singleTransform2(e,t,n,r,s){const i=e[r],a=e[r+1],o=e[r+s],l=e[r+s+1];t[n]=i+o,t[n+1]=a+l,t[n+2]=i-o,t[n+3]=a-l}_singleTransform4(e,t,n,r,s,i){const a=2*s,o=3*s,l=e[r],u=e[r+1],d=e[r+s],c=e[r+s+1],p=e[r+a],h=e[r+a+1],f=e[r+o],m=e[r+o+1],g=l+p,_=u+h,w=l-p,y=u-h,b=d+f,v=c+m,x=i*(d-f),$=i*(c-m);t[n]=g+b,t[n+1]=_+v,t[n+2]=w+$,t[n+3]=y-x,t[n+4]=g-b,t[n+5]=_-v,t[n+6]=w-$,t[n+7]=y+x}_realTransform4(e,t,n){const r=this._csize;let s,i,a=1<<this._width,o=r/a<<1;const l=this._bitrev;if(4===o)for(s=0,i=0;s<r;s+=o,++i){const n=l[i];this._singleRealTransform2(t,e,s,n>>>1,a>>>1)}else for(s=0,i=0;s<r;s+=o,++i){const r=l[i];this._singleRealTransform4(t,e,s,r>>>1,a>>>1,n)}const u=this.table;for(a>>=2;a>=2;a>>=2){o=r/a<<1;const t=o>>>1,i=t>>>1,l=i>>>1;for(s=0;s<r;s+=o)for(let r=0,o=0;r<=l;r+=2,o+=a){const a=s+r,d=a+i,c=d+i,p=c+i,h=e[a],f=e[a+1],m=e[d],g=e[d+1],_=e[c],w=e[c+1],y=e[p],b=e[p+1],v=h,x=f,$=u[o],k=n*u[o+1],E=m*$-g*k,S=m*k+g*$,C=u[2*o],A=n*u[2*o+1],T=_*C-w*A,z=_*A+w*C,I=u[3*o],M=n*u[3*o+1],O=y*I-b*M,B=y*M+b*I,R=v+T,P=x+z,D=v-T,L=x-z,F=E+O,N=S+B,U=n*(E-O),j=n*(S-B);if(e[a]=R+F,e[a+1]=P+N,e[d]=D+j,e[d+1]=L-U,0===r){e[c]=R-F,e[c+1]=P-N;continue}if(r===l)continue;const V=s+i-r,q=s+t-r;e[V]=D-n*j,e[V+1]=-L-n*U,e[q]=R-n*F,e[q+1]=n*N-P}}const d=r>>>1;for(let c=2;c<d;c+=2)e[r-c]=e[c],e[r-c+1]=-e[c+1]}_singleRealTransform2(e,t,n,r,s){const i=e[r],a=e[r+s];t[n]=i+a,t[n+1]=0,t[n+2]=i-a,t[n+3]=0}_singleRealTransform4(e,t,n,r,s,i){const a=2*s,o=3*s,l=e[r],u=e[r+s],d=e[r+a],c=e[r+o],p=l+d,h=l-d,f=u+c,m=i*(u-c);t[n]=p+f,t[n+1]=0,t[n+2]=h,t[n+3]=-m,t[n+4]=p-f,t[n+5]=0,t[n+6]=h,t[n+7]=m}}class X{constructor(e){const t=2*(e-1),n=2*(2*e-1),r=2**Math.ceil(Math.log2(n));this.bufferSize=r,this._a=t;const s=new Float64Array(n),i=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const a=-2*Math.PI/e,o=Math.cos(a),l=Math.sin(a);for(let u=0;u<n>>1;++u){const t=(u+1-e)**2/2,n=Math.sqrt(o**2+l**2)**t,r=t*Math.atan2(l,o),a=2*u;s[a]=n*Math.cos(r),s[a+1]=n*Math.sin(r),i[a]=s[a],i[a+1]=-s[a+1]}this._slicedChirpBuffer=s.subarray(t,n),this._f=new K(r>>1),this._f.transform(this._chirpBuffer,i)}_transform(e,t,n){const r=this._buffer1,s=this._buffer2,i=this._outBuffer1,a=this._outBuffer2,o=this._chirpBuffer,l=this._slicedChirpBuffer,u=this._a;if(n)for(let d=0;d<l.length;d+=2){const e=d+1,n=t[d>>1];r[d]=n*l[d],r[e]=n*l[e]}else for(let d=0;d<l.length;d+=2){const e=d+1;r[d]=t[d]*l[d]-t[e]*l[e],r[e]=t[d]*l[e]+t[e]*l[d]}this._f.transform(i,r);for(let d=0;d<o.length;d+=2){const e=d+1;s[d]=i[d]*o[d]-i[e]*o[e],s[e]=i[d]*o[e]+i[e]*o[d]}this._f.inverseTransform(a,s);for(let d=0;d<a.length;d+=2){const t=a[d+u],n=a[d+u+1],r=l[d],s=l[d+1];e[d]=t*r-n*s,e[d+1]=t*s+n*r}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class Y{constructor(e){this.fft_length=e,this.isPowerOfTwo=H(e),this.isPowerOfTwo?(this.fft=new K(e),this.outputBufferSize=2*e):(this.fft=new X(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function Q(e,t){if(t%2===0||t<=0)throw new Error("Window size must be a positive odd number");const n=new e.constructor(e.length),r=new e.constructor(t),s=Math.floor(t/2);for(let i=0;i<e.length;++i){let t=0;for(let n=-s;n<=s;++n){let s=i+n;s<0?s=Math.abs(s):s>=e.length&&(s=2*(e.length-1)-s),r[t++]=e[s]}r.sort(),n[i]=r[s]}return n}function Z(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}function J(e){const t=e.length,n=e[0].length,r=[t+1,n+1],s=Array.from({length:r[0]},(()=>Array(r[1]).fill(1/0)));s[0][0]=0;const i=Array.from({length:r[0]},(()=>Array(r[1]).fill(-1)));for(let d=1;d<r[1];++d)for(let t=1;t<r[0];++t){const n=s[t-1][d-1],r=s[t-1][d],a=s[t][d-1];let o,l;n<r&&n<a?(o=n,l=0):r<n&&r<a?(o=r,l=1):(o=a,l=2),s[t][d]=e[t-1][d-1]+o,i[t][d]=l}for(let d=0;d<r[1];++d)i[0][d]=2;for(let d=0;d<r[0];++d)i[d][0]=1;let a=t,o=n,l=[],u=[];for(;a>0||o>0;)switch(l.push(a-1),u.push(o-1),i[a][o]){case 0:--a,--o;break;case 1:--a;break;case 2:--o;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${a}, ${o}]. Please file a bug report.`)}return l.reverse(),u.reverse(),[l,u]}var ee,te,ne,re,se,ie,ae,oe,le,ue,de,ce,pe,he,fe,me,ge,_e,we,ye,be,ve,xe,$e,ke,Ee,Se,Ce,Ae,Te,ze,Ie,Me,Oe,Be=n(52),Re=n.t(Be,2),Pe=Object.defineProperty,De=Object.getOwnPropertyDescriptor,Le=Object.getOwnPropertyNames,Fe=Object.prototype.hasOwnProperty,Ne=(ee=function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')},typeof require<"u"?require:typeof Proxy<"u"?new Proxy(ee,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):ee),Ue=(e,t)=>()=>(e&&(t=e(e=0)),t),je=(e,t)=>{for(var n in t)Pe(e,n,{get:t[n],enumerable:!0})},Ve=e=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of Le(t))!Fe.call(e,s)&&s!==n&&Pe(e,s,{get:()=>t[s],enumerable:!(r=De(t,s))||r.enumerable});return e})(Pe({},"__esModule",{value:!0}),e),qe=Ue((()=>{te=new Map,ne=[],re=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{let r=te.get(e);if(void 0===r)te.set(e,{backend:t,priority:n});else{if(r.priority>n)return;if(r.priority===n&&r.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){let t=ne.indexOf(e);-1!==t&&ne.splice(t,1);for(let r=0;r<ne.length;r++)if(te.get(ne[r]).priority<=n)return void ne.splice(r,0,e);ne.push(e)}}},se=async e=>{let t=te.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},ie=async e=>{let t,n=e.executionProviders||[],r=n.map((e=>"string"==typeof e?e:e.name)),s=0===r.length?ne:r,i=[],a=new Set;for(let l of s){let e=await se(l);"string"==typeof e?i.push({name:l,err:e}):(t||(t=e),t===e&&a.add(l))}if(!t)throw new Error(`no available backend found. ERR: ${i.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`);for(let{name:l,err:u}of i)r.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${u}`);let o=n.filter((e=>a.has("string"==typeof e?e:e.name)));return[t,new Proxy(e,{get:(e,t)=>"executionProviders"===t?o:Reflect.get(e,t)})]}})),We=Ue((()=>{qe()})),Ge=Ue((()=>{ae="1.20.0-dev.20240928-1bda91fc57"})),He=Ue((()=>{Ge(),oe="warning",le={wasm:{},webgl:{},webgpu:{},versions:{common:ae},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);oe=e}},get logLevel(){return oe}},Object.defineProperty(le,"logLevel",{enumerable:!0})})),Ke=Ue((()=>{He(),ue=le})),Xe=Ue((()=>{de=(e,t)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];let r=n.getContext("2d");if(null!=r){let s,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[3]):(s=e.dims[3],i=e.dims[2]);let a,o,l=void 0!==t?.format?t.format:"RGB",u=t?.norm;void 0===u||void 0===u.mean?a=[255,255,255,255]:"number"==typeof u.mean?a=[u.mean,u.mean,u.mean,u.mean]:(a=[u.mean[0],u.mean[1],u.mean[2],0],void 0!==u.mean[3]&&(a[3]=u.mean[3])),void 0===u||void 0===u.bias?o=[0,0,0,0]:"number"==typeof u.bias?o=[u.bias,u.bias,u.bias,u.bias]:(o=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(o[3]=u.bias[3]));let d=i*s,c=0,p=d,h=2*d,f=-1;"RGBA"===l?(c=0,p=d,h=2*d,f=3*d):"RGB"===l?(c=0,p=d,h=2*d):"RBG"===l&&(c=0,h=d,p=2*d);for(let t=0;t<i;t++)for(let n=0;n<s;n++){let s=(e.data[c++]-o[0])*a[0],i=(e.data[p++]-o[1])*a[1],l=(e.data[h++]-o[2])*a[2],u=-1===f?255:(e.data[f++]-o[3])*a[3];r.fillStyle="rgba("+s+","+i+","+l+","+u+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},ce=(e,t)=>{let n,r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null==r)throw new Error("Can not access image data");{let s,i,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[1],a=e.dims[3]):(s=e.dims[3],i=e.dims[2],a=e.dims[1]);let o,l,u=void 0!==t&&void 0!==t.format?t.format:"RGB",d=t?.norm;void 0===d||void 0===d.mean?o=[255,255,255,255]:"number"==typeof d.mean?o=[d.mean,d.mean,d.mean,d.mean]:(o=[d.mean[0],d.mean[1],d.mean[2],255],void 0!==d.mean[3]&&(o[3]=d.mean[3])),void 0===d||void 0===d.bias?l=[0,0,0,0]:"number"==typeof d.bias?l=[d.bias,d.bias,d.bias,d.bias]:(l=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(l[3]=d.bias[3]));let c=i*s;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");let p=4,h=0,f=1,m=2,g=3,_=0,w=c,y=2*c,b=-1;"RGBA"===u?(_=0,w=c,y=2*c,b=3*c):"RGB"===u?(_=0,w=c,y=2*c):"RBG"===u&&(_=0,y=c,w=2*c),n=r.createImageData(s,i);for(let t=0;t<i*s;h+=p,f+=p,m+=p,g+=p,t++)n.data[h]=(e.data[_++]-l[0])*o[0],n.data[f]=(e.data[w++]-l[1])*o[1],n.data[m]=(e.data[y++]-l[2])*o[2],n.data[g]=-1===b?255:(e.data[b++]-l[3])*o[3]}return n}})),Ye=Ue((()=>{Je(),pe=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");let n,r,{height:s,width:i}=t,a=t.norm??{mean:255,bias:0};n="number"==typeof a.mean?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],r="number"==typeof a.bias?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=s*i,d="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u),c=4,p=0,h=1,f=2,m=3,g=0,_=u,w=2*u,y=-1;"RGB"===o&&(c=3,p=0,h=1,f=2,m=-1),"RGBA"===l?y=3*u:"RBG"===l?(g=0,w=u,_=2*u):"BGR"===l&&(w=0,_=u,g=2*u);for(let b=0;b<u;b++,p+=c,f+=c,h+=c,m+=c)d[g++]=(e[p]+r[0])/n[0],d[_++]=(e[h]+r[1])/n[1],d[w++]=(e[f]+r[2])/n[2],-1!==y&&-1!==m&&(d[y++]=(e[m]+r[3])/n[3]);return new ke("float32",d,"RGBA"===l?[1,4,s,i]:[1,3,s,i])},he=async(e,t)=>{let n,r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,a="string"==typeof e,o=t??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(r){let r=l();r.width=e.width,r.height=e.height;let s=u(r);if(null==s)throw new Error("Can not access image data");{let r=e.height,i=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(r=t.resizedHeight,i=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=r,o.width=i}else o.tensorFormat="RGBA",o.height=r,o.width=i;s.drawImage(e,0,0),n=s.getImageData(0,0,i,r).data}}else{if(!s){if(i){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");let r=l();r.width=e.width,r.height=e.height;let s=u(r);if(null!=s){let t=e.height,r=e.width;return s.drawImage(e,0,0,r,t),n=s.getImageData(0,0,r,t).data,o.height=t,o.width=r,pe(n,o)}throw new Error("Can not access image data")}if(a)return new Promise(((t,n)=>{let r=l(),s=u(r);if(!e||!s)return n();let i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,s.drawImage(i,0,0,r.width,r.height);let e=s.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(pe(e.data,o))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let r,s;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,s=t.resizedWidth):(r=e.height,s=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=r,o.width=s,void 0!==t){let t=l();t.width=s,t.height=r;let i=u(t);if(null==i)throw new Error("Can not access image data");i.putImageData(e,0,0),n=i.getImageData(0,0,s,r).data}else n=e.data}}if(void 0!==n)return pe(n,o);throw new Error("Input data provided is not supported - aborted tensor creation")},fe=(e,t)=>{let{width:n,height:r,download:s,dispose:i}=t;return new ke({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:s,dispose:i})},me=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:i}=t;return new ke({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:s,dispose:i})},ge=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:i}=t;return new ke({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:r,download:s,dispose:i})},_e=(e,t,n)=>new ke({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})})),Qe=Ue((()=>{we=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),ye=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),be=!1,ve=()=>{if(!be){be=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,n=typeof Float16Array<"u"&&Float16Array.from;e&&(we.set("int64",BigInt64Array),ye.set(BigInt64Array,"int64")),t&&(we.set("uint64",BigUint64Array),ye.set(BigUint64Array,"uint64")),n?(we.set("float16",Float16Array),ye.set(Float16Array,"float16")):we.set("float16",Uint16Array)}}})),Ze=Ue((()=>{Je(),xe=e=>{let t=1;for(let n=0;n<e.length;n++){let r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},$e=(e,t)=>{switch(e.location){case"cpu":return new ke(e.type,e.data,t);case"cpu-pinned":return new ke({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new ke({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new ke({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new ke({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}})),Je=Ue((()=>{Xe(),Ye(),Qe(),Ze(),ke=class{constructor(e,t,n){let r,s;if(ve(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{let t=we.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if("string"==typeof e)if(r=e,a=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{let n=we.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)i=t;else{if(!(t instanceof Uint8ClampedArray))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");i=Uint8Array.from(t)}}else if(a=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");let t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",i=Uint8Array.from(e);else{let t=ye.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===a)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");s=a,this.cpuData=i,this.dataLocation="cpu"}let i=xe(s);if(this.cpuData&&i!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(i/2)!==this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=i}static async fromImage(e,t){return he(e,t)}static fromTexture(e,t){return fe(e,t)}static fromGpuBuffer(e,t){return me(e,t)}static fromMLTensor(e,t){return ge(e,t)}static fromPinnedBuffer(e,t,n){return _e(e,t,n)}toDataURL(e){return de(this,e)}toImageData(e){return ce(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return $e(this,e)}}})),et=Ue((()=>{Je(),Ee=ke})),tt=Ue((()=>{He(),Se=(e,t)=>{(typeof le.trace>"u"?!le.wasm.trace:!le.trace)||console.timeStamp(`${e}::ORT::${t}`)},Ce=(e,t)=>{let n=(new Error).stack?.split(/\r\n|\r|\n/g)||[],r=!1;for(let s=0;s<n.length;s++){if(r&&!n[s].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[s].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void Se("CPU",r)}n[s].includes("TRACE_FUNC")&&(r=!0)}},Ae=e=>{(typeof le.trace>"u"?!le.wasm.trace:!le.trace)||Ce("BEGIN",e)},Te=e=>{(typeof le.trace>"u"?!le.wasm.trace:!le.trace)||Ce("END",e)}})),nt=Ue((()=>{qe(),et(),tt(),ze=class e{constructor(e){this.handler=e}async run(e,t,n){Ae();let r={},s={};if("object"!=typeof e||null===e||e instanceof Ee||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Ee)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,a=Object.getOwnPropertyNames(t);for(let n of this.outputNames)if(-1!==a.indexOf(n)){let s=t[n];(null===s||s instanceof Ee)&&(e=!0,i=!1,r[n]=s)}if(e){if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(i)for(let l of this.outputNames)r[l]=null;let a=await this.handler.run(e,r,s),o={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let e=a[l];o[l]=e instanceof Ee?e:new Ee(e.type,e.data,e.dims)}return Te(),o}async release(){return this.handler.dispose()}static async create(t,n,r,s){Ae();let i,a={};if("string"==typeof t){if(i=t,"object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(i=t,"object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let e=t,o=0,l=t.byteLength;if("object"==typeof n&&null!==n)a=n;else if("number"==typeof n){if(o=n,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(l=t.byteLength-o,"number"==typeof r){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||o+l>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-o}].`);if("object"==typeof s&&null!==s)a=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(e,o,l)}}let[o,l]=await ie(a),u=await o.createInferenceSessionHandler(i,l);return Te(),new e(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}})),rt=Ue((()=>{nt(),Ie=ze})),st=Ue((()=>{})),it=Ue((()=>{})),at=Ue((()=>{})),ot=Ue((()=>{})),lt=Ue((()=>{qe(),et(),Me=class e{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,n){let r=t.evalModel||"",s=t.optimizerModel||"",i=n||{},[a,o]=await ie(i);if(a.createTrainingSessionHandler){let n=await a.createTrainingSessionHandler(t.checkpointState,t.trainModel,r,s,o);return new e(n,!!t.optimizerModel,!!t.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(e,t,n,r,s){let i={},a={};if("object"!=typeof n||null===n||n instanceof Ee||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if("object"==typeof r){if(null===r)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof Ee)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let e of r){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);i[e]=null}if("object"==typeof s&&null!==s)a=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,n=Object.getOwnPropertyNames(r);for(let s of t)if(-1!==n.indexOf(s)){let t=r[s];(null===t||t instanceof Ee)&&(e=!0,o=!1,i[s]=t)}if(e){if("object"==typeof s&&null!==s)a=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else a=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof n[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(o)for(let l of t)i[l]=null;return[i,a]}convertHandlerReturnTypeToMapOfTensors(e){let t={};for(let n in e)if(Object.hasOwnProperty.call(e,n)){let r=e[n];t[n]=r instanceof Ee?r:new Ee(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){let[r,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),i=await this.handler.runTrainStep(e,r,s);return this.convertHandlerReturnTypeToMapOfTensors(i)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){let[r,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),i=await this.handler.runEvalStep(e,r,s);return this.convertHandlerReturnTypeToMapOfTensors(i)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this.handler.getParametersSize(e)}async loadParametersBuffer(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}})),ut=Ue((()=>{lt(),Oe=Me})),dt={};je(dt,{InferenceSession:()=>Ie,TRACE:()=>Se,TRACE_FUNC_BEGIN:()=>Ae,TRACE_FUNC_END:()=>Te,Tensor:()=>Ee,TrainingSession:()=>Oe,env:()=>ue,registerBackend:()=>re});var ct=Ue((()=>{We(),Ke(),rt(),et(),st(),it(),tt(),at(),ot(),ut()})),pt=Ue((()=>{})),ht={};je(ht,{default:()=>gt});var ft,mt,gt,_t=Ue((()=>{Sc(),Tu(),Au(),ft="ort-wasm-proxy-worker",(mt=globalThis.self?.name===ft)&&(self.onmessage=e=>{let{type:t,in:n}=e.data;try{switch(t){case"init-wasm":Pt(n.wasm).then((()=>{Hd(n).then((()=>{postMessage({type:t})}),(e=>{postMessage({type:t,err:e})}))}),(e=>{postMessage({type:t,err:e})}));break;case"init-ep":{let{epName:e,env:r}=n;Kd(r,e).then((()=>{postMessage({type:t})}),(e=>{postMessage({type:t,err:e})}));break}case"copy-from":{let{buffer:e}=n,r=Qd(e);postMessage({type:t,out:r});break}case"create":{let{model:e,options:r}=n;Zd(e,r).then((e=>{postMessage({type:t,out:e})}),(e=>{postMessage({type:t,err:e})}));break}case"release":Jd(n),postMessage({type:t});break;case"run":{let{sessionId:e,inputIndices:r,inputs:s,outputIndices:i,options:a}=n;tc(e,r,s,i,new Array(i.length).fill(null),a).then((e=>{e.some((e=>"cpu"!==e[3]))?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:e},rc([...s,...e]))}),(e=>{postMessage({type:t,err:e})}));break}case"end-profiling":nc(n),postMessage({type:t})}}catch(r){postMessage({type:t,err:r})}}),gt=mt?null:e=>new Worker(e??xt,{type:"module",name:ft})})),wt={};je(wt,{default:()=>vt});var yt,bt,vt,xt,$t,kt,Et,St,Ct,At,Tt,zt,It,Mt,Ot,Bt,Rt,Pt,Dt,Lt,Ft,Nt,Ut,jt,Vt,qt,Wt,Gt,Ht,Kt,Xt,Yt,Qt,Zt,Jt,en,tn,nn,rn,sn,an,on,ln,un,dn,cn,pn,hn,fn,mn,gn,_n,wn,yn,bn,vn,xn,$n,kn,En,Sn,Cn,An,Tn,zn,In,Mn,On,Bn,Rn,Pn,Dn,Ln,Fn,Nn,Un,jn,Vn,qn,Wn,Gn,Hn,Kn,Xn,Yn,Qn,Zn,Jn,er,tr,nr,rr,sr,ir,ar,or,lr,ur,dr,cr,pr,hr,fr,mr,gr,_r,wr,yr,br,vr,xr,$r,kr,Er,Sr,Cr,Ar,Tr,zr,Ir,Mr,Or,Br,Rr,Pr,Dr,Lr,Fr,Nr,Ur,jr,Vr,qr,Wr,Gr,Hr,Kr,Xr,Yr,Qr,Zr,Jr,es,ts,ns,rs,ss,is,as,os,ls,us,ds,cs,ps,hs,fs,ms,gs,_s,ws,ys,bs,vs,xs,$s,ks,Es,Ss,Cs,As,Ts,zs,Is,Ms,Os,Bs,Rs,Ps,Ds,Ls,Fs,Ns,Us,js,Vs,qs,Ws,Gs,Hs,Ks,Xs,Ys,Qs,Zs,Js,ei,ti,ni,ri,si,ii,ai,oi,li,ui,di,ci,pi,hi,fi,mi,gi,_i,wi,yi,bi,vi,xi,$i,ki,Ei,Si,Ci,Ai,Ti,zi,Ii,Mi,Oi,Bi,Ri,Pi,Di,Li,Fi,Ni,Ui,ji,Vi,qi,Wi,Gi,Hi,Ki,Xi,Yi,Qi,Zi,Ji,ea,ta,na,ra,sa,ia,aa,oa,la,ua,da,ca,pa,ha,fa,ma,ga,_a,wa,ya,ba,va,xa,$a,ka,Ea,Sa,Ca,Aa,Ta,za,Ia,Ma,Oa,Ba,Ra,Pa,Da,La,Fa,Na,Ua,ja,Va,qa,Wa,Ga,Ha,Ka,Xa,Ya,Qa,Za,Ja,eo,to,no,ro,so,io,ao,oo,lo,uo,co,po,ho,fo,mo,go,_o,wo,yo,bo,vo,xo,$o,ko,Eo,So,Co,Ao,To,zo,Io,Mo,Oo,Bo,Ro,Po,Do,Lo,Fo,No,Uo,jo,Vo,qo,Wo,Go,Ho,Ko,Xo,Yo,Qo,Zo,Jo,el,tl,nl,rl,sl,il,al,ol,ll,ul,dl,cl,pl,hl,fl,ml,gl,_l,wl,yl,bl,vl,xl,$l,kl,El,Sl,Cl,Al,Tl,zl,Il,Ml,Ol,Bl,Rl,Pl,Dl,Ll,Fl,Nl,Ul,jl,Vl,ql,Wl,Gl,Hl,Kl,Xl,Yl,Ql,Zl,Jl,eu,tu,nu,ru,su,iu,au,ou,lu,uu,du,cu,pu,hu,fu,mu,gu,_u,wu,yu,bu,vu,xu,$u,ku,Eu,Su,Cu=Ue((()=>{yt="file:///Users/ganesh/work/privacy-preserving-surveillance/frontend/node_modules/@xenova/transformers/node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs",bt=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};function t(){return I.buffer!=B.buffer&&W(),B}function r(){return I.buffer!=B.buffer&&W(),R}function s(){return I.buffer!=B.buffer&&W(),P}function i(){return I.buffer!=B.buffer&&W(),D}function a(){return I.buffer!=B.buffer&&W(),L}function o(){return I.buffer!=B.buffer&&W(),F}function l(){return I.buffer!=B.buffer&&W(),N}function u(){return I.buffer!=B.buffer&&W(),V}var d,c,p=Object.assign({},e),h=new Promise(((e,t)=>{d=e,c=t})),f="object"==typeof window,m="function"==typeof importScripts,g=m&&"em-pthread"==self.name;p.mountExternalData=(e,t)=>{e.startsWith("./")&&(e=e.substring(2)),(p.Fb||(p.Fb=new Map)).set(e,t)},p.unmountExternalData=()=>{delete p.Fb};var _=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let w=()=>{let e=(e,t,n)=>function(){for(var r=arguments.length,s=new Array(r),i=0;i<r;i++)s[i]=arguments[i];let a=Ht,o=t?.();s=e(...s);let l=t?.();return o!==l&&(e=l,n(o),t=n=null),Ht!=a?new Promise(((e,t)=>{Jt={resolve:e,reject:t}})):s},t=e=>async function(){try{if(p.Eb)throw Error("Session already started");let t=p.Eb={fc:arguments.length<=0?void 0:arguments[0],errors:[]},n=await e(...arguments);if(p.Eb!==t)throw Error("Session mismatch");p.Gb?.flush();let r=t.errors;if(0<r.length){let e=await Promise.all(r);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join("\n"))}return n}finally{p.Eb=null}};p._OrtCreateSession=e(p._OrtCreateSession,(()=>p._OrtCreateSession),(e=>p._OrtCreateSession=e)),p._OrtRun=t(e(p._OrtRun,(()=>p._OrtRun),(e=>p._OrtRun=e))),p._OrtRunWithBinding=t(e(p._OrtRunWithBinding,(()=>p._OrtRunWithBinding),(e=>p._OrtRunWithBinding=e))),p._OrtBindInput=e(p._OrtBindInput,(()=>p._OrtBindInput),(e=>p._OrtBindInput=e)),w=void 0};p.jsepInit=(e,t)=>{if(w?.(),"webgpu"===e){[p.Gb,p.Ub,p.Yb,p.Nb,p.Xb,p.jb,p.Zb,p.bc,p.Vb,p.Wb,p.$b]=t;let e=p.Gb;p.jsepRegisterBuffer=(t,n,r,s)=>e.registerBuffer(t,n,r,s),p.jsepGetBuffer=t=>e.getBuffer(t),p.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r),p.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},p.jsepOnRunStart=t=>e.onRunStart(t),p.cc=(t,n)=>{e.upload(t,n)}}else if("webnn"===e){[p.Gb,p.ac,p.Ob,p.jsepEnsureTensor,p.dc,p.jsepDownloadTensor]=t,p.jsepReleaseTensorId=p.Ob;let e=p.Gb;p.jsepOnRunStart=t=>e.onRunStart(t),p.jsepRegisterMLContext=(t,n)=>{e.registerMLContext(t,n)},p.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},p.jsepCreateMLTensorDownloader=(t,n)=>e.createMLTensorDownloader(t,n),p.jsepRegisterMLTensor=(t,n,r)=>e.registerMLTensor(t,n,r)}};var y,b,v=Object.assign({},p),x=(e,t)=>{throw t},$="";(f||m)&&(m?$=self.location.href:typeof document<"u"&&document.currentScript&&($=document.currentScript.src),yt&&($=yt),$=$.startsWith("blob:")?"":$.substr(0,$.replace(/[?#].*/,"").lastIndexOf("/")+1),m&&(b=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),y=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var k,E=console.log.bind(console),S=console.error.bind(console),C=E,A=S;if(Object.assign(p,v),v=null,g){let e=function(t){try{var n=t.data,r=n.cmd;if("load"===r){let t=[];self.onmessage=e=>t.push(e),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let n of t)e(n);self.onmessage=e};for(let e of n.handlers)p[e]&&!p[e].proxy||(p[e]=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];postMessage({Mb:"callHandler",oc:e,args:n})},"print"==e&&(C=p[e]),"printErr"==e&&(A=p[e]));I=n.wasmMemory,W(),T(n.wasmModule)}else if("run"===r){$r(n.pthread_ptr,0,0,1,0,0),Rt(n.pthread_ptr),Se(),xe(),z||(wr(),z=!0);try{Ce(n.start_routine,n.arg)}catch(s){if("unwind"!=s)throw s}}else"cancel"===r?br()&&Cr(-1):"setimmediate"!==n.target&&("checkMailbox"===r?z&&Pt():r&&(A(`worker: received unknown command ${r}`),A(n)))}catch(s){throw kr(),s}};var T,z=!1;A=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];t=t.join(" "),console.error(t)},self.alert=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];postMessage({Mb:"alert",text:t.join(" "),qc:br()})},p.instantiateWasm=(e,t)=>new Promise((e=>{T=n=>{n=new WebAssembly.Instance(n,ie()),t(n),e()}})),self.onunhandledrejection=e=>{throw e.reason||e},self.onmessage=e}p.wasmBinary&&(k=p.wasmBinary);var I,M,O,B,R,P,D,L,F,N,U,j,V,q=!1;function W(){var e=I.buffer;p.HEAP8=B=new Int8Array(e),p.HEAP16=P=new Int16Array(e),p.HEAPU8=R=new Uint8Array(e),p.HEAPU16=D=new Uint16Array(e),p.HEAP32=L=new Int32Array(e),p.HEAPU32=F=new Uint32Array(e),p.HEAPF32=N=new Float32Array(e),p.HEAPF64=V=new Float64Array(e),p.HEAP64=U=new BigInt64Array(e),p.HEAPU64=j=new BigUint64Array(e)}if(!g){if(!((I=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof _))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");W()}var G=[],H=[],K=[],X=0,Y=null,Q=null;function Z(){if(0==--X&&(null!==Y&&(clearInterval(Y),Y=null),Q)){var e=Q;Q=null,e()}}function J(e){throw A(e="Aborted("+e+")"),q=!0,O=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),c(e),e}var ee,te=e=>e.startsWith("data:application/octet-stream;base64,"),ne=e=>e.startsWith("file://");function re(e){if(e==ee&&k)return new Uint8Array(k);if(b)return b(e);throw"both async and sync fetching of the wasm failed"}function se(e,t,n){return function(e){if(!k&&(f||m)){if("function"==typeof fetch&&!ne(e))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw`failed to load wasm binary file at '${e}'`;return t.arrayBuffer()})).catch((()=>re(e)));if(y)return new Promise(((t,n)=>{y(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>re(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then(n,(e=>{A(`failed to asynchronously prepare wasm: ${e}`),J(e)}))}function ie(){return{a:{O:le,Aa:oe,b:Te,aa:Ie,B:Re,qa:Pe,Y:Ne,_:Ue,ra:je,oa:Ve,ha:qe,na:We,L:Ge,Z:He,W:Ke,pa:Xe,X:Ye,wa:Je,F:at,Q:lt,P:gt,E:wt,u:bt,q:vt,G:xt,A:zt,R:It,ua:Mt,ka:Ot,U:Dt,ba:Ft,H:Nt,ja:Rt,ta:Ut,t:qt,x:nn,o:sn,l:ln,c:ct,n:dn,j:fn,w:mn,p:gn,g:_n,s:wn,m:yn,e:bn,k:vn,i:xn,h:$n,d:kn,ea:En,fa:Tn,ga:zn,ca:In,da:Mn,T:On,f:Pn,D:Dn,I:Ln,M:Fn,y:Nn,sa:jn,V:Vn,v:Un,z:qn,N:Wn,S:Gn,za:Yn,ya:Qn,la:tr,ma:nr,$:ge,C:rr,K:sr,ia:ir,J:or,a:I,xa:fe,va:cr,r:pr}}}var ae={867476:(e,t,n,s,i)=>{if(void 0===p||!p.Fb)return 1;if((e=Be(e>>>0)).startsWith("./")&&(e=e.substring(2)),!(e=p.Fb.get(e)))return 2;if(s>>>=0,(t>>>=0)+(n>>>=0)>e.byteLength)return 3;try{let a=e.subarray(t,t+n);switch(i){case 0:r().set(a,s>>>0);break;case 1:p.cc(s,a);break;default:return 4}return 0}catch{return 4}},868159:(e,t,n)=>{p.dc(e,r().subarray(t>>>0,t+n>>>0))},868222:()=>p.ac(),868263:e=>{p.Ob(e)},868299:()=>{p.Vb()},868330:()=>{p.Wb()},868359:()=>{p.$b()},868384:e=>p.Ub(e),868417:e=>p.Yb(e),868449:(e,t,n)=>{p.Nb(e,t,n,!0)},868488:(e,t,n)=>{p.Nb(e,t,n)},868521:()=>typeof wasmOffsetConverter<"u",868578:e=>{p.jb("Abs",e,void 0)},868629:e=>{p.jb("Neg",e,void 0)},868680:e=>{p.jb("Floor",e,void 0)},868733:e=>{p.jb("Ceil",e,void 0)},868785:e=>{p.jb("Reciprocal",e,void 0)},868843:e=>{p.jb("Sqrt",e,void 0)},868895:e=>{p.jb("Exp",e,void 0)},868946:e=>{p.jb("Erf",e,void 0)},868997:e=>{p.jb("Sigmoid",e,void 0)},869052:(e,t,n)=>{p.jb("HardSigmoid",e,{alpha:t,beta:n})},869131:e=>{p.jb("Log",e,void 0)},869182:e=>{p.jb("Sin",e,void 0)},869233:e=>{p.jb("Cos",e,void 0)},869284:e=>{p.jb("Tan",e,void 0)},869335:e=>{p.jb("Asin",e,void 0)},869387:e=>{p.jb("Acos",e,void 0)},869439:e=>{p.jb("Atan",e,void 0)},869491:e=>{p.jb("Sinh",e,void 0)},869543:e=>{p.jb("Cosh",e,void 0)},869595:e=>{p.jb("Asinh",e,void 0)},869648:e=>{p.jb("Acosh",e,void 0)},869701:e=>{p.jb("Atanh",e,void 0)},869754:e=>{p.jb("Tanh",e,void 0)},869806:e=>{p.jb("Not",e,void 0)},869857:(e,t,n)=>{p.jb("Clip",e,{min:t,max:n})},869926:e=>{p.jb("Clip",e,void 0)},869978:(e,t)=>{p.jb("Elu",e,{alpha:t})},870036:e=>{p.jb("Gelu",e,void 0)},870088:e=>{p.jb("Relu",e,void 0)},870140:(e,t)=>{p.jb("LeakyRelu",e,{alpha:t})},870204:(e,t)=>{p.jb("ThresholdedRelu",e,{alpha:t})},870274:(e,t)=>{p.jb("Cast",e,{to:t})},870332:e=>{p.jb("Add",e,void 0)},870383:e=>{p.jb("Sub",e,void 0)},870434:e=>{p.jb("Mul",e,void 0)},870485:e=>{p.jb("Div",e,void 0)},870536:e=>{p.jb("Pow",e,void 0)},870587:e=>{p.jb("Equal",e,void 0)},870640:e=>{p.jb("Greater",e,void 0)},870695:e=>{p.jb("GreaterOrEqual",e,void 0)},870757:e=>{p.jb("Less",e,void 0)},870809:e=>{p.jb("LessOrEqual",e,void 0)},870868:(e,t,n,r,s)=>{p.jb("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},871027:(e,t,n,r,s)=>{p.jb("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},871185:(e,t,n,r,s)=>{p.jb("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},871343:(e,t,n,r,s)=>{p.jb("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},871502:(e,t,n,r,s)=>{p.jb("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},871660:(e,t,n,r,s)=>{p.jb("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},871817:(e,t,n,r,s)=>{p.jb("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},871974:(e,t,n,r,s)=>{p.jb("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},872135:(e,t,n,r,s)=>{p.jb("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},872299:(e,t,n,r,s)=>{p.jb("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},872463:e=>{p.jb("Where",e,void 0)},872516:(e,t,n)=>{p.jb("Transpose",e,{perm:t?Array.from(a().subarray(t>>>0,n>>>0)):[]})},872624:(e,t,n,r)=>{p.jb("DepthToSpace",e,{blocksize:t,mode:Be(n),format:r?"NHWC":"NCHW"})},872757:(e,t,n,r)=>{p.jb("DepthToSpace",e,{blocksize:t,mode:Be(n),format:r?"NHWC":"NCHW"})},872890:(e,n,r,s,i,o,l,u,d,c,h,f,m,g,_)=>{p.jb("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[r],group:s,kernelShape:[i],pads:[o,l],strides:[u],wIsConst:()=>!!t()[c>>>0],outputPadding:h?Array.from(a().subarray(h>>>0,f>>>0)):[],outputShape:m?Array.from(a().subarray(m>>>0,g>>>0)):[],activation:Be(_)})},873291:(e,n,r,s,i,o,l,u,d,c,h,f,m,g)=>{p.jb("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:n,dilations:Array.from(a().subarray(r>>>0,2+(r>>>0)>>>0)),group:s,kernelShape:Array.from(a().subarray(i>>>0,2+(i>>>0)>>>0)),pads:Array.from(a().subarray(o>>>0,4+(o>>>0)>>>0)),strides:Array.from(a().subarray(l>>>0,2+(l>>>0)>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:c?Array.from(a().subarray(c>>>0,h>>>0)):[],outputShape:f?Array.from(a().subarray(f>>>0,m>>>0)):[],activation:Be(g)})},873856:(e,n,r,s,i,o,l,u,d,c,h,f,m,g,_)=>{p.jb("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[r],group:s,kernelShape:[i],pads:[o,l],strides:[u],wIsConst:()=>!!t()[c>>>0],outputPadding:h?Array.from(a().subarray(h>>>0,f>>>0)):[],outputShape:m?Array.from(a().subarray(m>>>0,g>>>0)):[],activation:Be(_)})},874257:(e,n,r,s,i,o,l,u,d,c,h,f,m,g)=>{p.jb("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:n,dilations:Array.from(a().subarray(r>>>0,2+(r>>>0)>>>0)),group:s,kernelShape:Array.from(a().subarray(i>>>0,2+(i>>>0)>>>0)),pads:Array.from(a().subarray(o>>>0,4+(o>>>0)>>>0)),strides:Array.from(a().subarray(l>>>0,2+(l>>>0)>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:c?Array.from(a().subarray(c>>>0,h>>>0)):[],outputShape:f?Array.from(a().subarray(f>>>0,m>>>0)):[],activation:Be(g)})},874822:(e,t)=>{p.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},874913:(e,t,n,r,s,i,o,l,u,d,c,h,f,m)=>{p.jb("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:i?Array.from(a().subarray(i>>>0,o>>>0)):[],kernel_shape:l?Array.from(a().subarray(l>>>0,u>>>0)):[],pads:d?Array.from(a().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(a().subarray(h>>>0,f>>>0)):[]})},875328:(e,t)=>{p.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},875419:(e,t,n,r,s,i,o,l,u,d,c,h,f,m)=>{p.jb("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:i?Array.from(a().subarray(i>>>0,o>>>0)):[],kernel_shape:l?Array.from(a().subarray(l>>>0,u>>>0)):[],pads:d?Array.from(a().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(a().subarray(h>>>0,f>>>0)):[]})},875834:(e,t)=>{p.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},875921:(e,t,n,r,s,i,o,l,u,d,c,h,f,m)=>{p.jb("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:i?Array.from(a().subarray(i>>>0,o>>>0)):[],kernel_shape:l?Array.from(a().subarray(l>>>0,u>>>0)):[],pads:d?Array.from(a().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(a().subarray(h>>>0,f>>>0)):[]})},876332:(e,t)=>{p.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},876419:(e,t,n,r,s,i,o,l,u,d,c,h,f,m)=>{p.jb("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:i?Array.from(a().subarray(i>>>0,o>>>0)):[],kernel_shape:l?Array.from(a().subarray(l>>>0,u>>>0)):[],pads:d?Array.from(a().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(a().subarray(h>>>0,f>>>0)):[]})},876830:(e,t,n,r,s)=>{p.jb("Gemm",e,{alpha:t,beta:n,transA:r,transB:s})},876934:e=>{p.jb("MatMul",e,void 0)},876988:(e,t,n,r)=>{p.jb("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},877096:(e,t,n,r)=>{p.jb("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},877204:(e,t)=>{p.jb("Softmax",e,{axis:t})},877267:(e,t)=>{p.jb("Concat",e,{axis:t})},877327:(e,t,n,r,s)=>{p.jb("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},877467:e=>{p.jb("Expand",e,void 0)},877521:(e,t)=>{p.jb("Gather",e,{axis:Number(t)})},877592:(e,t)=>{p.jb("GatherElements",e,{axis:Number(t)})},877671:(e,t,n,r,s,i,o,l,u,d,c)=>{p.jb("Resize",e,{antialias:t,axes:n?Array.from(a().subarray(n>>>0,r>>>0)):[],coordinateTransformMode:Be(s),cubicCoeffA:i,excludeOutside:o,extrapolationValue:l,keepAspectRatioPolicy:Be(u),mode:Be(d),nearestMode:Be(c)})},878017:(e,t,n,r,s,i,o)=>{p.jb("Slice",e,{starts:t?Array.from(a().subarray(t>>>0,n>>>0)):[],ends:r?Array.from(a().subarray(r>>>0,s>>>0)):[],axes:i?Array.from(a().subarray(i>>>0,o>>>0)):[]})},878233:e=>{p.jb("Tile",e,void 0)},878285:(e,t,n)=>{p.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},878399:(e,t,n)=>{p.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},878513:e=>{p.jb("Range",e,void 0)},878566:(e,t)=>{p.jb("Einsum",e,{equation:Be(t)})},878647:(e,t,n,r,s)=>{p.jb("Pad",e,{mode:t,value:n,pads:r?Array.from(a().subarray(r>>>0,s>>>0)):[]})},878774:(e,t,n,r,s,i)=>{p.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!s,trainingMode:!!r,format:i?"NHWC":"NCHW"})},878943:(e,t,n,r,s,i)=>{p.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!s,trainingMode:!!r,format:i?"NHWC":"NCHW"})},879112:(e,t,n)=>{p.jb("CumSum",e,{exclusive:Number(t),reverse:Number(n)})},879209:(e,t,n)=>{p.jb("DequantizeLinear",e,{axis:t,blockSize:n})},879299:(e,t,n,r,s,i,o,l,u)=>{p.jb("Attention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:s,doRotary:i,qkvHiddenSizes:o?Array.from(a().subarray(Number(l)>>>0,Number(l)+o>>>0)):[],pastPresentShareBuffer:!!u})},879571:e=>{p.jb("BiasAdd",e,void 0)},879626:e=>{p.jb("BiasSplitGelu",e,void 0)},879687:e=>{p.jb("FastGelu",e,void 0)},879743:(e,n,r,s,i,o,u,d,c,h,f,m,g,_,w,y)=>{p.jb("Conv",e,{format:m?"NHWC":"NCHW",auto_pad:n,dilations:r?Array.from(a().subarray(r>>>0,s>>>0)):[],group:i,kernel_shape:o?Array.from(a().subarray(o>>>0,u>>>0)):[],pads:d?Array.from(a().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(a().subarray(h>>>0,f>>>0)):[],w_is_const:()=>!!t()[g>>>0],activation:Be(_),activation_params:w?Array.from(l().subarray(w>>>0,y>>>0)):[]})},880239:e=>{p.jb("Gelu",e,void 0)},880291:(e,t,n,r)=>{p.jb("GroupQueryAttention",e,{numHeads:t,kvNumHeads:n,scale:r})},880404:(e,t,n,r)=>{p.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},880515:(e,t,n,r)=>{p.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},880626:(e,t,n,r,s,i)=>{p.jb("MatMulNBits",e,{k:t,n:n,accuracyLevel:r,bits:s,blockSize:i})},880753:(e,t,n,r,s,i)=>{p.jb("MultiHeadAttention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:s,doRotary:i})},880912:(e,t)=>{p.jb("QuickGelu",e,{alpha:t})},880976:(e,t,n,r,s)=>{p.jb("RotaryEmbedding",e,{interleaved:!!t,numHeads:n,rotaryEmbeddingDim:r,scale:s})},881115:(e,t,n)=>{p.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},881217:(e,t,n)=>{p.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},881319:(e,t,n,r)=>{p.jb("GatherBlockQuantized",e,{gatherAxis:t,quantizeAxis:n,blockSize:r})},881440:e=>{p.Zb(e)},881474:(e,t)=>p.bc(e,t,p.Eb.fc,p.Eb.errors)};function oe(e,t,n){return tn((async()=>{await p.Xb(e,t,n)}))}function le(){return typeof wasmOffsetConverter<"u"}function ue(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var de=e=>{e.terminate(),e.onmessage=()=>{}},ce=e=>{0==_e.length&&(ke(),$e(_e[0]));var t=_e.pop();if(!t)return 6;we.push(t),be[e.Ab]=t,t.Ab=e.Ab;var n={cmd:"run",start_routine:e.hc,arg:e.Qb,pthread_ptr:e.Ab};return t.postMessage(n,e.mc),0},pe=0,he=function(e,t){for(var n=2*(arguments.length<=2?0:arguments.length-2),r=Mr(),s=Ir(8*n),i=s>>>3,a=0;a<(arguments.length<=2?0:arguments.length-2);a++){var o=a+2<2||arguments.length<=a+2?void 0:arguments[a+2];"bigint"==typeof o?(U[i+2*a]=1n,U[i+2*a+1]=o):(U[i+2*a]=0n,u()[i+2*a+1>>>0]=o)}return e=Er(e,0,n,s,t),zr(r),e};function fe(e){if(g)return he(0,1,e);if(O=e,!(0<pe)){for(var t of we)de(t);for(t of _e)de(t);_e=[],we=[],be=[],q=!0}x(0,new ue(e))}function me(e){if(g)return he(1,0,e);ge(e)}var ge=e=>{if(O=e,g)throw me(e),"unwind";fe(e)},_e=[],we=[],ye=[],be={},ve=e=>{var t=e.Ab;delete be[t],_e.push(e),we.splice(we.indexOf(e),1),e.Ab=0,Sr(t)};function xe(){ye.forEach((e=>e()))}var $e=e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=br()){var s=be[n.targetThread];s?s.postMessage(n,n.transferList):A(`Internal error! Worker sent a message "${r}" to target pthread ${n.targetThread}, but that thread no longer exists!`)}else"checkMailbox"===r?Pt():"spawnThread"===r?ce(n):"cleanupThread"===r?ve(be[n.thread]):"killThread"===r?(n=n.thread,r=be[n],delete be[n],de(r),Sr(n),we.splice(we.indexOf(r),1),r.Ab=0):"cancelThread"===r?be[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(e.loaded=!0,t(e)):"alert"===r?alert(`Thread ${n.threadId}: ${n.text}`):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?p[n.handler](...n.args):r&&A(`worker sent an unknown command ${r}`)},e.onerror=e=>{throw A(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`),e};var n,r=[];for(n of[])p.hasOwnProperty(n)&&r.push(n);e.postMessage({cmd:"load",handlers:r,wasmMemory:I,wasmModule:M})}));function ke(){var e=new Worker(new URL("file:///Users/ganesh/work/privacy-preserving-surveillance/frontend/node_modules/@xenova/transformers/node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs"),{type:"module",workerData:"em-pthread",name:"em-pthread"});_e.push(e)}var Ee=e=>{for(;0<e.length;)e.shift()(p)},Se=()=>{var e=br(),t=o()[e+52>>>2>>>0];e=o()[e+56>>>2>>>0],Tr(t,t-e),zr(t)},Ce=(e,t)=>{pe=0,e=Or(e,t),0<pe?O=e:Cr(e)};class Ae{constructor(e){this.Jb=e-24}}function Te(e,t,n){var r=new Ae(e>>>=0);throw t>>>=0,n>>>=0,o()[r.Jb+16>>>2>>>0]=0,o()[r.Jb+4>>>2>>>0]=t,o()[r.Jb+8>>>2>>>0]=n,e}function ze(e,t,n,r){return g?he(2,1,e,t,n,r):Ie(e,t,n,r)}function Ie(e,t,n,r){if(e>>>=0,t>>>=0,n>>>=0,r>>>=0,void 0===_)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var s=[];return g&&0===s.length?ze(e,t,n,r):(e={hc:n,Ab:e,Qb:r,mc:s},g?(e.Mb="spawnThread",postMessage(e,s),0):ce(e))}var Me=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Oe=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&Me)return Me.decode(e.buffer instanceof _?e.slice(t,n):e.subarray(t,n));for(r="";t<n;){var s=e[t++];if(128&s){var i=63&e[t++];if(192==(224&s))r+=String.fromCharCode((31&s)<<6|i);else{var a=63&e[t++];65536>(s=224==(240&s)?(15&s)<<12|i<<6|a:(7&s)<<18|i<<12|a<<6|63&e[t++])?r+=String.fromCharCode(s):(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s))}}else r+=String.fromCharCode(s)}return r},Be=(e,t)=>(e>>>=0)?Oe(r(),e,t):"";function Re(e,t,n){return g?he(3,1,e,t,n):0}function Pe(e,t){if(g)return he(4,1,e,t)}var De=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},Le=(e,t,n,r)=>{if(!(0<r))return 0;var s=n>>>=0;r=n+r-1;for(var i=0;i<e.length;++i){var a=e.charCodeAt(i);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++i)),127>=a){if(n>=r)break;t[n++>>>0]=a}else{if(2047>=a){if(n+1>=r)break;t[n++>>>0]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++>>>0]=224|a>>12}else{if(n+3>=r)break;t[n++>>>0]=240|a>>18,t[n++>>>0]=128|a>>12&63}t[n++>>>0]=128|a>>6&63}t[n++>>>0]=128|63&a}}return t[n>>>0]=0,n-s},Fe=(e,t,n)=>Le(e,r(),t,n);function Ne(e,t){if(g)return he(5,1,e,t)}function Ue(e,t,n){if(g)return he(6,1,e,t,n)}function je(e,t,n){return g?he(7,1,e,t,n):0}function Ve(e,t){if(g)return he(8,1,e,t)}function qe(e,t,n){if(g)return he(9,1,e,t,n)}function We(e,t,n,r){if(g)return he(10,1,e,t,n,r)}function Ge(e,t,n,r){if(g)return he(11,1,e,t,n,r)}function He(e,t,n,r){if(g)return he(12,1,e,t,n,r)}function Ke(e){if(g)return he(13,1,e)}function Xe(e,t){if(g)return he(14,1,e,t)}function Ye(e,t,n){if(g)return he(15,1,e,t,n)}var Qe,Ze,Je=()=>{J("")},et=e=>{for(var t="";r()[e>>>0];)t+=Qe[r()[e++>>>0]];return t},tt={},nt={},rt={};function st(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};var r=t.name;if(!e)throw new Ze(`type "${r}" must have a positive integer typeid pointer`);if(nt.hasOwnProperty(e)){if(n.Sb)return;throw new Ze(`Cannot register type '${r}' twice`)}nt[e]=t,delete rt[e],tt.hasOwnProperty(e)&&(t=tt[e],delete tt[e],t.forEach((e=>e())))}(e,t,n)}var it=(e,n,l)=>{switch(n){case 1:return l?e=>t()[e>>>0]:e=>r()[e>>>0];case 2:return l?e=>s()[e>>>1>>>0]:e=>i()[e>>>1>>>0];case 4:return l?e=>a()[e>>>2>>>0]:e=>o()[e>>>2>>>0];case 8:return l?e=>U[e>>>3]:e=>j[e>>>3];default:throw new TypeError(`invalid integer width (${n}): ${e}`)}};function at(e,t,n){n>>>=0,st(e>>>=0,{name:t=et(t>>>0),fromWireType:e=>e,toWireType:function(e,t){if("bigint"!=typeof t&&"number"!=typeof t)throw t=null===t?"null":"object"==(e=typeof t)||"array"===e||"function"===e?t.toString():""+t,new TypeError(`Cannot convert "${t}" to ${this.name}`);return"number"==typeof t&&(t=BigInt(t)),t},argPackAdvance:ot,readValueFromPointer:it(t,n,-1==t.indexOf("u")),Db:null})}var ot=8;function lt(e,t,n,s){st(e>>>=0,{name:t=et(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:s},argPackAdvance:ot,readValueFromPointer:function(e){return this.fromWireType(r()[e>>>0])},Db:null})}var ut=[],dt=[];function ct(e){9<(e>>>=0)&&0==--dt[e+1]&&(dt[e]=void 0,ut.push(e))}var pt=e=>{if(!e)throw new Ze("Cannot use deleted val. handle = "+e);return dt[e]},ht=e=>{switch(e){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let t=ut.pop()||dt.length;return dt[t]=e,dt[t+1]=1,t}};function ft(e){return this.fromWireType(o()[e>>>2>>>0])}var mt={name:"emscripten::val",fromWireType:e=>{var t=pt(e);return ct(e),t},toWireType:(e,t)=>ht(t),argPackAdvance:ot,readValueFromPointer:ft,Db:null};function gt(e){return st(e>>>0,mt)}var _t=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(l()[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(u()[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}};function wt(e,t,n){n>>>=0,st(e>>>=0,{name:t=et(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,argPackAdvance:ot,readValueFromPointer:_t(t,n),Db:null})}function bt(e,t,n,r,s){if(e>>>=0,n>>>=0,t=et(t>>>0),-1===s&&(s=4294967295),s=e=>e,0===r){var i=32-8*n;s=e=>e<<i>>>i}var a=t.includes("unsigned")?function(e,t){return t>>>0}:function(e,t){return t};st(e,{name:t,fromWireType:s,toWireType:a,argPackAdvance:ot,readValueFromPointer:it(t,n,0!==r),Db:null})}function vt(e,n,r){function s(e){var n=o()[e>>>2>>>0];return e=o()[e+4>>>2>>>0],new i(t().buffer,e,n)}var i=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][n];st(e>>>=0,{name:r=et(r>>>0),fromWireType:s,argPackAdvance:ot,readValueFromPointer:s},{Sb:!0})}function xt(e,t){e>>>=0;var n="std::string"===(t=et(t>>>0));st(e,{name:t,fromWireType:function(e){var t=o()[e>>>2>>>0],s=e+4;if(n)for(var i=s,a=0;a<=t;++a){var l=s+a;if(a==t||0==r()[l>>>0]){if(i=Be(i,l-i),void 0===u)var u=i;else u+=String.fromCharCode(0),u+=i;i=l+1}}else{for(u=Array(t),a=0;a<t;++a)u[a]=String.fromCharCode(r()[s+a>>>0]);u=u.join("")}return xr(e),u},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var s="string"==typeof t;if(!(s||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new Ze("Cannot pass non-string to std::string");var i=n&&s?De(t):t.length,a=vr(4+i+1),l=a+4;if(o()[a>>>2>>>0]=i,n&&s)Fe(t,l,i+1);else if(s)for(s=0;s<i;++s){var u=t.charCodeAt(s);if(255<u)throw xr(l),new Ze("String has UTF-16 code units that do not fit in 8 bits");r()[l+s>>>0]=u}else for(s=0;s<i;++s)r()[l+s>>>0]=t[s];return null!==e&&e.push(xr,a),a},argPackAdvance:ot,readValueFromPointer:ft,Db(e){xr(e)}})}var $t=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,kt=(e,t)=>{for(var n=e>>1,a=n+t/2;!(n>=a)&&i()[n>>>0];)++n;if(32<(n<<=1)-e&&$t)return $t.decode(r().slice(e,n));for(n="",a=0;!(a>=t/2);++a){var o=s()[e+2*a>>>1>>>0];if(0==o)break;n+=String.fromCharCode(o)}return n},Et=(e,t,n)=>{if(n??=2147483647,2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var i=0;i<n;++i){var a=e.charCodeAt(i);s()[t>>>1>>>0]=a,t+=2}return s()[t>>>1>>>0]=0,t-r},St=e=>2*e.length,Ct=(e,t)=>{for(var n=0,r="";!(n>=t/4);){var s=a()[e+4*n>>>2>>>0];if(0==s)break;++n,65536<=s?(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s)):r+=String.fromCharCode(s)}return r},At=(e,t,n)=>{if(t>>>=0,n??=2147483647,4>n)return 0;var r=t;n=r+n-4;for(var s=0;s<e.length;++s){var i=e.charCodeAt(s);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),a()[t>>>2>>>0]=i,(t+=4)+4>n)break}return a()[t>>>2>>>0]=0,t-r},Tt=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t};function zt(e,t,n){if(e>>>=0,t>>>=0,n=et(n>>>=0),2===t)var r=kt,s=Et,a=St,l=e=>i()[e>>>1>>>0];else 4===t&&(r=Ct,s=At,a=Tt,l=e=>o()[e>>>2>>>0]);st(e,{name:n,fromWireType:e=>{for(var n,s=o()[e>>>2>>>0],i=e+4,a=0;a<=s;++a){var u=e+4+a*t;a!=s&&0!=l(u)||(i=r(i,u-i),void 0===n?n=i:(n+=String.fromCharCode(0),n+=i),i=u+t)}return xr(e),n},toWireType:(e,r)=>{if("string"!=typeof r)throw new Ze(`Cannot pass non-string to C++ string type ${n}`);var i=a(r),l=vr(4+i+t);return o()[l>>>2>>>0]=i/t,s(r,l+4,i+t),null!==e&&e.push(xr,l),l},argPackAdvance:ot,readValueFromPointer:ft,Db(e){xr(e)}})}function It(e,t){st(e>>>=0,{Tb:!0,name:t=et(t>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var Mt=()=>1;function Ot(e){$r(e>>>0,!m,1,!f,131072,!1),xe()}var Bt=e=>{if(!q)try{if(e(),!(0<pe))try{g?Cr(O):ge(O)}catch(t){t instanceof ue||"unwind"==t||x(0,t)}}catch(t){t instanceof ue||"unwind"==t||x(0,t)}};function Rt(e){e>>>=0,"function"==typeof Atomics.nc&&(Atomics.nc(a(),e>>>2,e).value.then(Pt),e+=128,Atomics.store(a(),e>>>2,1))}var Pt=()=>{var e=br();e&&(Rt(e),Bt(Ar))};function Dt(e,t){(e>>>=0)==t>>>0?setTimeout(Pt):g?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=be[e])&&e.postMessage({cmd:"checkMailbox"})}var Lt=[];function Ft(e,t,n,r,s){for(t>>>=0,r/=2,Lt.length=r,n=s>>>0>>>3,s=0;s<r;s++)Lt[s]=U[n+2*s]?U[n+2*s+1]:u()[n+2*s+1>>>0];return(t?ae[t]:mr[e])(...Lt)}function Nt(e){e>>>=0,g?postMessage({cmd:"cleanupThread",thread:e}):ve(be[e])}function Ut(e){}var jt=(e,t)=>{var n=nt[e];if(void 0===n)throw e=_r(e),n=et(e),xr(e),new Ze(`${t} has unknown type ${n}`);return n},Vt=(e,t,n)=>{var r=[];return e=e.toWireType(r,n),r.length&&(o()[t>>>2>>>0]=ht(r)),e};function qt(e,t,n){return t>>>=0,n>>>=0,e=pt(e>>>0),t=jt(t,"emval::as"),Vt(t,n,e)}var Wt=e=>{try{e()}catch(t){J(t)}},Gt=0,Ht=null,Kt=0,Xt=[],Yt={},Qt={},Zt=0,Jt=null,en=[];function tn(e){return function(){if(!q){if(0===Gt){var t=!1,n=!1;(t=>{e().then(t)})((function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!q&&(Kt=e,t=!0,n)){Gt=2,Wt((()=>Pr(Ht))),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.resume(),e=!1;try{var r=function(){var e=a()[Ht+8>>>2>>>0];return e=gr[Qt[e]],--pe,e()}()}catch(o){r=o,e=!0}var s=!1;if(!Ht){var i=Jt;i&&(Jt=null,(e?i.reject:i.resolve)(r),s=!0)}if(e&&!s)throw r}})),n=!0,t||(Gt=1,Ht=function(){var e=vr(65548),t=e+12;o()[e>>>2>>>0]=t,o()[e+4>>>2>>>0]=t+65536,t=Xt[0];var n=Yt[t];return void 0===n&&(n=Zt++,Yt[t]=n,Qt[n]=t),t=n,a()[e+8>>>2>>>0]=t,e}(),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.pause(),Wt((()=>Br(Ht))))}else 2===Gt?(Gt=0,Wt(Dr),xr(Ht),Ht=null,en.forEach(Bt)):J(`invalid state: ${Gt}`);return Kt}}()}function nn(e){return e>>>=0,tn((()=>(e=pt(e)).then(ht)))}var rn=[];function sn(e,t,n,r){return n>>>=0,r>>>=0,(e=rn[e>>>0])(null,t=pt(t>>>0),n,r)}var an={},on=e=>{var t=an[e];return void 0===t?et(e):t};function ln(e,t,n,r,s){return n>>>=0,r>>>=0,s>>>=0,(e=rn[e>>>0])(t=pt(t>>>0),t[n=on(n)],r,s)}var un=()=>"object"==typeof globalThis?globalThis:Function("return this")();function dn(e){return 0==(e>>>=0)?ht(un()):(e=on(e),ht(un()[e]))}var cn=e=>{var t=rn.length;return rn.push(e),t},pn=(e,t)=>{for(var n=Array(e),r=0;r<e;++r)n[r]=jt(o()[t+4*r>>>2>>>0],"parameter "+r);return n},hn=(e,t)=>Object.defineProperty(t,"name",{value:e});function fn(e,t,n){var r=(t=pn(e,t>>>0)).shift();e--;var s="return function (obj, func, destructorsRef, args) {\n",i=0,a=[];0===n&&a.push("obj");for(var o=["retType"],l=[r],u=0;u<e;++u)a.push("arg"+u),o.push("argType"+u),l.push(t[u]),s+=`  var arg${u} = argType${u}.readValueFromPointer(args${i?"+"+i:""});\n`,i+=t[u].argPackAdvance;return s+=`  var rv = ${1===n?"new func":"func.call"}(${a.join(", ")});\n`,r.Tb||(o.push("emval_returnValue"),l.push(Vt),s+="  return emval_returnValue(retType, destructorsRef, rv);\n"),o.push(s+"};\n"),e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);var n=hn(t.name||"unknownFunctionName",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(o)(...l),n=`methodCaller<(${t.map((e=>e.name)).join(", ")}) => ${r.name}>`,cn(hn(n,e))}function mn(e){return e=on(e>>>0),ht(p[e])}function gn(e,t){return t>>>=0,e=pt(e>>>0),t=pt(t),ht(e[t])}function _n(e){9<(e>>>=0)&&(dt[e+1]+=1)}function wn(){return ht([])}function yn(e){e=pt(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return ht(t)}function bn(e){return ht(on(e>>>0))}function vn(){return ht({})}function xn(e){for(var t=pt(e>>>=0);t.length;){var n=t.pop();t.pop()(n)}ct(e)}function $n(e,t,n){t>>>=0,n>>>=0,e=pt(e>>>0),t=pt(t),n=pt(n),e[t]=n}function kn(e,t){return t>>>=0,e=(e=jt(e>>>0,"_emval_take_value")).readValueFromPointer(t),ht(e)}function En(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),a()[t>>>2>>>0]=e.getUTCSeconds(),a()[t+4>>>2>>>0]=e.getUTCMinutes(),a()[t+8>>>2>>>0]=e.getUTCHours(),a()[t+12>>>2>>>0]=e.getUTCDate(),a()[t+16>>>2>>>0]=e.getUTCMonth(),a()[t+20>>>2>>>0]=e.getUTCFullYear()-1900,a()[t+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[t+28>>>2>>>0]=e}var Sn=e=>e%4==0&&(e%100!=0||e%400==0),Cn=[0,31,60,91,121,152,182,213,244,274,305,335],An=[0,31,59,90,120,151,181,212,243,273,304,334];function Tn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),a()[t>>>2>>>0]=e.getSeconds(),a()[t+4>>>2>>>0]=e.getMinutes(),a()[t+8>>>2>>>0]=e.getHours(),a()[t+12>>>2>>>0]=e.getDate(),a()[t+16>>>2>>>0]=e.getMonth(),a()[t+20>>>2>>>0]=e.getFullYear()-1900,a()[t+24>>>2>>>0]=e.getDay();var n=(Sn(e.getFullYear())?Cn:An)[e.getMonth()]+e.getDate()-1|0;a()[t+28>>>2>>>0]=n,a()[t+36>>>2>>>0]=-60*e.getTimezoneOffset(),n=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n)),a()[t+32>>>2>>>0]=e}function zn(e){e>>>=0;var t=new Date(a()[e+20>>>2>>>0]+1900,a()[e+16>>>2>>>0],a()[e+12>>>2>>>0],a()[e+8>>>2>>>0],a()[e+4>>>2>>>0],a()[e>>>2>>>0],0),n=a()[e+32>>>2>>>0],r=t.getTimezoneOffset(),s=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(i,s);return 0>n?a()[e+32>>>2>>>0]=+(s!=i&&o==r):0<n!=(o==r)&&(s=Math.max(i,s),t.setTime(t.getTime()+6e4*((0<n?o:s)-r))),a()[e+24>>>2>>>0]=t.getDay(),n=(Sn(t.getFullYear())?Cn:An)[t.getMonth()]+t.getDate()-1|0,a()[e+28>>>2>>>0]=n,a()[e>>>2>>>0]=t.getSeconds(),a()[e+4>>>2>>>0]=t.getMinutes(),a()[e+8>>>2>>>0]=t.getHours(),a()[e+12>>>2>>>0]=t.getDate(),a()[e+16>>>2>>>0]=t.getMonth(),a()[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),BigInt(isNaN(e)?-1:e/1e3)}function In(e,t,n,r,s,i,a){return g?he(16,1,e,t,n,r,s,i,a):-52}function Mn(e,t,n,r,s,i){if(g)return he(17,1,e,t,n,r,s,i)}function On(e,t,n,r){e>>>=0,t>>>=0,n>>>=0,r>>>=0;var s=(new Date).getFullYear(),i=new Date(s,0,1),l=new Date(s,6,1);s=i.getTimezoneOffset();var u=l.getTimezoneOffset(),d=Math.max(s,u);o()[e>>>2>>>0]=60*d,a()[t>>>2>>>0]=+(s!=u),i=(e=e=>e.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(i),l=e(l),u<s?(Fe(i,n,17),Fe(l,r,17)):(Fe(i,r,17),Fe(l,n,17))}var Bn=[],Rn=(e,t)=>{Bn.length=0;for(var n;n=r()[e++>>>0];){var s=105!=n;t+=(s&=112!=n)&&t%8?4:0,Bn.push(112==n?o()[t>>>2>>>0]:106==n?U[t>>>3]:105==n?a()[t>>>2>>>0]:u()[t>>>3>>>0]),t+=s?8:4}return Bn};function Pn(e,t,n){return e>>>=0,t=Rn(t>>>0,n>>>0),ae[e](...t)}function Dn(e,t,n){return e>>>=0,t=Rn(t>>>0,n>>>0),ae[e](...t)}var Ln=()=>{},Fn=()=>Date.now();function Nn(e,t){return A(Be(e>>>0,t>>>0))}var Un,jn=()=>{throw pe+=1,"unwind"};function Vn(){return 4294901760}Un=()=>performance.timeOrigin+performance.now();var qn=()=>navigator.hardwareConcurrency;function Wn(){return J("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Gn(e){e>>>=0;var t=r().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var s=t*(1+.2/n);s=Math.min(s,e+100663296);var i=Math;s=Math.max(e,s);e:{i=(i.min.call(i,4294901760,s+(65536-s%65536)%65536)-I.buffer.byteLength+65535)/65536;try{I.grow(i),W();var a=1;break e}catch{}a=void 0}if(a)return!0}return!1}var Hn=()=>(J("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Kn={},Xn=e=>{e.forEach((e=>{var t=Hn();t&&(Kn[t]=e)}))};function Yn(){var e=Error().stack.toString().split("\n");return"Error"==e[0]&&e.shift(),Xn(e),Kn.Pb=Hn(),Kn.ec=e,Kn.Pb}function Qn(e,t,n){if(e>>>=0,t>>>=0,Kn.Pb==e)var r=Kn.ec;else"Error"==(r=Error().stack.toString().split("\n"))[0]&&r.shift(),Xn(r);for(var s=3;r[s]&&Hn()!=e;)++s;for(e=0;e<n&&r[e+s];++e)a()[t+4*e>>>2>>>0]=Hn();return e}var Zn,Jn={},er=()=>{if(!Zn){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(e in Jn)void 0===Jn[e]?delete t[e]:t[e]=Jn[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Zn=n}return Zn};function tr(e,n){if(g)return he(18,1,e,n);e>>>=0,n>>>=0;var r=0;return er().forEach(((s,i)=>{var a=n+r;for(i=o()[e+4*i>>>2>>>0]=a,a=0;a<s.length;++a)t()[i++>>>0]=s.charCodeAt(a);t()[i>>>0]=0,r+=s.length+1})),0}function nr(e,t){if(g)return he(19,1,e,t);e>>>=0,t>>>=0;var n=er();o()[e>>>2>>>0]=n.length;var r=0;return n.forEach((e=>r+=e.length+1)),o()[t>>>2>>>0]=r,0}function rr(e){return g?he(20,1,e):52}function sr(e,t,n,r){return g?he(21,1,e,t,n,r):52}function ir(e,t,n,r){return g?he(22,1,e,t,n,r):70}var ar=[null,[],[]];function or(e,t,n,s){if(g)return he(23,1,e,t,n,s);t>>>=0,n>>>=0,s>>>=0;for(var i=0,a=0;a<n;a++){var l=o()[t>>>2>>>0],u=o()[t+4>>>2>>>0];t+=8;for(var d=0;d<u;d++){var c=r()[l+d>>>0],p=ar[e];0===c||10===c?((1===e?C:A)(Oe(p,0)),p.length=0):p.push(c)}i+=u}return o()[s>>>2>>>0]=i,0}var lr=[31,29,31,30,31,30,31,31,30,31,30,31],ur=[31,28,31,30,31,30,31,31,30,31,30,31],dr=(e,n)=>{t().set(e,n>>>0)};function cr(e,t,n,r){function s(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function i(e,t){return s(e,t,"0")}function l(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function d(e){var t=e.Bb;for(e=new Date(new Date(e.Cb+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(Sn(e.getFullYear())?lr:ur)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=u(new Date(e.getFullYear(),0,4)),n=u(n),0>=l(t,e)?0>=l(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0,r>>>=0;var c=o()[r+40>>>2>>>0];for(var p in r={kc:a()[r>>>2>>>0],jc:a()[r+4>>>2>>>0],Hb:a()[r+8>>>2>>>0],Lb:a()[r+12>>>2>>>0],Ib:a()[r+16>>>2>>>0],Cb:a()[r+20>>>2>>>0],ub:a()[r+24>>>2>>>0],Bb:a()[r+28>>>2>>>0],rc:a()[r+32>>>2>>>0],ic:a()[r+36>>>2>>>0],lc:c?Be(c):""},n=Be(n),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(p,"g"),c[p]);var h="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),f="January February March April May June July August September October November December".split(" ");for(p in c={"%a":e=>h[e.ub].substring(0,3),"%A":e=>h[e.ub],"%b":e=>f[e.Ib].substring(0,3),"%B":e=>f[e.Ib],"%C":e=>i((e.Cb+1900)/100|0,2),"%d":e=>i(e.Lb,2),"%e":e=>s(e.Lb,2," "),"%g":e=>d(e).toString().substring(2),"%G":d,"%H":e=>i(e.Hb,2),"%I":e=>(0==(e=e.Hb)?e=12:12<e&&(e-=12),i(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Ib-1;t+=(Sn(e.Cb+1900)?lr:ur)[n++]);return i(e.Lb+t,3)},"%m":e=>i(e.Ib+1,2),"%M":e=>i(e.jc,2),"%n":()=>"\n","%p":e=>0<=e.Hb&&12>e.Hb?"AM":"PM","%S":e=>i(e.kc,2),"%t":()=>"\t","%u":e=>e.ub||7,"%U":e=>i(Math.floor((e.Bb+7-e.ub)/7),2),"%V":e=>{var t=Math.floor((e.Bb+7-(e.ub+6)%7)/7);if(2>=(e.ub+371-e.Bb-2)%7&&t++,t)53==t&&(4==(n=(e.ub+371-e.Bb)%7)||3==n&&Sn(e.Cb)||(t=1));else{t=52;var n=(e.ub+7-e.Bb-1)%7;(4==n||5==n&&Sn(e.Cb%400-1))&&t++}return i(t,2)},"%w":e=>e.ub,"%W":e=>i(Math.floor((e.Bb+7-(e.ub+6)%7)/7),2),"%y":e=>(e.Cb+1900).toString().substring(2),"%Y":e=>e.Cb+1900,"%z":e=>(0<=(e=e.ic)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.lc,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),c)n.includes(p)&&(n=n.replace(new RegExp(p,"g"),c[p](r)));return(p=function(e){var t=Array(De(e)+1);return Le(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%"))).length>t?0:(dr(p,e),p.length-1)}function pr(e,t,n,r){return cr(e>>>0,t>>>0,n>>>0,r>>>0)}g||function(){for(var e=p.numThreads-1;e--;)ke();G.unshift((()=>{var e;X++,e=()=>Z(),g?e():Promise.all(_e.map($e)).then(e)}))}();for(var hr=Array(256),fr=0;256>fr;++fr)hr[fr]=String.fromCharCode(fr);Qe=hr,Ze=p.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},p.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},dt.push(0,1,void 0,1,null,1,!0,1,!1,1),p.count_emval_handles=()=>dt.length/2-5-ut.length;var mr=[fe,me,ze,Re,Pe,Ne,Ue,je,Ve,qe,We,Ge,He,Ke,Xe,Ye,In,Mn,tr,nr,rr,sr,ir,or],gr=function(){function e(e,t){return gr=e.exports,gr=function(){var e=gr,t={};for(let[n,r]of Object.entries(e))t[n]="function"==typeof r?function(){Xt.push(n);try{return r(...arguments)}finally{q||(Xt.pop(),Ht&&1===Gt&&0===Xt.length&&(Gt=0,pe+=1,Wt(Rr),typeof Fibers<"u"&&Fibers.sc()))}}:r;return t}(),gr=function(){var e=gr,t=e=>t=>e(t)>>>0,n=e=>()=>e()>>>0;return(e=Object.assign({},e)).Ca=t(e.Ca),e.fb=n(e.fb),e.gb=t(e.gb),e.emscripten_main_runtime_thread_id=n(e.emscripten_main_runtime_thread_id),e.sb=t(e.sb),e.tb=n(e.tb),e}(),ye.push(gr.ib),H.unshift(gr.Ba),M=t,Z(),gr}var t=ie();if(X++,p.instantiateWasm)try{return p.instantiateWasm(t,e)}catch(r){A(`Module.instantiateWasm callback failed with error: ${r}`),c(r)}return ee||=p.locateFile?te("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":p.locateFile?p.locateFile("ort-wasm-simd-threaded.jsep.wasm",$):$+"ort-wasm-simd-threaded.jsep.wasm":new URL(n(588),n.b).href,function(e,t){var n=ee;return k||"function"!=typeof WebAssembly.instantiateStreaming||te(n)||ne(n)||"function"!=typeof fetch?se(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return A(`wasm streaming compile failed: ${r}`),A("falling back to ArrayBuffer instantiation"),se(n,e,t)}))))}(t,(function(t){e(t.instance,t.module)})).catch(c),{}}(),_r=e=>(_r=gr.Ca)(e),wr=()=>(wr=gr.Da)();p._OrtInit=(e,t)=>(p._OrtInit=gr.Ea)(e,t),p._OrtGetLastError=(e,t)=>(p._OrtGetLastError=gr.Fa)(e,t),p._OrtCreateSessionOptions=(e,t,n,r,s,i,a,o,l,u)=>(p._OrtCreateSessionOptions=gr.Ga)(e,t,n,r,s,i,a,o,l,u),p._OrtAppendExecutionProvider=(e,t)=>(p._OrtAppendExecutionProvider=gr.Ha)(e,t),p._OrtAddFreeDimensionOverride=(e,t,n)=>(p._OrtAddFreeDimensionOverride=gr.Ia)(e,t,n),p._OrtAddSessionConfigEntry=(e,t,n)=>(p._OrtAddSessionConfigEntry=gr.Ja)(e,t,n),p._OrtReleaseSessionOptions=e=>(p._OrtReleaseSessionOptions=gr.Ka)(e),p._OrtCreateSession=(e,t,n)=>(p._OrtCreateSession=gr.La)(e,t,n),p._OrtReleaseSession=e=>(p._OrtReleaseSession=gr.Ma)(e),p._OrtGetInputOutputCount=(e,t,n)=>(p._OrtGetInputOutputCount=gr.Na)(e,t,n),p._OrtGetInputName=(e,t)=>(p._OrtGetInputName=gr.Oa)(e,t),p._OrtGetOutputName=(e,t)=>(p._OrtGetOutputName=gr.Pa)(e,t),p._OrtFree=e=>(p._OrtFree=gr.Qa)(e),p._OrtCreateTensor=(e,t,n,r,s,i)=>(p._OrtCreateTensor=gr.Ra)(e,t,n,r,s,i),p._OrtGetTensorData=(e,t,n,r,s)=>(p._OrtGetTensorData=gr.Sa)(e,t,n,r,s),p._OrtReleaseTensor=e=>(p._OrtReleaseTensor=gr.Ta)(e),p._OrtCreateRunOptions=(e,t,n,r)=>(p._OrtCreateRunOptions=gr.Ua)(e,t,n,r),p._OrtAddRunConfigEntry=(e,t,n)=>(p._OrtAddRunConfigEntry=gr.Va)(e,t,n),p._OrtReleaseRunOptions=e=>(p._OrtReleaseRunOptions=gr.Wa)(e),p._OrtCreateBinding=e=>(p._OrtCreateBinding=gr.Xa)(e),p._OrtBindInput=(e,t,n)=>(p._OrtBindInput=gr.Ya)(e,t,n),p._OrtBindOutput=(e,t,n,r)=>(p._OrtBindOutput=gr.Za)(e,t,n,r),p._OrtClearBoundOutputs=e=>(p._OrtClearBoundOutputs=gr._a)(e),p._OrtReleaseBinding=e=>(p._OrtReleaseBinding=gr.$a)(e),p._OrtRunWithBinding=(e,t,n,r,s)=>(p._OrtRunWithBinding=gr.ab)(e,t,n,r,s),p._OrtRun=(e,t,n,r,s,i,a,o)=>(p._OrtRun=gr.bb)(e,t,n,r,s,i,a,o),p._OrtEndProfiling=e=>(p._OrtEndProfiling=gr.cb)(e),p._JsepOutput=(e,t,n)=>(p._JsepOutput=gr.db)(e,t,n),p._JsepGetNodeName=e=>(p._JsepGetNodeName=gr.eb)(e);var yr,br=()=>(br=gr.fb)(),vr=p._malloc=e=>(vr=p._malloc=gr.gb)(e),xr=p._free=e=>(xr=p._free=gr.hb)(e),$r=(e,t,n,r,s,i)=>($r=gr.kb)(e,t,n,r,s,i),kr=()=>(kr=gr.lb)(),Er=(e,t,n,r,s)=>(Er=gr.mb)(e,t,n,r,s),Sr=e=>(Sr=gr.nb)(e),Cr=e=>(Cr=gr.ob)(e),Ar=()=>(Ar=gr.pb)(),Tr=(e,t)=>(Tr=gr.qb)(e,t),zr=e=>(zr=gr.rb)(e),Ir=e=>(Ir=gr.sb)(e),Mr=()=>(Mr=gr.tb)(),Or=p.dynCall_ii=(e,t)=>(Or=p.dynCall_ii=gr.vb)(e,t),Br=e=>(Br=gr.wb)(e),Rr=()=>(Rr=gr.xb)(),Pr=e=>(Pr=gr.yb)(e),Dr=()=>(Dr=gr.zb)();function Lr(){0<X||(g?(d(p),g||Ee(H),startWorker(p)):(Ee(G),0<X||yr||(yr=!0,p.calledRun=!0,q||(g||Ee(H),d(p),g||Ee(K)))))}return p.___start_em_js=881586,p.___stop_em_js=881808,p.stackSave=()=>Mr(),p.stackRestore=e=>zr(e),p.stackAlloc=e=>Ir(e),p.UTF8ToString=Be,p.stringToUTF8=Fe,p.lengthBytesUTF8=De,Q=function e(){yr||Lr(),yr||(Q=e)},Lr(),h},vt=bt,"em-pthread"===globalThis.self?.name&&bt()})),Au=Ue((()=>{pt(),xt="file:///Users/ganesh/work/privacy-preserving-surveillance/frontend/node_modules/@xenova/transformers/node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs",$t=typeof location>"u"?void 0:location.origin,kt=(e,t)=>{try{let n=t??xt;return(n?new URL(e,n):new URL(e)).origin===$t}catch{return!1}},Et=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},St=(_t(),Ve(ht)).default,Ct=async()=>{if(!xt)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(kt(xt))return[void 0,St()];let e=await Et(xt);return[e,St(e)]},At=(Cu(),Ve(wt)).default,Tt=async(e,t,n)=>[void 0,At]})),Tu=Ue((()=>{Au(),It=!1,Mt=!1,Ot=!1,Bt=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Rt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Pt=async e=>{if(It)return Promise.resolve();if(Mt)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Ot)throw new Error("previous call to 'initializeWebAssembly()' failed.");Mt=!0;let t=e.initTimeout,n=e.numThreads;if(!Rt())throw new Error("WebAssembly SIMD is not supported in the current environment.");let r=Bt();n>1&&!r&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+n+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=n=1);let s=e.wasmPaths,i="string"==typeof s?s:void 0,a=s?.mjs,o=a?.href??a,l=s?.wasm,u=l?.href??l,d=e.wasmBinary,[c,p]=await Tt(o,i,n>1),h=!1,f=[];if(t>0&&f.push(new Promise((e=>{setTimeout((()=>{h=!0,e()}),t)}))),f.push(new Promise(((e,t)=>{let r={numThreads:n};d?r.wasmBinary=d:(u||i)&&(r.locateFile=(e,t)=>u??(i??t)+e),p(r).then((t=>{Mt=!1,It=!0,zt=t,e(),c&&URL.revokeObjectURL(c)}),(e=>{Mt=!1,Ot=!0,t(e)}))}))),await Promise.race(f),h)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Dt=()=>{if(It&&zt)return zt;throw new Error("WebAssembly is not initialized yet.")}})),zu=Ue((()=>{Tu(),Lt=(e,t)=>{let n=Dt(),r=n.lengthBytesUTF8(e)+1,s=n._malloc(r);return n.stringToUTF8(e,s,r),t.push(s),s},Ft=(e,t,n,r)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach((e=>{let[s,i]=e,a=t?t+s:s;if("object"==typeof i)Ft(i,a+".",n,r);else if("string"==typeof i||"number"==typeof i)r(a,i.toString());else{if("boolean"!=typeof i)throw new Error("Can't handle extra config type: "+typeof i);r(a,i?"1":"0")}}))},Nt=e=>{let t=Dt(),n=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let r=t.HEAP32[n/4],s=t.HEAPU32[n/4+1],i=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${i}`)}finally{t.stackRestore(n)}}})),Iu=Ue((()=>{Tu(),zu(),Ut=e=>{let t=Dt(),n=0,r=[],s=e||{};try{if(void 0===e?.logSeverityLevel)s.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===e?.logVerbosityLevel)s.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===e?.terminate&&(s.terminate=!1);let i=0;return void 0!==e?.tag&&(i=Lt(e.tag,r)),n=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,i),0===n&&Nt("Can't create run options."),void 0!==e?.extra&&Ft(e.extra,"",new WeakSet,((e,s)=>{let i=Lt(e,r),a=Lt(s,r);0!==t._OrtAddRunConfigEntry(n,i,a)&&Nt(`Can't set a run config entry: ${e} - ${s}.`)})),[n,r]}catch(i){throw 0!==n&&t._OrtReleaseRunOptions(n),r.forEach((e=>t._free(e))),i}}})),Mu=Ue((()=>{Tu(),zu(),jt=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Vt=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},qt=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)},Wt=(e,t,n)=>{for(let r of t){let t="string"==typeof r?r:r.name;switch(t){case"webnn":if(t="WEBNN","string"!=typeof r){let t=r?.deviceType;if(t){let r=Lt("deviceType",n),s=Lt(t,n);0!==Dt()._OrtAddSessionConfigEntry(e,r,s)&&Nt(`Can't set a session config entry: 'deviceType' - ${t}.`)}}break;case"webgpu":if(t="JS","string"!=typeof r){let t=r;if(t?.preferredLayout){if("NCHW"!==t.preferredLayout&&"NHWC"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);let r=Lt("preferredLayout",n),s=Lt(t.preferredLayout,n);0!==Dt()._OrtAddSessionConfigEntry(e,r,s)&&Nt(`Can't set a session config entry: 'preferredLayout' - ${t.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}let s=Lt(t,n);0!==Dt()._OrtAppendExecutionProvider(e,s)&&Nt(`Can't append execution provider: ${t}.`)}},Gt=e=>{let t=Dt(),n=0,r=[],s=e||{};qt(s);try{let e=jt(s.graphOptimizationLevel??"all"),i=Vt(s.executionMode??"sequential"),a="string"==typeof s.logId?Lt(s.logId,r):0,o=s.logSeverityLevel??2;if(!Number.isInteger(o)||o<0||o>4)throw new Error(`log serverity level is not valid: ${o}`);let l=s.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let u="string"==typeof s.optimizedModelFilePath?Lt(s.optimizedModelFilePath,r):0;if(n=t._OrtCreateSessionOptions(e,!!s.enableCpuMemArena,!!s.enableMemPattern,i,!!s.enableProfiling,0,a,o,l,u),0===n&&Nt("Can't create session options."),s.executionProviders&&Wt(n,s.executionProviders,r),void 0!==s.enableGraphCapture){if("boolean"!=typeof s.enableGraphCapture)throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);let e=Lt("enableGraphCapture",r),i=Lt(s.enableGraphCapture.toString(),r);0!==t._OrtAddSessionConfigEntry(n,e,i)&&Nt(`Can't set a session config entry: 'enableGraphCapture' - ${s.enableGraphCapture}.`)}if(s.freeDimensionOverrides)for(let[d,c]of Object.entries(s.freeDimensionOverrides)){if("string"!=typeof d)throw new Error(`free dimension override name must be a string: ${d}`);if("number"!=typeof c||!Number.isInteger(c)||c<0)throw new Error(`free dimension override value must be a non-negative integer: ${c}`);let e=Lt(d,r);0!==t._OrtAddFreeDimensionOverride(n,e,c)&&Nt(`Can't set a free dimension override: ${d} - ${c}.`)}return void 0!==s.extra&&Ft(s.extra,"",new WeakSet,((e,s)=>{let i=Lt(e,r),a=Lt(s,r);0!==t._OrtAddSessionConfigEntry(n,i,a)&&Nt(`Can't set a session config entry: ${e} - ${s}.`)})),[n,r]}catch(i){throw 0!==n&&t._OrtReleaseSessionOptions(n),r.forEach((e=>t._free(e))),i}}})),Ou=Ue((()=>{Ht=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Kt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Xt=(e,t)=>{let n=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],r="number"==typeof t?t:t.reduce(((e,t)=>e*t),1);return n>0?Math.ceil(r*n):void 0},Yt=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Qt=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Zt=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint8"===e||"bool"===e||"uint4"===e||"int4"===e,Jt=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint64"===e||"int8"===e||"uint8"===e||"bool"===e,en=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}})),Bu=Ue((()=>{pt(),tn=async e=>{if("string"==typeof e){let n=await fetch(e);if(!n.ok)throw new Error(`failed to load external data file: ${e}`);let r=n.headers.get("Content-Length"),s=r?parseInt(r,10):0;if(s<1073741824)return new Uint8Array(await n.arrayBuffer());{if(!n.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let r,i=n.body.getReader();try{r=new ArrayBuffer(s)}catch(t){if(!(t instanceof RangeError))throw t;{let e=Math.ceil(s/65536);r=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let a=0;for(;;){let{done:e,value:t}=await i.read();if(e)break;let n=t.byteLength;new Uint8Array(r,a,n).set(t),a+=n}return new Uint8Array(r,0,s)}}return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}})),Ru=Ue((()=>{Ou(),nn=["V","I","W","E","F"],rn=(e,t)=>{console.log(`[${nn[e]},${(new Date).toISOString()}]${t}`)},on=(e,t)=>{sn=e,an=t},ln=(e,t)=>{let n=Qt(e);n>=Qt(sn)&&rn(n,"function"==typeof t?t():t)},un=function(){an&&ln(...arguments)}})),Pu=Ue((()=>{Ou(),dn=(e,t)=>new(Yt(t))(e)})),Du=Ue((()=>{})),Lu=Ue((()=>{Ru(),Du(),cn=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),pn=[],hn=e=>16*Math.ceil(e/16),fn=e=>{for(let t=0;t<pn.length;t++){let n=pn[t];if(e<=n)return n}return 16*Math.ceil(e/16)},mn=1,gn=()=>mn++,_n=async(e,t,n,r)=>{let s=hn(n),i=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,i,0,s),e.flush(),await i.mapAsync(GPUMapMode.READ);let o=i.getMappedRange();if(r){let e=r();return e.set(new Uint8Array(o,0,n)),e}return new Uint8Array(o.slice(0,n))}finally{i.destroy()}},wn=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of cn)pn.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[])}upload(e,t){let n=t.buffer,r=t.byteOffset,s=t.byteLength,i=hn(s),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${s}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:i,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(n,r,s)),o.unmap();let u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o,0,a.gpuData.buffer,0,i),un("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(o)}memcpy(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");let r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=hn(n.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,s)}registerExternalBuffer(e,t,n){let r;if(n){if(r=n[0],e===n[1])return un("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, buffer is the same, skip.`)),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error("Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!")}else r=gn();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:e},originalSize:t}),un("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, registered.`)),r}unregisterExternalBuffer(e){void 0!==e&&(this.storageCache.delete(e),un("verbose",(()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`)))}create(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST,r=fn(e),s=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,i=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||i){let e=(s?this.freeBuffers:this.freeUniformBuffers).get(r);t=e&&e.length>0?e.pop():this.backend.device.createBuffer({size:r,usage:n})}else t=this.backend.device.createBuffer({size:r,usage:n});let a={id:gn(),type:0,buffer:t};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),un("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`)),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return un("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("data does not exist");await _n(this.backend,n.gpuData.buffer,n.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let e of this.buffersPending){let t=cn.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let n=this.freeBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let n=this.freeUniformBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.freeUniformBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.capturedPendingBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach((e=>{e.destroy()})),this.capturedPendingBuffers.delete(e))}},yn=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return new wn(...t)}})),Fu=Ue((()=>{bn=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this.key}},vn=e=>new bn(e)})),Nu=Ue((()=>{xn=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},$n=class{static calcShape(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=e.length,s=t.length;if(0===r)return t;if(0===s)return e;let i=Math.max(e.length,t.length),a=new Array(i);if(n){if(r<2||s<2)return;let n=xn.calcMatMulShape([e[r-2],e[r-1]],[t[s-2],t[s-1]]);if(void 0===n)return;[a[i-2],a[i-1]]=n}for(let o=n?3:1;o<=i;o++){let n=r-o<0?1:e[r-o],l=s-o<0?1:t[s-o];if(n!==l&&n>1&&l>1)return;let u=Math.max(n,l);if(n&&l)a[i-o]=Math.max(n,l);else{if(u>1)return;a[i-o]=0}}return a}static isValidBroadcast(e,t){let n=e.length,r=t.length;if(n>r)return!1;for(let s=1;s<=n;s++)if(1!==e[n-s]&&e[n-s]!==t[r-s])return!1;return!0}},kn=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4,n=e.length;if(0===n)return[];let r=new Array(n),s=n-1;for(;s>=0;){if(e[s]%t===0){r[s]=e[s]/t;break}if(t%e[s]!==0)throw new Error("cannot convert shape");r[s]=1,t/=e[s],s--}for(s--;s>=0;s--)r[s]=e[s];return r}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let s=t;s<n;s++){if(e[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=e[s]}return r}static computeStrides(e){let t=e.length;if(0===t)return[];if(1===t)return[1];let n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,t??e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){let n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}},En=class e{static adjustPoolAttributes(e,t,n,r,s,i){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<t.length-2;a++)a>=n.length?n.push(t[a+2]):n[a]=t[a+2];for(let a=0;a<n.length;a++)if(a<r.length){if(r[a]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let a=0;a<n.length;a++)if(a<s.length){if(s[a]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let a=0;a<2*n.length;a++)if(a<i.length){if(i[a]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let a=0;a<n.length;a++){if(n[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[a]>=n[a]||i[a+n.length]>=n[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,n,r,s,i,a,o){if(o){if(i.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<t.length-2;l++)e.adjustPadAndReturnShape(t[l+(a?1:2)],n[l],r[l],s[l],i,l,l+t.length-2,o)}}static computePoolOutputShape(t,n,r,s,i,a,o){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let l=[n[0],n[1]];return e.computeShapeHelper(t,n,l,r,s,i,a,o),l}static computeConvOutputShape(t,n,r,s,i,a,o){if(t.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[t[0],n[0]];return e.computeShapeHelper(!1,t,l,r,s,i,a,o),l}static computeShapeHelper(t,n,r,s,i,a,o,l){if(t)for(let e=0;e<n.length-2;e++)r.push(1);else for(let u=0;u<n.length-2;u++)r.push(e.adjustPadAndReturnShape(n[u+2],s[u],i[u],a[u],o,u,u+n.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,s,i,a,o){let l=n*(r-1)+1;if(!o||"NOTSET"===o)return Math.floor((e+s[i]+s[a]-l)/t+1);switch(o){case"VALID":return s[i]=0,s[a]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let n=((e+t-1)/t-1)*t+r-e;return s[i]=Math.floor("SAME_LOWER"===o?(n+1)/2:n/2),s[a]=n-s[i],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}},Sn=class{static getShapeOfGemmResult(e,t,n,r,s){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let i,a,o;t?(i=e[1],a=e[0]):(i=e[0],a=e[1]);let l=-1;if(r?(o=n[0],l=1):(o=n[1],l=0),n[l]!==a)throw new Error("dimension mismatch");if(i<=0||o<=0||a<=0)throw new Error("invalid shape specified");if(s&&!$n.isValidBroadcast(s,[i,o]))throw new Error("gemm: invalid bias shape for broadcast");return[i,o,a]}},Cn=-34028234663852886e22,An=34028234663852886e22})),Uu=Ue((()=>{Ou(),Nu(),Tn=64,zn=(e,t)=>{if(3===t)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},In=function(e){let t=zn(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1);return"string"==typeof t?t:t[0]},Mn=function(e){let t=zn(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1);return"string"==typeof t?t:t[1]},On=function(){let e=[];for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return n.forEach((t=>{0!==t.length&&e.push({type:12,data:t},{type:12,data:kn.computeStrides(t)})})),e},Bn=e=>e%4===0?4:e%2===0?2:1,Rn=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"f32",t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"0";return t&&1!==t?`vec${t}<${e}>(${n})`:`${e}(${n})`},Pn=(e,t,n)=>"f32"===e?n:1===t?`f32(${n})`:`vec${t}<f32>(${n})`,Dn=(e,t)=>4===t?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:2===t?`(${e}.x + ${e}.y)`:3===t?`(${e}.x + ${e}.y + ${e}.z)`:e,Ln=(e,t,n,r)=>e.startsWith("uniforms.")&&n>4?"string"==typeof t?"f16"===r?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:"f16"===r?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:n>1?`${e}[${t}]`:e,Fn=(e,t,n,r,s)=>{let i="number"==typeof n,a=i?n:n.length,o=[...new Array(a).keys()],l=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,u=zn(t,s),d="string"==typeof u?u:u[1],c="string"==typeof u?u:u[0],p={indices:l,value:d,storage:c,tensor:t},h=e=>"string"==typeof e?e:`${e}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},m=i?"uniforms.":"",g=`${m}${e}_shape`,_=`${m}${e}_strides`,w="";for(let I=0;I<a-1;I++)w+=`\n    let dim${I} = current / ${Ln(_,I,a)};\n    let rest${I} = current % ${Ln(_,I,a)};\n    indices[${I}] = dim${I};\n    current = rest${I};\n    `;w+=`indices[${a-1}] = current;`;let y=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\n    var indices: ${p.indices};\n    var current = offset;\n    ${w}\n    return indices;\n  }`,b=[];if(a>=2)for(let I=a-1;I>=0;I--)b.push(`${Ln(_,I,a)} * (indices[${I}])`);let v=a<2?"":`\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\n    return ${b.join("+")};\n  }`,x=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===a?"0u":`${p.indices}(${t.map(h).join(",")})`},$=(e,t)=>a<2?`${e}`:`${Ln(e,t,a)}`,k={},E=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),S=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),C=a<2?"":`\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${d} {\n    return ${S(`i2o_${e}(indices)`)};\n  }`,A=a<2?"":(()=>{let t=o.map((e=>`d${e}: u32`)).join(", "),n=o.map((e=>`d${e}`)).join(", ");return`\n  fn get_${e}(${t}) -> ${d} {\n    return get_${e}ByIndices(${x(n)});\n  }`})(),T=a<2?"":`\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${d}) {\n    ${E(`i2o_${e}(indices)`,"value")}\n  }`,z=a<2?"":(()=>{let t=o.map((e=>`d${e}: u32`)).join(", "),n=o.map((e=>`d${e}`)).join(", ");return`\n  fn set_${e}(${t}, value: ${d}) {\n    set_${e}ByIndices(${x(n)}, value);\n  }`})();return{impl:()=>{let e=[],t=!1;return f.offsetToIndices&&(e.push(y),t=!0),f.indicesToOffset&&(e.push(v),t=!0),f.broadcastedIndicesToOffset&&(Object.values(k).forEach((t=>e.push(t))),t=!0),f.set&&(e.push(z),t=!0),f.setByIndices&&(e.push(T),t=!0),f.get&&(e.push(A),t=!0),f.getByIndices&&(e.push(C),t=!0),!i&&t&&e.unshift(`const ${g} = ${p.indices}(${n.join(",")});`,`const ${_} = ${p.indices}(${kn.computeStrides(n).join(",")});`),e.join("\n")},type:p,offsetToIndices:t=>(f.offsetToIndices=!0,a<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(f.indicesToOffset=!0,a<2?t:`i2o_${e}(${t})`),broadcastedIndicesToOffset:(t,n)=>{f.broadcastedIndicesToOffset=!0;let r=`${n.name}broadcastedIndicesTo${e}Offset`;if(r in k)return`${r}(${t})`;let s=[];for(let e=a-1;e>=0;e--){let t=n.indicesGet("outputIndices",e+n.rank-a);s.push(`${$(_,e)} * (${t} % ${$(g,e)})`)}return k[r]=`fn ${r}(outputIndices: ${n.type.indices}) -> u32 {\n             return ${s.length>0?s.join("+"):"0u"};\n           }`,`${r}(${t})`},indices:x,indicesGet:$,indicesSet:(e,t,n)=>a<2?`${e}=${n};`:`${Ln(e,t,a)}=${n};`,set:function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];if(n.length!==a+1)throw new Error(`indices length must be ${a}`);let s=n[a];if("string"!=typeof s)throw new Error("value must be string");let i=n.slice(0,a).map(h).join(",");return 0===a?E("0u",s):1===a?E(i[0],s):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${i}, ${s})`)},setByOffset:E,setByIndices:(t,n)=>a<2?E(t,n):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];if(n.length!==a)throw new Error(`indices length must be ${a}`);let s=n.map(h).join(",");return 0===a?S("0u"):1===a?S(s[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${s})`)},getByOffset:S,getByIndices:t=>a<2?S(t):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:r,name:e,strides:_,shape:g,rank:a}},Nn=function(e,t,n){return Fn(e,t,n,"input",arguments.length>3&&void 0!==arguments[3]?arguments[3]:1)},Un=function(e,t,n){return Fn(e,t,n,"output",arguments.length>3&&void 0!==arguments[3]?arguments[3]:1)},jn=function(e,t,n){return Fn(e,t,n,"internal",arguments.length>3&&void 0!==arguments[3]?arguments[3]:1)},Vn=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Tn,t="number"==typeof e?e:e[0],n="number"==typeof e?1:e[1],r="number"==typeof e?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||n>this.limits.maxComputeWorkgroupSizeY||r>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*n*r>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let s=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${t}, ${n}, ${r})\n  fn main(${s?"@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>":"@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>"}) {\n    ${s?"let global_idx = global_id.x;\n         let local_idx = local_id.x;\n         let workgroup_index = workgroup_id.x;":`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n             workgroup_id.y * num_workgroups[0] + workgroup_id.x;\n         let global_idx = workgroup_index * ${t*n*r}u + local_idx;`}\n  `}appendVariableUniforms(e){0!==e.rank&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if("internal"===e.usage)throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let n="input"===e.usage?"read":"read_write",r=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.map((e=>this.declareVariable(e,this.variableIndex++))).join("\n")}registerInternalVariable(e){if("internal"!==e.usage)throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.forEach((e=>this.registerInternalVariable(e))),this}registerUniform(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return this.uniforms.push({name:e,type:t,length:n}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let e=[];for(let{name:t,type:n,length:r}of this.uniforms)if(r&&r>4)"f16"===n?e.push(`@align(16) ${t}:array<mat2x4<${n}>, ${Math.ceil(r/8)}>`):e.push(`${t}:array<vec4<${n}>, ${Math.ceil(r/4)}>`);else{let s=null==r||1===r?n:`vec${r}<${n}>`;e.push(`${t}:${s}`)}return`\n      struct Uniforms { ${e.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map((e=>e.impl())).join("\n")+this.internalVariables.map((e=>e.impl())).join("\n")}get variablesInfo(){if(0===this.uniforms.length)return;let e=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map((t=>[e(t.type),t.length??1]))}},qn=(e,t)=>new Vn(e,t),Wn=(e,t)=>{let n=e.length,r=[];for(let s=0;s<n;s++){let i=n-1-s,a=e[i]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}})),ju=Ue((()=>{Ou(),Nu(),Fu(),Uu(),Gn=e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.")},Hn=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Kn=(e,t)=>kn.sortBasedOnPerm(e,Hn(e.length,t)),Xn=(e,t,n,r)=>{let s=`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`;for(let i=0;i<t;++i)s+=n.indicesSet("a",e[i],`i[${i}]`);return s+"return a;}"},Yn=(e,t)=>{let n=[],r=[];for(let s=0;s<e.length;++s)1!==e[s]&&n.push(e[s]),1!==e[t[s]]&&r.push(t[s]);return{newShape:n,newPerm:r}},Qn=(e,t)=>{let n=e.dataType,r=e.dims.length,s=Hn(r,t),i=Kn(e.dims,s),{newShape:a,newPerm:o}=Yn(e.dims,s),l=kn.areEqual(o,[2,3,1]),u=kn.areEqual(o,[3,1,2]),d=2===a.length&&o[0]>o[1]||l||u,c=d?a:e.dims,p=i;d&&(c=l?[a[0],a[1]*a[2]]:u?[a[0]*a[1],a[2]]:a,p=[c[1],c[0]]);let h,f=Nn("a",n,c.length),m=Un("output",n,p.length),g=16;return h=d?e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(f,m)}\n  var<workgroup> tile : array<array<${m.type.value}, 17>, 16>;\n  ${e.mainStart([g,g,1])}\n    let stride = (uniforms.output_shape[1] - 1) / 16 + 1;\n    let workgroup_id_x = workgroup_index % stride;\n    let workgroup_id_y = workgroup_index / stride;\n    let input_col = workgroup_id_y * 16u + local_id.x;\n    let input_row = workgroup_id_x * 16u + local_id.y;\n    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {\n      tile[local_id.y][local_id.x] = ${f.getByIndices(`${f.type.indices}(input_row, input_col)`)};\n    }\n    workgroupBarrier();\n\n    let output_col = workgroup_id_x * 16u + local_id.x;\n    let output_row = workgroup_id_y * 16u + local_id.y;\n    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {\n      ${m.setByIndices(`${m.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}\n    }\n  }`:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(f,m)}\n\n  ${Xn(s,r,f,m)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${m.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${m.setByOffset("global_idx",f.getByIndices("aIndices"))}\n  }`,{name:d?"TransposeShared":"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let t=kn.size(i);return{outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:d?{x:Math.ceil(p[1]/g),y:Math.ceil(p[0]/g)}:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},...On(c,p)]}},getShaderSource:h}},Zn=(e,t)=>{Gn(e.inputs),e.compute(Qn(e.inputs[0],t.perm))},Jn=e=>vn({perm:e.perm})})),Vu=Ue((()=>{Ou(),Nu(),Uu(),qu(),ju(),er={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},tr={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},nr={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},rr={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},sr=(e,t)=>{let n=[];for(let r=t-e;r<t;++r)n.push(r);return n},ir=(e,t)=>{let n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]},ar=(e,t)=>{let n=e.length+t.length,r=[],s=0;for(let i=0;i<n;i++)-1===t.indexOf(i)?r.push(e[s++]):r.push(1);return r},or=(e,t)=>{for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0},lr=(e,t)=>{let n=[];if(!or(e,t)){for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);e.forEach((e=>n.push(e)))}return n},ur=(e,t,n,r,s,i,a)=>{let o=n[0].dims,l=kn.size(i),u=kn.size(a),d=Nn("_A",n[0].dataType,o),c=Un("output",s,i);return{name:e,shaderCache:t,getShaderSource:e=>`\n        ${e.registerUniform("reduceSize","u32").declareVariables(d,c)}\n        \n          var<workgroup> aBestValues : array<f32, 32>;\n       \n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${e.mainStart(32)}\n\n          let outputIndex = global_idx / 32;\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${nr[r]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + 32) {\n           let candidate = f32(${d.getByOffset("offset + k")});\n           bestValue = ${er[r]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, 32u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${tr[r]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${c.setByOffset("outputIndex",""+("mean"===r?`${c.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${c.type.storage}(${rr[r]})`))};\n         }\n        }`,getRunData:()=>({outputs:[{dims:i,dataType:s}],dispatchGroup:{x:l},programUniforms:[{type:12,data:u}]})}},dr=(e,t,n,r)=>{let s=1===e.inputs.length?n:kr(e.inputs,n),i=s.axes;0===i.length&&!s.noopWithEmptyAxes&&(i=e.inputs[0].dims.map(((e,t)=>t)));let a=kn.normalizeAxes(i,e.inputs[0].dims.length),o=a,l=e.inputs[0],u=lr(o,e.inputs[0].dims.length);u.length>0&&(l=e.compute(Qn(e.inputs[0],u),{inputs:[0],outputs:[-1]})[0],o=sr(o.length,l.dims.length));let[d,c]=ir(l.dims,o),p=d;s.keepDims&&(p=ar(d,a)),e.compute(ur(t,{hint:s.cacheKey,inputDependencies:["type"]},[l],r,e.inputs[0].dataType,p,c),{inputs:[l]})},cr=(e,t)=>{dr(e,"ReduceMeanShared",t,"mean")},pr=(e,t)=>{dr(e,"ReduceL1Shared",t,"l1")},hr=(e,t)=>{dr(e,"ReduceL2Shared",t,"l2")},fr=(e,t)=>{dr(e,"ReduceLogSumExpShared",t,"logSumExp")},mr=(e,t)=>{dr(e,"ReduceMaxShared",t,"max")},gr=(e,t)=>{dr(e,"ReduceMinShared",t,"min")},_r=(e,t)=>{dr(e,"ReduceProdShared",t,"prod")},wr=(e,t)=>{dr(e,"ReduceSumShared",t,"sum")},yr=(e,t)=>{dr(e,"ReduceSumSquareShared",t,"sumSquare")},br=(e,t)=>{dr(e,"ReduceLogSumShared",t,"logSum")}})),qu=Ue((()=>{Ou(),Nu(),Fu(),Uu(),Vu(),vr=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.")},xr=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],$r=function(e,t,n,r,s,i){let a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=[],u=n[0].dims,d=u.length,c=kn.normalizeAxes(s,d),p=!o&&0===c.length;u.forEach(((e,t)=>{p||c.indexOf(t)>=0?a&&l.push(1):l.push(e)}));let h=l.length,f=kn.size(l);return{name:e,shaderCache:t,getShaderSource:e=>{let t=[],s=Nn("_A",n[0].dataType,d),o=Un("output",i,h),l=r(s,o,c),f=l[2];for(let n=0,r=0;n<d;n++)p||c.indexOf(n)>=0?(a&&r++,f=`for(var j${n}: u32 = 0; j${n} < ${u[n]}; j${n}++) {\n                  ${l[2].includes("last_index")?`let last_index = j${n};`:""}\n                  ${s.indicesSet("input_indices",n,`j${n}`)}\n                  ${f}\n                }`):(t.push(`${s.indicesSet("input_indices",n,o.indicesGet("output_indices",r))};`),r++);return`\n\n        ${e.registerUniform("output_size","u32").declareVariables(s,o)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${s.type.indices};\n          let output_indices = ${o.offsetToIndices("global_idx")};\n\n          ${t.join("\n")}\n          ${l[0]}       // init ops for reduce max/min\n          ${l[1]}\n          ${f}\n          ${l[3]}\n          ${4===l.length?o.setByOffset("global_idx","value"):l.slice(4).join("\n")}\n        }`},getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...On(u,l)]})}},kr=(e,t)=>{let n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),vn({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Er=(e,t,n,r)=>{let s=e.inputs,i=1===s.length?n:kr(s,n);e.compute($r(t,{hint:i.cacheKey,inputDependencies:["rank"]},[s[0]],i.noopWithEmptyAxes&&0===i.axes.length?xr:r,i.axes,s[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Sr=(e,t)=>{vr(e.inputs),Er(e,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,"value = log(value);"]))},Cr=(e,t)=>{vr(e.inputs),Er(e,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByIndices("input_indices")});`,""]))},Ar=(e,t)=>{vr(e.inputs),Er(e,"ReduceL2",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"]))},Tr=(e,t)=>{vr(e.inputs),Er(e,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByIndices("input_indices")});`,"value = log(value);"]))},zr=(e,t)=>{vr(e.inputs),Er(e,"ReduceMax",t,((e,t,n)=>{let r=[];for(let s=0;s<e.rank;s++)(n.indexOf(s)>=0||0===n.length)&&r.push(e.indicesSet("input_indices",s,0));return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = max(value, ${e.getByIndices("input_indices")});`,""]}))},Ir=(e,t)=>{vr(e.inputs),Er(e,"ReduceMean",t,((t,n,r)=>{let s=1;for(let i=0;i<t.rank;i++)(r.indexOf(i)>=0||0===r.length)&&(s*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]}))},Mr=(e,t)=>{vr(e.inputs),Er(e,"ReduceMin",t,((e,t,n)=>{let r=[];for(let s=0;s<e.rank;s++)(n.indexOf(s)>=0||0===n.length)&&r.push(`input_indices[${s}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = min(value, ${e.getByIndices("input_indices")});`,""]}))},Or=(e,t)=>{vr(e.inputs),Er(e,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByIndices("input_indices")};`,""]))},Br=(e,t)=>{vr(e.inputs),Er(e,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,""]))},Rr=(e,t)=>{vr(e.inputs),Er(e,"ReduceSumSquare",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += t * t;`,""]))},Pr=(e,t,n)=>{if(0===t.length)return n;let r=1,s=1;for(let i=0;i<t.length;i++)-1===t.indexOf(i)?r*=e[i]:s*=e[i];return s<32&&r>1024},Dr=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ir(e,t):cr(e,t)},Lr=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cr(e,t):pr(e,t)},Fr=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ar(e,t):hr(e,t)},Nr=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Tr(e,t):fr(e,t)},Ur=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?zr(e,t):mr(e,t)},jr=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Mr(e,t):gr(e,t)},Vr=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Or(e,t):_r(e,t)},qr=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Br(e,t):wr(e,t)},Wr=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Rr(e,t):yr(e,t)},Gr=(e,t)=>{Pr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sr(e,t):br(e,t)}})),Wu=Ue((()=>{Ou(),Fu(),qu(),Hr=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},Kr=(e,t)=>{Hr(e.inputs);e.compute($r("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Xr=(e,t)=>{Hr(e.inputs);e.compute($r("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Yr=e=>vn(e)})),Gu=Ue((()=>{Ou(),Nu(),Du(),Uu(),Qr=(e,t)=>{let n=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5];if(a&&o)throw new Error("Attention cannot have both past and attention_bias");if(3!==n.dims.length)throw new Error('Input "input" must have 3 dimensions');let l=n.dims[0],u=n.dims[1],d=n.dims[2];if(1!==s.dims.length)throw new Error('Input "bias" is expected to have 1 dimensions');if(2!==r.dims.length)throw new Error('Input "weights" is expected to have 2 dimensions');if(r.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==r.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let c=s.dims[0]/3,p=c,h=p;if(t.qkvHiddenSizes.length>0){if(3!==t.qkvHiddenSizes.length)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let e of t.qkvHiddenSizes)if(e%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");c=t.qkvHiddenSizes[0],p=t.qkvHiddenSizes[1],h=t.qkvHiddenSizes[2]}let f=u;if(c!==p)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==c+p+h)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let m=0;if(a){if(p!==h)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==a.dims.length)throw new Error('Input "past" must have 5 dimensions');if(2!==a.dims[0])throw new Error('Input "past" first dimension must be 2');if(a.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(a.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(a.dims[4]!==p/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(m=a.dims[3])}let g=f+m;if(i)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(o){if(4!==o.dims.length)throw new Error('Input "attention_bias" must have 4 dimensions');if(o.dims[0]!==l||o.dims[1]!==t.numHeads||o.dims[2]!==u||o.dims[3]!==g)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:u,pastSequenceLength:m,kvSequenceLength:f,totalSequenceLength:g,maxSequenceLength:-1,inputHiddenSize:d,hiddenSize:c,vHiddenSize:h,headSize:Math.floor(c/t.numHeads),vHeadSize:Math.floor(h/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Zr=(e,t,n)=>{let r=Bn(n),s=64,i=n/r;i<s&&(s=32);let a=[{type:1,data:1/n},{type:12,data:i},{type:12,data:Math.ceil(n/r/s)}],o=In(e.dataType,r),l=Mn(1,r);return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${s};${o};${r}`,inputDependencies:["type"]},getShaderSource:t=>{let n=Un("x",e.dataType,e.dims,r),i=Mn(e.dataType);return`\n  var<workgroup> thread_max: array<f32, ${s}>;\n  var<workgroup> thread_sum: array<f32, ${s}>;\n  ${t.registerUniforms([{name:"d_inv",type:"f32"},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(n)}\n  ${t.mainStart([s,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = (global_idx / ${s}) * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${l}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${l}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(r){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${r}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${s}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${l}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${l}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(r){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${r}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${s}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${n.type.value}(${i}(uniforms.d_inv));\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${l}(x[offset + i]);\n        x[offset + i] = ${n.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:t},programUniforms:a})}},Jr=(e,t,n,r,s,i,a,o)=>{let l=o+i.kvSequenceLength,u=[i.batchSize,i.numHeads,i.sequenceLength,l],d=void 0===i.kvNumHeads&&e>1&&r,c=d?[i.batchSize,i.numHeads,l,i.headSize]:void 0,p=0===a.scale?1/Math.sqrt(i.headSize):a.scale,h=Bn(i.headSize),f=i.headSize/h,m=12,g={x:Math.ceil(l/m),y:Math.ceil(i.sequenceLength/m),z:i.batchSize*i.numHeads},_=[{type:12,data:i.sequenceLength},{type:12,data:f},{type:12,data:l},{type:12,data:i.numHeads},{type:1,data:p},{type:12,data:o},{type:12,data:i.kvSequenceLength}],w=d&&r&&kn.size(r.dims)>0,y=["type","type"];w&&y.push("type"),s&&y.push("type");let b=[{dims:u,dataType:t.dataType,gpuDataType:0}];d&&b.push({dims:c,dataType:t.dataType,gpuDataType:0});return{name:"AttentionProbs",shaderCache:{hint:`${h};${void 0!==s};${void 0!==r};${e}`,inputDependencies:y},getRunData:()=>({outputs:b,dispatchGroup:g,programUniforms:_}),getShaderSource:e=>{let i=Nn("q",t.dataType,t.dims,h),a=[i,Nn("key",n.dataType,n.dims,h)];if(w){let e=Nn("past_key",r.dataType,r.dims,h);a.push(e)}s&&a.push(Nn("attention_bias",s.dataType,s.dims));let o=Un("output",t.dataType,u),l=[o];d&&l.push(Un("present_key",t.dataType,c,h));let p=Mn(1,h);return`\n  const TILE_SIZE = 12u;\n\n  var<workgroup> tileQ: array<${i.type.storage}, 144>;\n  var<workgroup> tileK: array<${i.type.storage}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"}]).declareVariables(...a,...l)}\n  ${e.mainStart([m,m,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    ${w&&d?"\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx;\n    let pastKeyOffset = uniforms.past_sequence_length * uniforms.K * headIdx;":"\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;"}\n    ${d?"let presentKeyOffset = headIdx * uniforms.N * uniforms.K;":""}\n    var value = ${p}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n      ${w&&d?"\n              if (n + local_id.y < uniforms.past_sequence_length) {\n                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\n              } else {\n                tileK[idx] =\n                         key[kOffset + (n + local_id.y - uniforms.past_sequence_length) * uniforms.K + w + local_id.x];\n              }":"tileK[idx] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];"}\n      ${d?"present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];":""}\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${p}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(h){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${h}`)}})()};\n        output[outputIdx] = ${o.type.value} (sum * uniforms.alpha) + ${s?"attention_bias[outputIdx]":"0.0"};\n    }\n  }`}}},es=(e,t,n,r,s,i)=>{let a=i+s.kvSequenceLength,o=s.nReps?s.nReps:1,l=s.vHiddenSize*o,u=null==s.kvNumHeads&&e>1&&r,d=u?[s.batchSize,s.numHeads,a,s.headSize]:void 0,c=[s.batchSize,s.sequenceLength,l],p=12,h={x:Math.ceil(s.vHeadSize/p),y:Math.ceil(s.sequenceLength/p),z:s.batchSize*s.numHeads},f=[{type:12,data:s.sequenceLength},{type:12,data:a},{type:12,data:s.vHeadSize},{type:12,data:s.numHeads},{type:12,data:l},{type:12,data:i},{type:12,data:s.kvSequenceLength}],m=u&&r&&kn.size(r.dims)>0,g=["type","type"];m&&g.push("type");let _=[{dims:c,dataType:t.dataType,gpuDataType:0}];u&&_.push({dims:d,dataType:t.dataType,gpuDataType:0});return{name:"AttentionScore",shaderCache:{hint:`${void 0!==r};${e}`,inputDependencies:g},getRunData:()=>({outputs:_,dispatchGroup:h,programUniforms:f}),getShaderSource:e=>{let s=Nn("probs",t.dataType,t.dims),i=[s,Nn("v",n.dataType,n.dims)];m&&i.push(Nn("past_value",r.dataType,r.dims));let a=[Un("output",t.dataType,c)];u&&a.push(Un("present_value",t.dataType,d));return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileQ: array<${s.type.value}, 144>;\n  var<workgroup> tileK: array<${s.type.value}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"}]).declareVariables(...i,...a)}\n  ${e.mainStart([p,p,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   ${m&&u?"\n    let pastValueOffset = headIdx * uniforms.N * uniforms.past_sequence_length + n;\n    let vOffset = headIdx * uniforms.N * uniforms.kv_sequence_length + n;\n      ":"\n   let offsetB = headIdx * uniforms.N * uniforms.K + n;\n            "}\n    ${u?"let presentValueOffset = headIdx * uniforms.N * uniforms.K + n;":""}\n   var value = ${s.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n        ${m&&u?"\n        if (w + local_id.y < uniforms.past_sequence_length) {\n          tileK[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];\n        } else {\n          tileK[idx] = v[vOffset + (w + local_id.y - uniforms.past_sequence_length) * uniforms.N];\n        }\n      ":"\n        tileK[idx] = v[offsetB + (w + local_id.y) * uniforms.N];\n      "}\n        ${u?"present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileK[idx];":""}\n      }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},ts=(e,t,n,r,s,i,a,o,l,u,d)=>{let c=Math.min(e.outputCount,1+(a?1:0)+(o?1:0)),p=void 0!==u.kvNumHeads||c>1?u.pastSequenceLength:0,h=p+u.kvSequenceLength,f=l&&kn.size(l.dims)>0?l:void 0,m=[t,n];void 0===u.kvNumHeads&&c>1&&a&&kn.size(a.dims)>0&&m.push(a),f&&m.push(f);let g=e.compute(Jr(c,t,n,a,f,u,d,p),{inputs:m,outputs:void 0===u.kvNumHeads&&c>1?[-1,1]:[-1]})[0];e.compute(Zr(g,u.batchSize*u.numHeads*u.sequenceLength,h),{inputs:[g],outputs:[]});let _=[g,r];void 0===u.kvNumHeads&&c>1&&o&&kn.size(o.dims)>0&&_.push(o),e.compute(es(c,g,r,o,u,p),{inputs:_,outputs:void 0===u.kvNumHeads&&c>1?[0,2]:[0]})},ns=(e,t)=>{let n=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],r=t.sequenceLength,s=t.inputHiddenSize,i=t.headSize,a=12,o={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],u=[{type:12,data:r},{type:12,data:s},{type:12,data:i},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:u}),getShaderSource:e=>{let t=Un("output_q",l[0].dataType,n),r=Un("output_k",l[0].dataType,n),s=Un("output_v",l[0].dataType,n),i=Nn("input",l[0].dataType,l[0].dims),o=Nn("weight",l[1].dataType,l[1].dims),u=Nn("bias",l[2].dataType,l[2].dims),d=i.type.storage;return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileInput: array<${d}, 144>;\n  var<workgroup> tileWeightQ: array<${d}, 144>;\n  var<workgroup> tileWeightK: array<${d}, 144>;\n  var<workgroup> tileWeightV: array<${d}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(i,o,u,t,r,s)}\n  ${e.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${d}(0);\n    var valueK = ${d}(0);\n    var valueV = ${d}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`}},{inputs:l,outputs:[-1,-1,-1]})},rs=(e,t)=>{let n=Qr(e.inputs,t),[r,s,i]=ns(e,n);return ts(e,r,s,i,e.inputs[4],void 0,void 0,void 0,e.inputs[5],n,t)}})),Hu=Ue((()=>{ct(),Ou(),Nu(),Fu(),Uu(),ss=(e,t)=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs");let n=(e,t,n)=>{let r=t.length;if(r!==e.length)throw new Error(`${n}: num dimensions != ${r}`);t.forEach(((t,r)=>{if(t!==e[r])throw new Error(`${n}: dim[${r}] do not match`)}))};if(e[0].dims.length>1){let r="NHWC"===t.format?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);n(e[1].dims,r,"Invalid input scale"),n(e[2].dims,r,"Invalid input B"),n(e[3].dims,r,"Invalid input mean"),n(e[4].dims,r,"Invalid input var")}else n(e[1].dims,[1],"Invalid input scale"),n(e[2].dims,[1],"Invalid input B"),n(e[3].dims,[1],"Invalid input mean"),n(e[4].dims,[1],"Invalid input var")},is=(e,t)=>{let{epsilon:n,spatial:r,format:s}=t,i=e[0].dims,a=r?Bn(i[i.length-1]):1,o="NHWC"===s&&i.length>1?a:1,l=kn.size(i)/a,u=r,d=u?i.length:i,c=Nn("x",e[0].dataType,e[0].dims,a),p=Nn("scale",e[1].dataType,e[1].dims,o),h=Nn("bias",e[2].dataType,e[2].dims,o),f=Nn("inputMean",e[3].dataType,e[3].dims,o),m=Nn("inputVar",e[4].dataType,e[4].dims,o),g=Un("y",e[0].dataType,d,a);return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${r}_${a}`,inputDependencies:u?["rank","type","type","type","type"]:void 0},getShaderSource:e=>`\n  const epsilon = ${n};\n  ${e.registerUniform("outputSize","u32").declareVariables(c,p,h,f,m,g)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${g.offsetToIndices(`global_idx * ${a}`)};\n    ${(()=>{let e="";if(r)e=`let cOffset = ${1===i.length?"0u":"NHWC"===s?`outputIndices[${i.length-1}] / ${a}`:"outputIndices[1]"};`;else if("NCHW"===s)e=`\n            ${g.indicesSet("outputIndices","0","0")}\n            let cOffset = ${g.indicesToOffset("outputIndices")};`;else{e=`var cIndices = ${p.type.indices}(0);\n                       cIndices[0] = outputIndices[${i.length-1}];`;for(let t=1;t<p.rank;t++)e+=`cIndices[${t}] = outputIndices[${t}];`;e+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return e})()}\n    let scale = ${p.getByOffset("cOffset")};\n    let bias = ${h.getByOffset("cOffset")};\n    let inputMean = ${f.getByOffset("cOffset")};\n    let inputVar = ${m.getByOffset("cOffset")};\n    let x = ${c.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${g.setByOffset("global_idx","value")}\n  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u?[{type:12,data:l},...On(i)]:[{type:12,data:l}]})}},as=e=>vn(e),os=(e,t)=>{let{inputs:n,outputCount:r}=e,s=as({...t,outputCount:r});if(ue.webgpu.validateInputContent&&ss(n,s),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(is(n,s))}})),Ku=Ue((()=>{Nu(),Uu(),ls=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},us=e=>{let t=e[0].dims,n=e[0].dims[2],r=kn.size(t)/4,s=e[0].dataType,i=Nn("input",s,t,4),a=Nn("bias",s,[n],4),o=Nn("residual",s,t,4),l=Un("output",s,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:e=>`\n  const channels = ${n}u / 4;\n  ${e.declareVariables(i,a,o,l)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(r)}\n    let value = ${i.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};\n    ${l.setByOffset("global_idx","value")}\n  }`}},ds=e=>{ls(e.inputs),e.compute(us(e.inputs))}})),Xu=Ue((()=>{Ou(),Nu(),Fu(),Uu(),cs=(e,t,n,r,s,i,a)=>{let o=Math.ceil(t/4),l="";l="string"==typeof s?`${s}(a)`:s("a");let u=Nn("inputData",n,[o],4),d=Un("outputData",r,[o],4),c=[{name:"vec_size",type:"u32"}];return a&&c.push(...a),`\n      ${e.registerUniforms(c).declareVariables(u,d)}\n\n  ${i??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${u.getByOffset("global_idx")};\n    ${d.setByOffset("global_idx",l)}\n  }`},ps=function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:e.dataType,a=arguments.length>6?arguments[6]:void 0,o=arguments.length>7?arguments[7]:void 0,l=[{type:12,data:Math.ceil(kn.size(e.dims)/4)}];return a&&l.push(...a),{name:t,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:t=>cs(t,kn.size(e.dims),e.dataType,i,n,r,o),getRunData:t=>({outputs:[{dims:e.dims,dataType:i}],dispatchGroup:{x:Math.ceil(kn.size(t[0].dims)/64/4)},programUniforms:l})}},hs=e=>{e.compute(ps(e.inputs[0],"Abs","abs"))},fs=e=>{e.compute(ps(e.inputs[0],"Acos","acos"))},ms=e=>{e.compute(ps(e.inputs[0],"Acosh","acosh"))},gs=e=>{e.compute(ps(e.inputs[0],"Asin","asin"))},_s=e=>{e.compute(ps(e.inputs[0],"Asinh","asinh"))},ws=e=>{e.compute(ps(e.inputs[0],"Atan","atan"))},ys=e=>{e.compute(ps(e.inputs[0],"Atanh","atanh"))},bs=e=>vn(e),vs=(e,t)=>{let n;switch(t.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(ps(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},xs=e=>{let t,n,r=e.length>=2&&0!==e[1].data,s=e.length>=3&&0!==e[2].data;switch(e[0].dataType){case 1:t=r?e[1].getFloat32Array()[0]:-34028234663852886e22,n=s?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=r?e[1].getUint16Array()[0]:64511,n=s?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return vn({min:t,max:n})},$s=(e,t)=>{let n=t||xs(e.inputs),r=Mn(e.inputs[0].dataType);e.compute(ps(e.inputs[0],"Clip",(e=>`clamp(${e}, vec4<${r}>(uniforms.min), vec4<${r}>(uniforms.max))`),void 0,n.cacheKey,void 0,[{type:e.inputs[0].dataType,data:n.min},{type:e.inputs[0].dataType,data:n.max}],[{name:"min",type:r},{name:"max",type:r}]),{inputs:[0]})},ks=e=>{e.compute(ps(e.inputs[0],"Ceil","ceil"))},Es=e=>{e.compute(ps(e.inputs[0],"Cos","cos"))},Ss=e=>{e.compute(ps(e.inputs[0],"Cosh","cosh"))},Cs=e=>vn(e),As=(e,t)=>{let n=Mn(e.inputs[0].dataType);e.compute(ps(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\n  const elu_alpha_ = ${n}(${t.alpha});\n\n  fn elu_f32(a: ${n}) -> ${n} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Ts=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"f32";return`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`},zs=e=>{let t=Mn(e.inputs[0].dataType);e.compute(ps(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),Ts(t)))},Is=e=>{e.compute(ps(e.inputs[0],"Exp","exp"))},Ms=e=>{e.compute(ps(e.inputs[0],"Floor","floor"))},Os=e=>{let t=Mn(e.inputs[0].dataType);e.compute(ps(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),Ts(t)))},Bs=(e,t)=>{let n=Mn(e.inputs[0].dataType);e.compute(ps(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<${n}>(0.0))`),`const leaky_relu_alpha_ = ${n}(${t.alpha});`,t.cacheKey))},Rs=e=>{e.compute(ps(e.inputs[0],"Not",(e=>`!${e}`)))},Ps=e=>{e.compute(ps(e.inputs[0],"Neg",(e=>`-${e}`)))},Ds=e=>{e.compute(ps(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},Ls=e=>{let t=Mn(e.inputs[0].dataType);e.compute(ps(e.inputs[0],"Relu",(e=>`select(vec4<${t}>(0.0), ${e}, ${e} > vec4<${t}>(0.0))`)))},Fs=e=>{e.compute(ps(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},Ns=e=>vn(e),Us=(e,t)=>{let n=Mn(e.inputs[0].dataType);e.compute(ps(e.inputs[0],"HardSigmoid",(e=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${t.alpha} * ${e} + vec4<${n}>(${t.beta})))`),void 0,t.cacheKey))},js=e=>{e.compute(ps(e.inputs[0],"Sin","sin"))},Vs=e=>{e.compute(ps(e.inputs[0],"Sinh","sinh"))},qs=e=>{e.compute(ps(e.inputs[0],"Sqrt","sqrt"))},Ws=e=>{e.compute(ps(e.inputs[0],"Tan","tan"))},Gs=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Hs=e=>{e.compute(ps(e.inputs[0],"Tanh",Gs))},Ks=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"f32";return`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Gs("v")};\n}\n`},Xs=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Ys=e=>{let t=Mn(e.inputs[0].dataType);e.compute(ps(e.inputs[0],"FastGelu",Xs,Ks(t),void 0,e.inputs[0].dataType))},Qs=(e,t)=>{let n=Mn(e.inputs[0].dataType);return e.compute(ps(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<${n}>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_ = vec4<${n}>(${t.alpha});`,t.cacheKey)),0},Zs=e=>{e.compute(ps(e.inputs[0],"Log","log"))},Js=(e,t)=>`\nconst alpha = vec4<${e}>(${t});\nconst one = ${e}(1.0);\nconst zero = ${e}(0.0);\n\nfn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {\n  let v = x *alpha;\n  var x1 : vec4<${e}>;\n  for (var i = 0; i < 4; i = i + 1) {\n    if (v[i] >= zero) {\n      x1[i] = one / (one + exp(-v[i]));\n    } else {\n      x1[i] = one - one / (one + exp(v[i]));\n    }\n  }\n  return x * x1;\n}\n`,ei=e=>`quick_gelu_impl(${e})`,ti=(e,t)=>{let n=Mn(e.inputs[0].dataType);e.compute(ps(e.inputs[0],"QuickGelu",ei,Js(n,t.alpha),t.cacheKey,e.inputs[0].dataType))}})),Yu=Ue((()=>{Nu(),Uu(),Xu(),ni=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ri=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let n=Nn("input",e[0].dataType,e[0].dims,4),r=Nn("bias",e[0].dataType,[e[0].dims[2]],4),s=Un("output",e[0].dataType,t,4),i=kn.size(t)/4,a=In(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:t=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${t.declareVariables(n,r,s)}\n\n  ${Ts(a)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(i)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${s.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},si=e=>{ni(e.inputs),e.compute(ri(e.inputs))}})),Qu=Ue((()=>{Ou(),Nu(),Uu(),ii=(e,t,n,r,s,i,a,o,l,u,d,c)=>{let p,h;"string"==typeof o?p=h=(e,t)=>`${o}((${e}),(${t}))`:"function"==typeof o?p=h=o:(p=o.scalar,h=o.vector);let f,m=Un("outputData",d,r.length,4),g=Nn("aData",l,t.length,4),_=Nn("bData",u,n.length,4);if(s)if(i){let e=1===kn.size(t),r=1===kn.size(n),s=t.length>0&&t[t.length-1]%4===0,i=n.length>0&&n[n.length-1]%4===0;f=e||r?m.setByOffset("global_idx",h(e?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"),r?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"))):`\n            let outputIndices = ${m.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${g.broadcastedIndicesToOffset("outputIndices",m)};\n            let offsetB = ${_.broadcastedIndicesToOffset("outputIndices",m)};\n            ${m.setByOffset("global_idx",h(a||s?g.getByOffset("offsetA / 4u"):`${g.type.value}(${g.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||i?_.getByOffset("offsetB / 4u"):`${_.type.value}(${_.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else f=m.setByOffset("global_idx",h(g.getByOffset("global_idx"),_.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let e=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",r=`aData[indexA${t}][componentA${t}]`,s=`bData[indexB${t}][componentB${t}]`;return`\n            let outputIndices${t} = ${m.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offsetA${t} = ${g.broadcastedIndicesToOffset(`outputIndices${t}`,m)};\n            let offsetB${t} = ${_.broadcastedIndicesToOffset(`outputIndices${t}`,m)};\n            let indexA${t} = offsetA${t} / 4u;\n            let indexB${t} = offsetB${t} / 4u;\n            let componentA${t} = offsetA${t} % 4u;\n            let componentB${t} = offsetB${t} % 4u;\n            ${e}[${t}] = ${n}(${p(r,s)});\n          `};f=9===d?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("outputData[global_idx]",0)}\n            ${e("outputData[global_idx]",1)}\n            ${e("outputData[global_idx]",2)}\n            ${e("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(g,_,m)}\n\n        ${c??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${f}\n      }`},ai=function(e,t,n,r,s,i){let a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:n.dataType,o=!kn.areEqual(n.dims,r.dims),l=n.dims,u=kn.size(n.dims),d=!1,c=!1,p=[o];if(o){let e=$n.calcShape(n.dims,r.dims,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");l=e,u=kn.size(l);let t=1===kn.size(n.dims),s=1===kn.size(r.dims),i=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,a=r.dims.length>0&&r.dims[r.dims.length-1]%4===0;p.push(t),p.push(s),p.push(i),p.push(a);let o=1;for(let u=1;u<l.length;u++){let e=n.dims[n.dims.length-u]??1;if(e!==(r.dims[r.dims.length-u]??1))break;o*=e}o%4===0?(c=!0,d=!0):(t||s||i||a)&&(d=!0)}else d=!0;return p.push(d),{name:e,shaderCache:{hint:t+p.map((e=>e.toString())).join("_"),inputDependencies:["rank","rank"]},getShaderSource:e=>ii(e,n.dims,r.dims,l,d,o,c,s,n.dataType,r.dataType,a,i),getRunData:()=>({outputs:[{dims:l,dataType:a}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:Math.ceil(kn.size(l)/4)},...On(n.dims,r.dims,l)]})}},oi=(e,t,n,r,s,i)=>{e.compute(ai(t,s??"",e.inputs[0],e.inputs[1],n,r,i))},li=e=>{oi(e,"Add",((e,t)=>`${e}+${t}`))},ui=e=>{oi(e,"Div",((e,t)=>`${e}/${t}`))},di=e=>{oi(e,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},ci=e=>{oi(e,"Mul",((e,t)=>`${e}*${t}`))},pi=e=>{let t=Nn("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;oi(e,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${"i32"===t?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},hi=e=>{oi(e,"Sub",((e,t)=>`${e}-${t}`))},fi=e=>{oi(e,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},mi=e=>{oi(e,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},gi=e=>{oi(e,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},_i=e=>{oi(e,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}})),Zu=Ue((()=>{Ou(),Nu(),Fu(),Uu(),wi=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let n=e[0],r=n.dataType,s=n.dims.length;e.forEach(((e,i)=>{if(0!==i){if(e.dataType!==r)throw new Error("input tensors should be one type");if(e.dims.length!==s)throw new Error("input tensors should have the same shape");e.dims.forEach(((e,r)=>{if(r!==t&&e!==n.dims[r])throw new Error("non concat dimensions must match")}))}}))},yi=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,bi=(e,t)=>{let n=e.length,r=[];for(let s=0;s<n;++s){let i=t.setByOffset("global_idx",e[s].getByIndices("indices"));1===n?r.push(i):0===s?r.push(`if (inputIndex == ${s}u) { ${i} }`):s===n-1?r.push(`else { ${i} }`):r.push(`else if (inputIndex == ${s}) { ${i} }`)}return r.join("\n")},vi=(e,t,n,r)=>{let s=kn.size(n),i=new Array(e.length),a=new Array(e.length),o=0,l=[],u=[],d=[{type:12,data:s}];for(let f=0;f<e.length;++f)o+=e[f].dims[t],i[f]=o,u.push(e[f].dims.length),a[f]=Nn(`input${f}`,r,u[f]),l.push("rank"),d.push({type:12,data:i[f]});for(let f=0;f<e.length;++f)d.push(...On(e[f].dims));d.push(...On(n));let c=Un("output",r,n.length),p=c.indicesGet("indices",t),h=Array.from(Array(i.length).keys()).map((e=>`uniforms.sizeInConcatAxis${e}`)).join(",");return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d}),getShaderSource:t=>`\n\n  ${(()=>{t.registerUniform("outputSize","u32");for(let n=0;n<e.length;n++)t.registerUniform(`sizeInConcatAxis${n}`,"u32");return t.declareVariables(...a,c)})()}\n\n  ${yi(i.length,h)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${p});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${i.length}u>(${h});\n      ${p} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${bi(a,c)}\n  }`}},xi=(e,t)=>{let n=e.inputs,r=n[0].dims,s=kn.normalizeAxis(t.axis,r.length);wi(n,s);let i=r.slice();i[s]=n.reduce(((e,t)=>e+(t.dims.length>s?t.dims[s]:0)),0);let a=n.filter((e=>kn.size(e.dims)>0));e.compute(vi(a,s,i,n[0].dataType),{inputs:a})},$i=e=>vn({axis:e.axis})})),Ju=Ue((()=>{Ou(),Nu(),ki=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"f32";switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${n}(uniforms.clip_min)), ${t}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return"let e2x = exp(-2.0 * abs(value));\n              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);\n        ";case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ei=(e,t)=>{"Clip"===e.activation?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):"HardSigmoid"===e.activation?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):"LeakyRelu"===e.activation&&t.push({type:1,data:e.alpha})},Si=(e,t)=>{"Clip"===e.activation?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===e.activation?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===e.activation&&t.push({name:"alpha",type:"f32"})},Ci=e=>{let t=e?.activation||"";if("HardSigmoid"===t){let[n,r]=e?.activation_params||[.2,.5];return{activation:t,alpha:n,beta:r}}if("Clip"===t){let[n,r]=e?.activation_params||[Cn,An];return{activation:t,clipMax:r,clipMin:n}}if("LeakyRelu"===t){let[n]=e?.activation_params||[.01];return{activation:t,alpha:n}}return{activation:t}}})),ed=Ue((()=>{Ai=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Ti=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `})),td=Ue((()=>{zi=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`})),nd=Ue((()=>{Ou(),Nu(),Uu(),Ju(),ed(),Ii=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Mi=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Oi=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"f32",r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:32,l=t[1]*e[1],u=t[0]*e[0],d=s?l:i,c=s?i:l,p=d/t[0],h=i/t[1];if((!s||4!==p||4!==e[1])&&(s||3!==p&&4!==p)||d%t[0]!==0||i%t[1]!==0||4!==e[0])throw new Error(`If transposeA ${s} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${p} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${p}<${n}>, ${d/p}>, ${c}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${n}>, ${u/e[0]}>, ${i}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${p};\nconst tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let num_tiles = ${a?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};\n\n  var acc: array<vec4<${n}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${h};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Ii(s,r)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===p?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Mi(s,p)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Bi=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,Ri=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Pi=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"f32",r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,a=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:32,l=arguments.length>8&&void 0!==arguments[8]&&arguments[8],u=e[1]*t[1],d=e[0]*t[0],c=s?u:i,p=s?i:u;if(p%t[1]!==0||c%t[0]!==0||i%t[1]!==0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${i} must be divisible by workgroupSize[1]${t[1]}`);let h=p/t[1],f=c/t[0],m=i/t[1],g=l?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${u};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          ${Bi(s,r)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${r?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${n}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${u};\n\nlet tileRowA = i32(localId.y) * ${h};\nlet tileColA = i32(localId.x) * ${f};\nlet tileRowB = i32(localId.y) * ${m};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Bi(s,r)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${r?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${n}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Ri(s)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${n}, ${c}>, ${p}>;\n  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};\n\n    var acc : array<array<${n}, colPerThread>, rowPerThread>;\n    ${g}\n  }\n`},Di=function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],[a,o,l]=s,[u,d,c,p]=r,h=Wn(a,l),f=Wn(o,l),m=In(r[0].type.tensor);return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${Ai(e,m)} {\n      var value = ${Ai(e,m)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${(()=>{let e=d.rank,t=u.rank,n=`var aIndices: ${d.type.indices};`;for(let r=e-2-1,s=t-1;r>=0;r--,s--)n+=`\naIndices[${r}] = ${t>1?`batchIndices[${s}]`:"batchIndices"};`;return h.forEach((e=>{n+=`\naIndices[${e}] = 0;`})),n+=`\naIndices[${e-2}] = u32(row);\n                   aIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${Ai(e,m)} {\n      var value = ${Ai(e,m)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${(()=>{let e=c.rank,t=u.rank,n=`var bIndices: ${c.type.indices};`;for(let r=e-2-1,s=t-1;r>=0;r--,s--)n+=`\nbIndices[${r}] = ${t>1?`batchIndices[${s}]`:"batchIndices"};`;return f.forEach((e=>{n+=`\nbIndices[${e}] = 0;`})),n+=`\nbIndices[${e-2}] = u32(row);\n                   bIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${c.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ai(e,m)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${i?"bias[colIn]":`${Ai(e,m)}(bias[row])`};`:""}\n        ${n}\n        ${p.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Li=function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5?arguments[5]:void 0,a=e[0].dims,o=e[1].dims,l=a.slice(0,-2),u=o.slice(0,-2),d=r?r.slice(0,-2):n.slice(0,-2),c=kn.size(d),p=a[a.length-2],h=a[a.length-1],f=o[o.length-1],m=h%4===0&&f%4===0,g=p<=8?[4,1,1]:[4,4,1],_=[8,8,1],w=[Math.ceil(f/_[0]/g[0]),Math.ceil(p/_[1]/g[1]),Math.ceil(c/_[2]/g[2])],y=m?4:1,b=[...l,p,h/y],v=b.length,x=[...u,h,f/y],$=x.length,k=[c,p,f/y],E=[{type:6,data:p},{type:6,data:f},{type:6,data:h}];Ei(t,E),E.push(...On(d,b,x));let S=["rank","rank"],C=e.length>2;C&&(E.push(...On(e[2].dims)),S.push("rank")),E.push(...On(k));return{name:"MatMul",shaderCache:{hint:`${g};${t.activation};${m};${s}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:i?i(n):n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:E}),getShaderSource:n=>{let r=d.length,i=jn("batchDims",e[0].dataType,r,1),a=In(e[0].dataType),o=Nn("a",e[0].dataType,v,y),c=Nn("b",e[1].dataType,$,y),p=Un("result",e[0].dataType,k.length,y),h=[o,c];if(C){let t=s?y:1;h.push(Nn("bias",e[2].dataType,e[2].dims.length,t))}let f=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Si(t,f);let w=In(p.type.tensor),b=ki(t,p.type.value,w),x=Di(y,C,b,[i,o,c,p],[l,u,d],s);return`\n  ${n.registerUniforms(f).registerInternalVariables(i).declareVariables(...h,p)}\n  ${x}\n  ${m?Oi(g,_,a,i):Pi(g,_,a,i)}\n                   `}}}})),rd=Ue((()=>{Ou(),Ru(),Uu(),Ju(),ed(),td(),nd(),Fi=function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5?arguments[5]:void 0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:4,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:4,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:4,u=arguments.length>9&&void 0!==arguments[9]?arguments[9]:"f32",d=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",c=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",f=e?"row":"col",m=e?"col":"row",g=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${f} / outWidth;\n    let outCol = ${f} % outWidth;\n\n    let WRow = ${m} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${m} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${m} % inChannels;\n    var resData = ${Ai(a,u)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${h}) {\n      ${d}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${u}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(a)}\n    }\n    return resData;`,_=e?t&&r?`\n    let col = colIn * ${a};\n    ${g}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${g}\n    }\n    return ${Ai(a,u)}(0.0);`:r&&n?`\n    let col = colIn * ${a};\n    ${g}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${g}\n    }\n    return ${Ai(a,u)}(0.0);`,w=`${(e=>{switch(e){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}`,y=Ai(l,u),b=Ai(e?a:o,u),v=Ai(e?o:a,u),x=ki(i,y,u);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${b} {\n      ${e?_:w}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${v} {\n      ${e?w:_}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Ti(s)}\n      ${x}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Ni=(e,t,n,r,s,i,a,o,l)=>{let u="NHWC"===t.format,d=u?e[0].dims[3]:e[0].dims[1],c=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],f=u?n[3]:n[1],m=u&&(d%4===0||d%3===0)&&f%4===0,g=u?f:p*h,_=u?p*h:f,w=[8,8,1],y=r<=8?[4,1,1]:[4,4,1],b=[Math.ceil(g/w[0]/y[0]),Math.ceil(_/w[1]/y[1]),Math.ceil(c/w[2]/y[2])];un("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${b}`));let v=m?u&&d%4!==0?3:4:1,x=w[1]*y[1],$=w[0]*y[0],k=Math.max(w[0]*v,w[1]),E=r%x===0,S=s%$===0,C=i%k===0,A=m?[v,4,4]:[1,1,1],T=[{type:6,data:r},{type:6,data:s},{type:6,data:i},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Ei(t,T),T.push(...On(e[0].dims,e[1].dims));let z=["rank","rank"];a&&(T.push(...On(e[2].dims)),z.push("rank")),T.push(...On(n));return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${v};${m};${E};${S};${C};${x};${$};${k}`,inputDependencies:z},getRunData:()=>({outputs:[{dims:l?l(n):n,dataType:e[0].dataType}],dispatchGroup:{x:b[0],y:b[1],z:b[2]},programUniforms:T}),getShaderSource:r=>{let s=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Si(t,s);let i=m?4:1,l=In(e[0].dataType),d=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${m?`vec4<${l}>`:l}) {\n        result[flatIndex] = ${m?`vec4<${l}>`:l}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${m?`vec4<${l}>`:l}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${m?"/ 4":""}, value);\n      }`,c=[Nn("x",e[0].dataType,e[0].dims.length,3===v?1:v),Nn("w",e[1].dataType,e[1].dims.length,i)],p=Un("result",e[0].dataType,n.length,i);if(a){let t=Nn("bias",e[2].dataType,e[2].dims.length,i);c.push(t),d+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${m?`vec4<${l}>`:l} {\n          return bias[coords.${u?"w":"y"}${m?"/ 4":""}];\n        }`}return`\n        ${zi("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${r.registerUniforms(s).declareVariables(...c,p)}\n        ${d}\n        ${Fi(u,E,S,C,a,t,A[0],A[1],A[2],l)}\n        ${m?Oi(y,w,l,void 0,!u,k):Pi(y,w,l,void 0,!u,k,!1,void 0,o)}`}}}})),sd=Ue((()=>{Ou(),Ru(),Nu(),Uu(),Ju(),ed(),Ui=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t},ji=e=>"number"==typeof e?[e,e,e]:e,Vi=(e,t)=>t<=1?e:e+(e-1)*(t-1),qi=function(e,t,n){let r=Vi(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)},Wi=(e,t,n,r,s)=>{null==s&&(s=qi(e,t[0],r[0]));let i=[0,0,0,n];for(let a=0;a<3;a++)e[a]+2*s>=t[a]&&(i[a]=Math.trunc((e[a]-t[a]+2*s)/r[a]+1));return i},Gi=(e,t,n,r,s,i,a,o,l,u)=>{let d,c,p,h;if("VALID"===e&&(e=0),"number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e};let f=Wi([t,n,r,1],[o,l,u],1,[s,i,a],e);c=f[0],p=f[1],h=f[2]}else if(Array.isArray(e)){if(!e.every(((e,t,n)=>e===n[0])))throw Error(`Unsupported padding parameter: ${e}`);d={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let f=Wi([t,n,r,1],[o,l,u],1,[s,i,a],e[0]);c=f[0],p=f[1],h=f[2]}else{if("SAME_UPPER"!==e)throw Error(`Unknown padding parameter: ${e}`);{c=Math.ceil(t/s),p=Math.ceil(n/i),h=Math.ceil(r/a);let e=(c-1)*s+o-t,f=(p-1)*i+l-n,m=(h-1)*a+u-r,g=Math.floor(e/2),_=e-g,w=Math.floor(f/2),y=f-w,b=Math.floor(m/2);d={top:w,bottom:y,left:b,right:m-b,front:g,back:_}}}return{padInfo:d,outDepth:c,outHeight:p,outWidth:h}},Hi=function(e,t,n,r,s){let i,a,o,l,u,d=arguments.length>5&&void 0!==arguments[5]&&arguments[5],c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";if("channelsLast"===c)[i,a,o,l,u]=e;else{if("channelsFirst"!==c)throw new Error(`Unknown dataFormat ${c}`);[i,u,a,o,l]=e}let[p,,h,f,m]=t,[g,_,w]=ji(n),[y,b,v]=ji(r),x=Vi(h,y),$=Vi(f,b),k=Vi(m,v),{padInfo:E,outDepth:S,outHeight:C,outWidth:A}=Gi(s,a,o,l,g,_,w,x,$,k),T=d?p*u:p,z=[0,0,0,0,0];return"channelsFirst"===c?z=[i,T,S,C,A]:"channelsLast"===c&&(z=[i,S,C,A,T]),{batchSize:i,dataFormat:c,inDepth:a,inHeight:o,inWidth:l,inChannels:u,outDepth:S,outHeight:C,outWidth:A,outChannels:T,padInfo:E,strideDepth:g,strideHeight:_,strideWidth:w,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:x,effectiveFilterHeight:$,effectiveFilterWidth:k,dilationDepth:y,dilationHeight:b,dilationWidth:v,inShape:e,outShape:z,filterShape:t}},Ki=(e,t,n,r,s,i)=>{let a="channelsLast"===i,o=(a?e[0].dims[3]:e[0].dims[1],{x:n.map(((e,t)=>t))}),l=[Math.ceil(Ui(o.x.map((e=>n[e])))/64),1,1];un("verbose",(()=>`[conv3d_naive_webgpu] dispatch = ${l}`));let u=[{type:12,data:kn.size(n)},{type:12,data:r},{type:12,data:s},{type:12,data:t.strides},{type:12,data:t.dilations}];Ei(t,u),u.push(...On(e[0].dims,e[1].dims));let d=["rank","rank"],c=3===e.length;c&&(u.push(...On(e[2].dims)),d.push("rank")),u.push(...On(n));return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${a};1;${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:u}),getShaderSource:i=>{let o=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:r.length},{name:"pads",type:"u32",length:s.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Si(t,o);let l=In(e[0].dataType),u=Nn("x",e[0].dataType,e[0].dims.length,1),d=Nn("W",e[1].dataType,e[1].dims.length,1),p=[u,d],h=Un("result",e[0].dataType,n.length,1),f="";if(c){let t=Nn("bias",e[2].dataType,e[2].dims.length,1);p.push(t),f+=`\n        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${l} {\n          return bias[${Ln("coords",a?4:1,5)}];\n        }`}let m=Ai(1,l),g=ki(t,m,l);return`\n            ${f}\n            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${u.getByIndices("aIndices")};\n            }\n            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${d.getByIndices("aIndices")};\n            }\n          ${i.registerUniforms(o).declareVariables(...p,h)}\n          ${i.mainStart()}\n          ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n              let coords = ${h.offsetToIndices("global_idx")};\n              let batch = ${Ln("coords",0,u.rank)};\n              let d2 = ${Ln("coords",a?u.rank-1:1,u.rank)};\n              let xFRCCorner = vec3<u32>(${Ln("coords",a?1:2,u.rank)},\n              ${Ln("coords",a?2:3,u.rank)},\n              ${Ln("coords",a?3:4,u.rank)}) * uniforms.strides - uniforms.pads;\n              let xFCorner = xFRCCorner.x;\n              let xRCorner = xFRCCorner.y;\n              let xCCorner = xFRCCorner.z;\n              let xShapeY = ${Ln("uniforms.x_shape",a?1:2,u.rank)};\n              let xShapeZ = ${Ln("uniforms.x_shape",a?2:3,u.rank)};\n              let xShapeW = ${Ln("uniforms.x_shape",a?3:4,u.rank)};\n              let xShapeU = ${Ln("uniforms.x_shape",a?4:1,u.rank)};\n              let inputDepthNearestVec4 = (xShapeU / 4) * 4;\n              let inputDepthVec4Remainder = xShapeU % 4;\n\n              var value = 0.0;\n              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {\n                let xF = xFCorner + wF * uniforms.dilations[0];\n                if (xF < 0 || xF >= xShapeY) {\n                  continue;\n                }\n\n                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {\n                  let xR = xRCorner + wR * uniforms.dilations[1];\n                  if (xR < 0 || xR >= xShapeZ) {\n                    continue;\n                  }\n\n                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {\n                    let xC = xCCorner + wC * uniforms.dilations[2];\n                    if (xC < 0 || xC >= xShapeW) {\n                      continue;\n                    }\n\n                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {\n                      ${a?"let xValues = vec4<f32>(\n                               getX(batch, xF, xR, xC, d1),\n                               getX(batch, xF, xR, xC, d1 + 1),\n                               getX(batch, xF, xR, xC, d1 + 2),\n                               getX(batch, xF, xR, xC, d1 + 3));\n                            ":"let xValues = vec4<f32>(\n                               getX(batch, d1, xF, xR, xC),\n                               getX(batch, d1 + 1, xF, xR, xC),\n                               getX(batch, d1 + 2, xF, xR, xC),\n                               getX(batch, d1 + 3, xF, xR, xC));\n                            "}\n                            let wValues = vec4<f32>(\n                              getW(d2, d1, wF, wR, wC),\n                              getW(d2, d1 + 1, wF, wR, wC),\n                              getW(d2, d1 + 2, wF, wR, wC),\n                              getW(d2, d1 + 3, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                    if (inputDepthVec4Remainder == 1) {\n                        ${a?"value += getX(batch, xF, xR, xC, inputDepthNearestVec4)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);":"value += getX(batch, inputDepthNearestVec4, xF, xR, xC)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);"}\n                    } else if (inputDepthVec4Remainder == 2) {\n                      ${a?"let xValues = vec2<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));\n                      ":"let xValues = vec2<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));\n                    "}\n                    let wValues = vec2<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    } else if (inputDepthVec4Remainder == 3) {\n                      ${a?"let xValues = vec3<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));\n                      ":"let xValues = vec3<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));\n                    "}\n                    let wValues = vec3<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                  }\n                }\n              }\n              ${c?"value = value + getBiasByOutputCoords(coords)":""};\n              ${g}\n              result[global_idx] = f32(value);\n          }`}}}})),id=Ue((()=>{Ou(),Nu(),Uu(),Ju(),Xi=(e,t,n,r)=>{let s=e.length>2,i=s?"value += b[output_channel];":"",a=e[0].dims,o=e[1].dims,l="NHWC"===t.format,u=l?n[3]:n[1],d=u/t.group,c=l&&d>=4?Bn(u):1,p=kn.size(n)/c,h=[{type:12,data:p},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:d}];Ei(t,h),h.push(...On(a,[o[0],o[1],o[2],o[3]/c]));let f=s?["rank","rank","rank"]:["rank","rank"];h.push(...On([n[0],n[1],n[2],n[3]/c]));return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${c}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:r=>{let u=Un("output",e[0].dataType,n.length,c),d=In(u.type.tensor),p=ki(t,u.type.value,d),h=Nn("x",e[0].dataType,a.length),f=Nn("w",e[1].dataType,o.length,c),m=[h,f];s&&m.push(Nn("b",e[2].dataType,e[2].dims,c));let g=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Si(t,g);let _=l?`\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {\n            let input_channel = in_channel_offset + wInChannel;\n            let xVal = ${h.get("batch","xHeight","xWidth","input_channel")};\n            let wVal = ${f.get("wHeight","wWidth","wInChannel","output_channel")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `:`\n      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n        let input_channel = in_channel_offset + wInChannel;\n        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {\n              continue;\n            }\n\n            let xVal = ${h.get("batch","input_channel","xHeight","xWidth")};\n            let wVal = ${f.get("output_channel","wInChannel","wHeight","wWidth")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `;return`\n  ${r.registerUniforms(g).declareVariables(...m,u)}\n\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${u.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${l?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel * ${c} / uniforms.output_channels_per_group;\n    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];\n\n    var value: ${u.type.value} = ${u.type.value}(0);\n    ${_}\n    ${i}\n    ${p}\n    ${u.setByOffset("global_idx","value")}\n  }`}}},Yi=(e,t,n,r)=>{let s=e.length>2,i=Bn(n[3]),a=Bn(n[2]),o=kn.size(n)/i/a,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],u=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],d=[n[0],n[1],n[2],n[3]/i],c=[{type:12,data:o},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Ei(t,c),c.push(...On(l,u,d));let p=(a-1)*t.strides[1]+u[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${a};${p};${u[0]};${u[1]}`,inputDependencies:s?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c}),getShaderSource:n=>{let r=Un("output",e[0].dataType,d.length,i),o=In(r.type.tensor),c=ki(t,r.type.value,o),h=Nn("x",e[0].dataType,l.length,i),f=Nn("w",e[1].dataType,u.length,i),m=[h,f];s&&m.push(Nn("b",e[2].dataType,e[2].dims,i));let g=s?"value += b[output_channel];":"",_=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Si(t,_),`\n  ${n.registerUniforms(_).declareVariables(...m,r)}\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${a}u;\n    let col = (index1 % width1) * ${a}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${h.type.value}, ${p}>;\n    var values: array<${r.type.value}, ${a}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w's height/width.\n    for (var w_height: u32 = 0u; w_height < ${u[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${p}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${h.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${h.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${u[1]}; w_width++) {\n          let w_val = ${f.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${a}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${a}u; i++) {\n      var value = values[i];\n      ${g}\n      ${c}\n      ${r.set("batch","row","col + i","output_channel","value")};\n    }\n  }`}}}})),ad=Ue((()=>{Ou(),Nu(),nd(),Uu(),Ju(),Qi=function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5?arguments[5]:void 0,a=e[0].dims,o=e[1].dims,l=a[a.length-2],u=o[o.length-1],d=a[a.length-1],c=Bn(u),p=Bn(d),h=Bn(l),f=kn.size(n)/c/h,m=e.length>2,g=r?r.slice(0,-2):n.slice(0,-2),_=[kn.size(g),l,u],w=[{type:12,data:f},{type:12,data:l},{type:12,data:u},{type:12,data:d}];Ei(t,w),w.push(...On(g,a,o)),m&&w.push(...On(e[2].dims)),w.push(...On(_));return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${c};${p};${h};${s}`,inputDependencies:m?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:w}),getShaderSource:r=>{let i=jn("batch_dims",e[0].dataType,g.length),l=Nn("a",e[0].dataType,a.length,p),u=Nn("b",e[1].dataType,o.length,c),d=Un("output",e[0].dataType,_.length,c),f=In(d.type.tensor),w=ki(t,d.type.value,f),y=[l,u],b="";if(m){let t=s?c:1;y.push(Nn("bias",e[2].dataType,e[2].dims.length,t)),b=""+(s?`value += bias[col / ${t}];`:`value += ${d.type.value}(bias[row + i]);`)}let v=a.slice(0,-2),x=o.slice(0,-2),$=Wn(v,g),k=Wn(x,g),E=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Si(t,E);let S=(e,t)=>{let n=e.rank,r=e.name;if(2===n)return`var ${r}_indices = ${e.type.indices}(0u, 0u);`;let s=i.rank,a=`var ${r}_indices: ${e.type.indices};`;for(let i=n-2-1,o=s-1;i>=0;i--,o--)a+=`\n${r}_indices[${i}] = ${s>1?`batch_indices[${o}]`:"batch_indices"};`;return t.forEach((e=>{a+=`\n${r}_indices[${e}] = 0;`})),a+=`${r}_indices[${n-2}] = 0u;\n                     ${r}_indices[${n-1}] = 0u;`,a};return`\n  ${r.registerUniforms(E).registerInternalVariables(i).declareVariables(...y,d)}\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${c})) * ${c};\n    var index1 = global_idx / (uniforms.N / ${c});\n    let stride1 = uniforms.M / ${h};\n    let row = (index1 % stride1) * ${h};\n    let batch = index1 / stride1;\n\n    ${2===n.length?"":`let batch_indices = ${i.offsetToIndices("batch")};`}\n    ${S(l,$)}\n    let a_offset = ${l.indicesToOffset("a_indices")};\n    ${S(u,k)}\n    let b_offset = ${u.indicesToOffset("b_indices")};\n    var values: array<${d.type.value}, ${h}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {\n      ${(()=>{let e=`var a_data: ${l.type.value};`;for(let t=0;t<p;t++)e+=`\n              let b_data${t} = b[(b_offset + (k + ${t}) * uniforms.N + col) / ${c}];`;for(let t=0;t<h;t++){e+=`a_data = a[(a_offset + (row + ${t}) * uniforms.K + k) / ${p}];`;for(let n=0;n<p;n++)e+=`\n            values[${t}] = fma(${u.type.value}(a_data${1===p?"":`[${n}]`}), b_data${n}, values[${t}]);\n`}return e})()}\n    }\n    for (var i = 0u; i < ${h}u; i++) {\n      var value = values[i];\n      ${b}\n      ${w}\n      let cur_indices = ${d.type.indices}(batch, row + i, col);\n      let offset = ${d.indicesToOffset("cur_indices")};\n      ${d.setByOffset(`offset / ${c}`,"value")};\n    }\n  }\n  `}}},Zi=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Ji=e=>{Zi(e.inputs);let t=$n.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let n=t[t.length-1],r=e.inputs[0].dims[e.inputs[0].dims.length-1];n<8&&r<8?e.compute(Qi(e.inputs,{activation:""},t)):e.compute(Li(e.inputs,{activation:""},t))}})),od=Ue((()=>{Nu(),rd(),sd(),nd(),id(),Ju(),ad(),ju(),ea=(e,t,n,r,s,i)=>{let a=e[0],o=e.slice(i?1:2,i?3:4),l=o.length,u=t[0],d=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=o.map(((e,t)=>e+r[t]+r[t+l])).map(((e,t)=>Math.floor((e-d[t]+s[t])/s[t])));return c.splice(0,0,a),c.splice(i?3:1,0,u),c},ta=[2,3,1,0],na=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},ra=(e,t)=>{let n=e.kernelShape.slice();n.length<t[1].dims.length-2&&n.push(...Array(t[1].dims.length-2-n.length).fill(0));for(let i=2;i<t[1].dims.length;++i)0===n[i-2]&&(n[i-2]=t[1].dims[i]);let r=e.pads.slice();En.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,"NHWC"===e.format,e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:n,pads:r}),s},sa=e=>{let t=Ci(e),n=e.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],format:n,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},ia=(e,t,n,r)=>{let s="NHWC"===n.format,i=ea(t[0].dims,t[1].dims,n.dilations,n.pads,n.strides,s);if(1!==n.group){let a=[t[0]];if(s){let r=e.kernelCustomData.wT??e.compute(Qn(t[1],ta),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),a.push(r)}else a.push(t[1]);return 3===t.length&&a.push(t[2]),void(!e.adapterInfo.isArchitecture("ampere")&&s&&t[1].dims[0]===n.group&&1===t[1].dims[1]&&1===n.dilations[0]&&1===n.dilations[1]?e.compute(Yi(a,n,i,r),{inputs:a}):e.compute(Xi(a,n,i,r),{inputs:a}))}let a=3===t.length,o=t[0].dims[s?1:2],l=t[0].dims[s?2:3],u=t[0].dims[s?3:1],d=t[1].dims[2],c=t[1].dims[3],p=i[s?1:2],h=i[s?2:3],f=i[s?3:1],m=s&&d===o&&c===l&&0===n.pads[0]&&0===n.pads[1];if(m||1===d&&1===c&&1===n.dilations[0]&&1===n.dilations[1]&&1===n.strides[0]&&1===n.strides[1]&&0===n.pads[0]&&0===n.pads[1]){let d,c,g,_=i[0],w=[];if(s){let r=e.kernelCustomData.wT??e.compute(Qn(t[1],ta),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),m){let e=o*l*u;d=t[0].reshape([1,_,e]),c=r.reshape([1,e,f]),g=[1,_,f]}else d=t[0].reshape([_,o*l,u]),c=r.reshape([1,u,f]),g=[_,p*h,f];w.push(d),w.push(c)}else d=t[0].reshape([_,u,o*l]),c=t[1].reshape([1,f,u]),g=[_,f,p*h],w.push(c),w.push(d);a&&w.push(t[2]);let y=g[2],b=w[0].dims[w[0].dims.length-1];return void(y<8&&b<8?e.compute(Qi(w,n,i,g,s,r),{inputs:w}):e.compute(Li(w,n,i,g,s,r),{inputs:w}))}let g=e.kernelCustomData.wT??e.compute(Qn(t[1],ta),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=g);let _=[t[0],g];a&&_.push(t[2]);let w=s?p*h:f,y=s?f:p*h,b=d*c*u;e.compute(Ni(_,n,i,w,y,b,a,!0,r),{inputs:_})},aa=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=[0,t.pads[0],0,t.pads[1]],i=[1].concat(t.strides),a=[1].concat(t.dilations),o=[1].concat(t.kernelShape),l=ra({...t,pads:s,strides:i,dilations:a,kernelShape:o},r);ia(e,r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]]))},oa=(e,t,n)=>{let r="NHWC"===n.format?"channelsLast":"channelsFirst",s=ra(n,t),i="NOTSET"===n.autoPad?n.pads:n.autoPad,a=Hi(t[0].dims,t[1].dims,n.strides,n.dilations,i,!1,r);e.compute(Ki(t,s,a.outShape,[a.filterDepth,a.filterHeight,a.filterWidth],[a.padInfo.front,a.padInfo.top,a.padInfo.left],r))},la=(e,t)=>{if(na(e.inputs,t),3===e.inputs[0].dims.length)aa(e,t);else if(5===e.inputs[0].dims.length)oa(e,e.inputs,t);else{let n=ra(t,e.inputs);ia(e,e.inputs,n)}}})),ld=Ue((()=>{Ou(),Ru(),Uu(),Ju(),ed(),td(),nd(),ua=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4,i=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",a=e?"row":"col",o=e?"col":"row",l=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${a} / outWidth;\n      let outCol = ${a} % outWidth;\n\n      let WRow = ${o} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${o} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])"}) || fract(xR) > 0.0) {\n        return ${r}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])"}) || fract(xC) > 0.0) {\n        return ${r}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${o} % inChannels;\n      ${e?"\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      "}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${s}];`,u=e?`\n      let col = colIn * ${s};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${l}\n      }\n      return ${r}(0.0);`:`\n      let col = colIn * ${s};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${l}\n      }\n      return ${r}(0.0);`,d=`\n      let col = colIn * ${s};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${(e=>{switch(e){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${r}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${e} is not supported.`)}})(s)}\n      }\n      return ${r}(0.0);\n      `,c=ki(n,r);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${r} {\n    ${e?u:d}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${r} {\n    ${e?d:u}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${r}) {\n    let col = colIn * ${s};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${i}\n      ${Ti(t)}\n      ${c}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${s}] = value;\n    }\n  }`},da=(e,t,n,r,s,i,a,o)=>{let l="NHWC"===t.format,u=l?e[0].dims[3]:e[0].dims[1],d=n[0],c=l?n[2]:n[3],p=l?n[1]:n[2],h=l?n[3]:n[1],f=l&&u%4===0&&u%3&&h%4===0,m=l?h:c*p,g=l?c*p:h,_=[8,8,1],w=r<=8?[4,1,1]:[4,4,1],y=[Math.ceil(m/_[0]/w[0]),Math.ceil(g/_[1]/w[1]),Math.ceil(d/_[2]/w[2])];un("verbose",(()=>`[conv_backprop_mm_webgpu] dispatch = ${y}`));let b=f?4:1,v=Math.max(_[0]*b,_[1]),x=f?4:1,$=[t.kernelShape[l?1:2],t.kernelShape[l?2:3]],k=[$[0]+(t.dilations[0]<=1?0:($[0]-1)*(t.dilations[0]-1)),$[1]+(t.dilations[1]<=1?0:($[1]-1)*(t.dilations[1]-1))],E=[k[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),k[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],S=[{type:6,data:r},{type:6,data:s},{type:6,data:i},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:$},{type:6,data:E}];Ei(t,S),S.push(...On(e[0].dims,e[1].dims));let C=["rank","rank"];a&&(S.push(...On(e[2].dims)),C.push("rank")),S.push(...On(n));return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${w};${_};${f}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:S}),getShaderSource:r=>{let s=Nn("x",e[0].dataType,e[0].dims.length,x),i=Nn("w",e[1].dataType,e[1].dims.length,1),u=Un("result",e[0].dataType,n.length,x),d=[s,i],c="";if(a){let t=Nn("bias",e[2].dataType,e[2].dims.length,x);d.push(t),c+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${t.type.value} {\n            return bias[coords.${l?"w":"y"}${f?"/ 4":""}];\n          }`}let p=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:$.length},{name:"pads",type:"i32",length:E.length}];Si(t,p);let h=In(e[0].dataType,1);if("f16"!==h&&"f32"!==h)throw new Error(`elemType ${h} is not supported.`);return`\n        ${zi("uniforms.result_strides")}\n        ${r.registerUniforms(p).declareVariables(...d,u)};\n        ${c}\n        ${ua(l,a,t,s.type.value,b)}\n        ${f?Oi(w,_,h,void 0,!l,v):Pi(w,_,h,void 0,!l,v,!1,void 0,o)}`}}}})),ud=Ue((()=>{Ou(),Ru(),Nu(),Uu(),ca=function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],a=arguments.length>6?arguments[6]:void 0,o=arguments.length>7?arguments[7]:void 0,l=arguments.length>8&&void 0!==arguments[8]&&arguments[8],u=l?1:2,d=l?2:3,c=l?3:1,p=i?2:1,h=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${i?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${i?`vec4<${a}>`:a}(value);\n  }`;r&&(h+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${i?`vec4<${a}>`:a} {\n      return bias[coords.${l?"w":"y"}${i?"/ 4":""}];\n    }`);let f=i?4:1,m=Nn("W",t[1].dataType,t[1].dims.length,f),g=Nn("Dy",t[0].dataType,t[0].dims.length,f),_=[g,m];r&&_.push(Nn("bias",t[2].dataType,[n[c]].length,f));let w=Un("result",t[0].dataType,n.length,f),y=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${p};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${p}>;\n        for (var i = 0; i < ${p}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${g.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${c}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${p}; i = i + 1) {\n          let value = dotProd[i] + ${r?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${w.set("batch","r","c + i","d1","value")};\n        }\n      }`,b=`\n          let outputIndices = ${w.offsetToIndices("global_idx")};\n          let batch = ${w.indicesGet("outputIndices",0)};\n          let d1 = ${w.indicesGet("outputIndices",c)};\n          let r = ${w.indicesGet("outputIndices",u)};\n          let c = ${w.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${u}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${l?g.get("batch","idyR","idyC","inputChannel"):g.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${m.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${r?"bias[d1]":`${a}(0.0)`};\n          ${w.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(o).declareVariables(..._,w)}\n  ${h}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${i?y:b}}`},pa=(e,t,n)=>{let r=e.length>2,s=t.outputShape,i=kn.size(s),a=[Math.ceil(i/64),1,1];un("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${a}`));let o="NHWC"===t.format,l=["rank","rank"],u=[t.strides[0],t.strides[1]],d=[t.kernelShape[o?1:2],t.kernelShape[o?2:3]],c=[t.dilations[0],t.dilations[1]],p=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[o?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[o?2:3]-1)*(t.dilations[1]-1))],h=[p[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),p[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],f=t.group,m=e[1].dims,g=m[0]/f,_=m[1],w=[{type:12,data:i},{type:12,data:u},{type:12,data:d},{type:12,data:c},{type:12,data:p},{type:6,data:h},{type:12,data:g},{type:12,data:_},...On(e[0].dims,e[1].dims)];r&&(w.push(...On(e[2].dims)),l.push("rank")),w.push(...On(s));let y=1===a[1]&&1===a[2];return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:l},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:n?n(s):s,dataType:e[0].dataType}],programUniforms:w}),getShaderSource:t=>{let n=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:u.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:p.length},{name:"pads",type:"i32",length:h.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],i=In(e[0].dataType);return`${ca(t,e,s,r,y,false,i,n,o)}`}}}})),dd=Ue((()=>{ld(),ud(),Ju(),ju(),ha=(e,t,n,r,s,i)=>(e-1)*t+n+(r-1)*s+1-i,fa=(e,t,n,r,s)=>{let i=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=i,n[s]=e-i):"SAME_LOWER"===t&&(n[r]=e-i,n[s]=i)},ma=(e,t,n,r,s,i,a,o,l,u)=>{let d=e.length-2,c=0===u.length;l.length<d&&l.push(...Array(d-l.length).fill(0));let p=e[0],h=t[o?3:1]*s;for(let f=0,m=e.length-d-(o?1:0);f<d;++f,++m){let s=e[m],o=c?s*a[f]:u[f],p=ha(s,a[f],i[f],t[m],n[f],o);fa(p,r,i,f,f+d),c&&u.push(a[f]*(s-1)+l[f]+(t[m]-1)*n[f]+1-i[f]-i[f+d])}u.splice(0,0,p),u.splice(o?3:1,0,h)},ga=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),1)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}let r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);let s=e.pads.slice(),i=e.outputShape.slice(),a=e.outputPadding.slice(),o=t[0].dims,l=e.dilations.slice();if(0===l.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;l=new Array(e).fill(1)}let u=e.strides.slice();if(0===u.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;u=new Array(e).fill(1)}ma(o,n,l,e.autoPad,e.group,s,u,r,a,i);let d=Object.assign({},e);return Object.assign(d,{kernelShape:n,pads:s,outputPadding:a,outputShape:i,dilations:l,strides:u}),d},_a=e=>{let t=Ci(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,i=e.group,a=e.kernelShape,o=e.pads,l=e.strides,u=e.wIsConst();return{autoPad:r,format:n,dilations:s,group:i,kernelShape:a,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:o,strides:l,wIsConst:u,...t,cacheKey:`${e.format};${t.activation};`}},wa=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");let r=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},ya=[2,3,1,0],ba=(e,t,n)=>{let r=ga(n,t),s="NHWC"===n.format,i=r.outputShape,a=i[s?3:1],o=t[0].dims[s?3:1];if(1!==r.group||1===a&&1===o)return void e.compute(pa(t,r));let l=i[s?1:2],u=i[s?2:3],d=s?l*u:a,c=s?a:l*u,p=t[1].dims[2]*t[1].dims[3]*o,h=e.kernelCustomData.wT??e.compute(Qn(t[1],ya),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=h);let f=[t[0],h],m=3===t.length;m&&(s||1!==t[2].dims.length?f.push(t[2]):f.push(t[2].reshape([t[2].dims[0],1,1]))),e.compute(da(f,r,i,d,c,p,m,!0),{inputs:f})},va=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=t.kernelShape;(0===s.length||0===s[0])&&(s=[e.inputs[1].dims[2]]);let i=t.dilations;(0===i.length||0===i[0])&&(i=[1]);let a=t.strides;(0===a.length||0===a[0])&&(a=[1]);let o=t.pads;0===o.length&&(o=[0,0]),o=[0,o[0],0,o[1]],a=[1].concat(a),i=[1].concat(i),s=[1].concat(s);let l=ga({...t,pads:o,strides:a,dilations:i,kernelShape:s},r);e.compute(pa(r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))},xa=(e,t)=>{wa(e.inputs,t),3===e.inputs[0].dims.length?va(e,t):ba(e,e.inputs,t)}})),cd=Ue((()=>{Ou(),Nu(),Fu(),Uu(),$a=(e,t,n,r)=>{let s=kn.size(t),i=t.length,a=Nn("input",e,i),o=Un("output",e,i),l=6===n.dataType?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),u=kn.normalizeAxis(l,i);return{name:"CumSum",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:12,data:u},...On(t,t)]}),getShaderSource:e=>{let t=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,n=Ln("uniforms.input_shape","uniforms.axis",i),s=r.reverse?t+(r.exclusive?" + 1":""):"0",l=r.reverse?n:t+(r.exclusive?"":" + 1");return`\n                ${e.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,o)}\n                ${e.mainStart()}\n                  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${o.offsetToIndices("global_idx")};\n                  var sum = ${o.type.value}(0);\n                  let first : i32 = ${s};\n                  let last : i32 = ${l};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${o.setByOffset("global_idx","sum")};\n                }`}}},ka=(e,t)=>{let n=e.inputs[0].dims,r=e.inputs[0].dataType,s=e.inputs[1];e.compute($a(r,n,s,t),{inputs:[0]})},Ea=e=>{let t=1===e.exclusive,n=1===e.reverse;return vn({exclusive:t,reverse:n})}})),pd=Ue((()=>{Ou(),Nu(),Fu(),Uu(),Sa=e=>{if(!e||1!==e.length)throw new Error("DepthToSpace requires 1 input.");if(4!==e[0].dims.length)throw new Error("DepthToSpace requires 4D input.")},Ca=(e,t,n,r)=>{let s=[];s.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let i=0;i<t;++i)s.push(n.indicesSet("a",e[i],`i[${i}]`));return s.push("return a;}"),s.join("\n")},Aa=(e,t)=>{let n,r,s,i,a,o,l="NHWC"===t.format,u=t.blocksize,d="DCR"===t.mode;l?([n,r,s,i]=e.dims,a=d?[n,r,s,u,u,i/u**2]:[n,r,s,i/u**2,u,u],o=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([n,r,s,i]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=d?[n,u,u,i/u**2,r,s]:[n,i/u**2,u,u,r,s],o=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let c=e.reshape(a),p=c.dims.length,h=e.dataType,f=Nn("a",h,p),m=Un("output",h,p);return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:e=>{let t=l?[n,r*u,s*u,i/u**2]:[n,i/u**2,r*u,s*u],a=kn.size(t),d=c.dims,p=kn.sortBasedOnPerm(d,o);return{outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...On(d,p)]}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(f,m)}\n\n  ${Ca(o,p,f,m)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${m.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${m.setByOffset("global_idx",f.getByIndices("aIndices"))}\n  }`}},Ta=(e,t)=>{Sa(e.inputs),e.compute(Aa(e.inputs[0],t))},za=e=>vn({blocksize:e.blocksize,mode:e.mode,format:e.format})})),hd=Ue((()=>{Ou(),Nu(),Fu(),Uu(),Oa="^"+(Ma="("+(Ia="[a-zA-Z]|\\.\\.\\.")+")+")+"$",Ba="^"+("("+Ma+",)*"+Ma)+"$",Ra=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1;this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let n=this.symbolToIndices.get(e);void 0===n?n=[t]:n.push(t),this.symbolToIndices.set(e,n)}},Pa=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[n,r]=t.includes("->")?t.split("->",2):[t,""];if(!n.match(RegExp(Ba)))throw new Error("Invalid LHS term");if(n.split(",").forEach(((t,n)=>{let r=e[n].dims.slice();if(!t.match(RegExp(Oa)))throw new Error("Invalid LHS term");let s=this.processTerm(t,!0,r,n);this.lhs.push(s)})),""===r)r+=[...this.symbolToInfo.entries()].filter((e=>{let[t,n]=e;return 1===n.count||"..."===t})).map((e=>{let[t]=e;return t})).join("");else if(!r.match(RegExp(Ma)))throw new Error("Invalid RHS");r.match(RegExp(Ia,"g"))?.forEach((e=>{if("..."===e)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let t=this.symbolToInfo.get(e);if(void 0===t)throw new Error("Invalid RHS symbol");this.outputDims.push(t.dimValue)}})),this.rhs=this.processTerm(r,!1,this.outputDims)}addSymbol(e,t,n){let r=this.symbolToInfo.get(e);if(void 0!==r){if(r.dimValue!==t&&1!==r.count)throw new Error("Dimension mismatch");r.count++,r.inputIndices.push(n)}else r={count:1,dimValue:t,inputIndices:[n]};this.symbolToInfo.set(e,r)}processTerm(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,s=n.length,i=!1,a=[],o=0;if(!e.match(RegExp(Oa))&&!t&&""!==e)throw new Error("Invalid LHS term");let l=e.match(RegExp(Ia,"g")),u=new Ra(r);return l?.forEach(((e,d)=>{if("..."===e){if(i)throw new Error("Only one ellipsis is allowed per input term");i=!0;let e=s-l.length+1;if(e<0)throw new Error("Ellipsis out of bounds");if(a=n.slice(o,o+e),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!t)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=a}for(let t=0;t<a.length;t++){let e=String.fromCharCode("0".charCodeAt(0)+t);u.addSymbol(e,d+t),this.addSymbol(e,n[o++],r)}}else u.addSymbol(e,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(e,n[o++],r)})),u}},Da=e=>e+"_max",La=(e,t,n,r)=>{let s=e.map((e=>e.length)).map(((e,n)=>Nn(`input${n}`,t,e))),i=kn.size(r),a=Un("output",t,r.length),o=[...n.symbolToInfo.keys()].filter((e=>!n.rhs.symbolToIndices.has(e)));return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:e.map((()=>"rank"))},getRunData:()=>{let s=o.filter((e=>n.symbolToInfo.has(e))).map((e=>({type:12,data:n.symbolToInfo.get(e)?.dimValue||0})));s.push({type:12,data:i});let a=e.map(((e,t)=>[...On(e)])).reduce(((e,t)=>e.concat(t)),s);return a.push(...On(r)),{outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a}},getShaderSource:e=>{let t=[],r=[],i=[],l=[],u=[],d=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach(((e,o)=>{if(n.rhs.symbolToIndices.has(o)){let r=n.rhs.symbolToIndices.get(o)?.[0];void 0!==r&&n.lhs.forEach(((n,i)=>{if(e.inputIndices.includes(i)){let e=n.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{t.push(`${s[i].indicesSet(`input${i}Indices`,e,a.indicesGet("outputIndices",r))}`)}))}}))}else n.lhs.forEach(((t,n)=>{if(e.inputIndices.includes(n)){let e=t.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{r.push(`${s[n].indicesSet(`input${n}Indices`,e,`${o}`)}`)})),u.push(`prod *= ${s[n].getByIndices(`input${n}Indices`)};`)}})),i.push(`for(var ${o}: u32 = 0; ${o} < uniforms.${Da(o)}; ${o}++) {`),l.push("}")}));let c=d?[...t,`let sum = ${s.map(((e,t)=>e.getByIndices(`input${t}Indices`))).join(" * ")};`]:[...t,"var sum = 0.0;",...i,...r,"var prod = 1.0;",...u,"sum += prod;",...l];return`\n            ${e.registerUniforms(o.map((e=>({name:`${Da(e)}`,type:"u32"})))).registerUniform("outputSize","u32").declareVariables(...s,a)}\n\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${a.offsetToIndices("global_idx")};\n            ${s.map(((e,t)=>`var input${t}Indices: ${s[t].type.indices};`)).join("\n")}\n            ${c.join("\n")};\n            ${a.setByOffset("global_idx","sum")};\n          }`}}},Fa=(e,t)=>{let n=new Pa(e.inputs,t.equation),r=n.outputDims,s=e.inputs.map(((e,t)=>e.dims));e.compute(La(s,e.inputs[0].dataType,n,r))},Na=e=>{let t=e.equation.replace(/\s+/g,"");return vn({equation:t})}})),fd=Ue((()=>{Ou(),Nu(),Uu(),Ua=e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=n.length<t.length?0:n.length-t.length,s=t.length<n.length?0:t.length-n.length;for(;r<n.length&&s<t.length;++r,++s)if(n[r]!==t[s]&&1!==n[r]&&1!==t[s])throw new Error("Expand requires shape to be broadcastable to input")},ja=(e,t)=>{let n=e.length-t.length,r=[];for(let s=0;s<n;++s)r.push(e[s]);for(let s=0;s<t.length;++s)r.push(1===t[s]?e[s+n]:t[s]);return r},Va=(e,t)=>e.length>t.length?ja(e,t):ja(t,e),qa=e=>{let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=Va(t,n),s=e[0].dataType,i=9===s?4:1,a=Math.ceil(kn.size(r)/i),o=[{type:12,data:a},...On(t,r)];return{name:"Expand",shaderCache:{hint:`${r.length}`,inputDependencies:["rank"]},getShaderSource:e=>{let n,a=Nn("input",s,t.length,i),o=Un("output",s,r.length,i);if(9===s){let e=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return`\n          let outputIndices${t} = ${o.offsetToIndices(`outputOffset + ${t}u`)};\n          let offset${t} = ${a.broadcastedIndicesToOffset(`outputIndices${t}`,o)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${a.getByOffset(`index${t}`)}[component${t}]);\n        `};n=`\n        let outputOffset = global_idx * ${i};\n        var data = vec4<u32>(0);\n        ${e("data",0,"u32")}\n        ${e("data",1,"u32")}\n        ${e("data",2,"u32")}\n        ${e("data",3,"u32")}\n        ${o.setByOffset("global_idx","data")}\n      }`}else n=`\n        let outputIndices = ${o.offsetToIndices("global_idx")};\n        let inputOffset = ${a.broadcastedIndicesToOffset("outputIndices",o)};\n        ${o.setByOffset("global_idx",a.getByOffset("inputOffset"))}\n      }`;return`\n    ${e.registerUniform("vec_size","u32").declareVariables(a,o)}\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${n}`},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o})}},Wa=e=>{Ua(e.inputs),e.compute(qa(e.inputs),{inputs:[0]})}})),md=Ue((()=>{Ou(),Nu(),Uu(),Xu(),Ga=e=>{let t=e[0].dataType,n=kn.size(e[0].dims),r=kn.size(e[1].dims),s=r%4===0;return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:e=>{let n=Nn("x",t,[1],4),r=Nn("bias",t,[1],4),i=Un("y",t,[1],4),a=e=>`\n      let bias${e}_offset: u32 = (global_idx * 4 + ${e}) % uniforms.bias_size;\n      let bias${e} = ${r.getByOffset(`bias${e}_offset / 4`)}[bias${e}_offset % 4];`,o=s?`\n      let bias = ${r.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${a(0)}${a(1)}${a(2)}${a(3)}\n      let bias = ${n.type.value}(bias0, bias1, bias2, bias3);`;return`${e.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(n,r,i)}\n\n    ${Ks(Mn(t))}\n\n    ${e.mainStart(Tn)}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${n.getByOffset("global_idx")};\n      ${o}\n      let x_in = x + bias;\n      ${i.setByOffset("global_idx",Xs("x_in"))}\n    }`},getRunData:e=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(n/Tn/4)}})}},Ha=e=>{e.inputs.length<2||0===kn.size(e.inputs[1].dims)?Ys(e):e.compute(Ga(e.inputs))}})),gd=Ue((()=>{Ou(),Nu(),Fu(),Uu(),Ka=e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")},Xa=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,i=kn.normalizeAxis(t.axis,s),a=n.slice(0);a.splice(i,1,...r);let o=n[i],l=9===e[0].dataType?4:1,u=Math.ceil(kn.size(a)/l),d=[{type:12,data:u},{type:6,data:o},{type:12,data:i},...On(e[0].dims,e[1].dims,a)];return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let n,o=Nn("data",e[0].dataType,e[0].dims.length,l),u=Nn("inputIndices",e[1].dataType,e[1].dims.length),d=Un("output",e[0].dataType,a.length,l),c=e=>{let t=r.length,n=`var indicesIndices${e}  = ${u.type.indices}(0);`;for(let r=0;r<t;r++)n+=`${t>1?`indicesIndices${e}[${r}]`:`indicesIndices${e}`} = ${a.length>1?`outputIndices${e}[uniforms.axis + ${r}]`:`outputIndices${e}`};`;n+=`\n          var idx${e} = ${u.getByIndices(`indicesIndices${e}`)};\n          if (idx${e} < 0) {\n            idx${e} = idx${e} + uniforms.axisDimLimit;\n          }\n          var dataIndices${e} : ${o.type.indices};\n        `;for(let r=0,o=0;r<s;r++)r===i?(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = u32(idx${e});`,o+=t):(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = ${a.length>1?`outputIndices${e}[${o}]`:`outputIndices${e}`};`,o++);return n};if(9===e[0].dataType){let e=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return`\n          let outputIndices${t} = ${d.offsetToIndices(`outputOffset + ${t}u`)};\n          ${c(t)};\n          let offset${t} = ${o.indicesToOffset(`dataIndices${t}`)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${o.getByOffset(`index${t}`)}[component${t}]);\n        `};n=`\n        let outputOffset = global_idx * ${l};\n        var value = vec4<u32>(0);\n        ${e("value",0,"u32")}\n        ${e("value",1,"u32")}\n        ${e("value",2,"u32")}\n        ${e("value",3,"u32")}\n        ${d.setByOffset("global_idx","value")}\n      `}else n=`\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      ${c("")};\n      let value = ${o.getByIndices("dataIndices")};\n      ${d.setByOffset("global_idx","value")};\n      `;return`\n      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(o,u,d)}\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${n}\n      }`}}},Ya=e=>vn({axis:e.axis}),Qa=(e,t)=>{let n=e.inputs;Ka(n),e.compute(Xa(e.inputs,t))}})),_d=Ue((()=>{Ou(),Nu(),Fu(),Uu(),Za=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let n=kn.normalizeAxis(t.quantizeAxis,e[0].dims.length),r=t.blockSize,s=e[0],i=e[2],a=4===e.length?e[3]:void 0;if(i.dims.length!==s.dims.length||!s.dims.map(((e,t)=>t===n?Math.ceil(e/r)===i.dims[t]:e===i.dims[t])).reduce(((e,t)=>e&&t),!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(a){if(a.dataType!==s.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(a.dims.length!==i.dims.length||!a.dims.map(((e,t)=>e===i.dims[t])).reduce(((e,t)=>e&&t),!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Ja=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,i=kn.normalizeAxis(t.gatherAxis,s),a=kn.normalizeAxis(t.quantizeAxis,s),o=n.slice(0);o.splice(i,1,...r);let l=kn.size(o),u=e[2].dataType,d=22===e[0].dataType,c=[{type:12,data:l},{type:12,data:a},{type:12,data:i},{type:12,data:t.blockSize},...On(...e.map(((e,t)=>e.dims)),o)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter(((e,t)=>1!==t)).map((e=>e.dims.join("_"))).join(";")}`,inputDependencies:Array.from({length:e.length},((e,t)=>"rank"))},getRunData:()=>({outputs:[{dims:o,dataType:u}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:t=>{let s=Nn("data",e[0].dataType,e[0].dims.length),a=Nn("inputIndices",e[1].dataType,e[1].dims.length),l=Nn("scales",e[2].dataType,e[2].dims.length),c=e.length>3?Nn("zeroPoint",e[3].dataType,e[3].dims.length):void 0,p=Un("output",u,o.length),h=[s,a,l];c&&h.push(c);return`\n        ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...h,p)}\n        ${t.mainStart()}\n        let output_indices = ${p.offsetToIndices("global_idx")};\n        var indices_indices = ${a.type.indices}(0);\n        ${r.length>1?`\n          for (var i: u32 = 0; i < ${r.length}; i++) {\n            let index = ${p.indicesGet("output_indices","uniforms.gather_axis + i")};\n            ${a.indicesSet("indices_indices","i","index")};\n          }`:`indices_indices = ${p.indicesGet("output_indices","uniforms.gather_axis")};`};\n        var data_indices = ${s.type.indices}(0);\n        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {\n          let index = ${p.indicesGet("output_indices","i")};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        var index_from_indices = ${a.getByIndices("indices_indices")};\n        if (index_from_indices < 0) {\n          index_from_indices += ${n[i]};\n        }\n        ${s.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};\n        for (var i = uniforms.gather_axis + 1; i < ${o.length}; i++) {\n          let index = ${p.indicesGet("output_indices",`i + ${r.length} - 1`)};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        let data_offset = ${s.indicesToOffset("data_indices")};\n        let data_index = data_offset % 8;\n        // Convert 4-bit packed data to 8-bit packed data.\n        let packed_4bit_quantized_data = ${s.getByOffset("data_offset / 8")};\n        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;\n        let quantized_data_vec = ${d?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));\n        let quantized_data = quantized_data_vec[data_index / 2];\n        var scale_indices = data_indices;\n        let quantize_axis_index = ${l.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;\n        ${l.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};\n        var scale = ${l.getByIndices("scale_indices")};\n        ${c?`\n              let zero_point_indices = scale_indices;\n              let zero_point_offset = ${c.indicesToOffset("zero_point_indices")};\n              let zero_point_index = zero_point_offset % 8;\n              let packed_4bit_zero_points = ${c.getByOffset("zero_point_offset / 8")};\n              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;\n              let zero_point_vec = ${d?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));\n              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};\n        let dequantized_data = ${Mn(u)}(quantized_data - zero_point) * scale;\n        ${p.setByOffset("global_idx","dequantized_data")};\n    }`}}},eo=(e,t)=>{let n=e.inputs;Za(n,t),e.compute(Ja(e.inputs,t))},to=e=>vn({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})})),wd=Ue((()=>{Ou(),Nu(),Fu(),Uu(),no=e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\n                     indices input tensors be of same rank.")},ro=(e,t)=>{let n=e[0].dims,r=e[0].dataType,s=n.length,i=e[1].dims,a=e[1].dataType,o=kn.normalizeAxis(t.axis,s),l=n[o],u=i.slice(0),d=kn.size(u),c=Nn("input",r,s),p=Nn("indicesInput",a,i.length),h=Un("output",r,u.length),f=[{type:12,data:d},{type:6,data:l},{type:12,data:o}];return f.push(...On(n,i,u)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:f}),getShaderSource:e=>`\n      ${e.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(c,p,h)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${h.offsetToIndices("global_idx")};\n\n      var idx = ${p.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${c.type.indices}(outputIndices);\n      ${c.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${c.getByIndices("inputIndices")};\n\n      ${h.setByOffset("global_idx","value")};\n  }`}},so=e=>vn({axis:e.axis}),io=(e,t)=>{let n=e.inputs;no(n),e.compute(ro(e.inputs,t))}})),yd=Ue((()=>{Ou(),Nu(),Uu(),ao=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},oo=(e,t)=>{let n=e[0].dims.slice(),r=e[1].dims.slice(),[s,i,a]=Sn.getShapeOfGemmResult(n,t.transA,r,t.transB,3===e.length?e[2].dims:void 0),o=[s,i];if(!o)throw new Error("Can't use gemm on the given tensors");let l=kn.size(o),u=[{type:12,data:l},{type:12,data:s},{type:12,data:i},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];3===e.length&&(u.push(...On(e[2].dims)),d.push("rank")),u.push(...On(o));return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:n=>{let r="";t.transA&&t.transB?r="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?r="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?r="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(r="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let s=1===t.alpha?"":"value *= uniforms.alpha;",i=Nn("a",e[0].dataType,e[0].dims),a=Nn("b",e[1].dataType,e[1].dims),l=i.type.value,u=null,d=[i,a];3===e.length&&(u=Nn("c",e[2].dataType,e[2].dims.length),d.push(u));let c=Un("output",e[0].dataType,o.length);d.push(c);return`\n  ${n.registerUniforms([{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...d)}\n\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${l}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${r}\n    }\n\n    ${s}\n    ${null!=u?`let cOffset = ${u.broadcastedIndicesToOffset("vec2(m, n)",c)}; value += ${l}(uniforms.beta) * ${u.getByOffset("cOffset")};`:""}\n    output[global_idx] = value;\n  }`}}},lo=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${1===e.alpha}`}),uo=(e,t)=>{ao(e.inputs),e.compute(oo(e.inputs,t))}})),bd=Ue((()=>{Ou(),Nu(),Fu(),Du(),Gu(),Uu(),ju(),co=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,po=(e,t)=>{let n=e[0],r=co(e,1),s=co(e,2),i=co(e,3),a=co(e,4),o=co(e,5),l=co(e,6),u=co(e,7);if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let d,c=n.dims[0],p=n.dims[1],h=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],f=p,m=0,g=0,_=Math.floor(h/t.numHeads);if(l&&u&&kn.size(l.dims)&&kn.size(u.dims)){if(4!==l.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==c||l.dims[1]!==t.numHeads||l.dims[3]!==_)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(u.dims[0]!==c||u.dims[1]!==t.numHeads||u.dims[3]!==_)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==u.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==u.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');m=l.dims[2],g=l.dims[2]}else if(l&&kn.size(l.dims)||u&&kn.size(u.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(r&&kn.size(r.dims)>0){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(r.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');d=2,f=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==_)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');d=5,f=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==_)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=0,f=r.dims[2]}}else{if(5!==n.dims.length)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(n.dims[2]!==t.numHeads||3!==n.dims[3])throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');d=3}if(i&&kn.size(i.dims)>0){if(1!==i.dims.length)throw new Error('Input "bias" is expected to have 1 dimension');if(r&&5===r.dims.length&&2===r.dims[3])throw new Error("bias is not allowed for packed kv.")}let w=m+f,y=0;if(a&&kn.size(a.dims)>0){y=8;let e=a.dims;throw 1===e.length?e[0]===c?y=1:e[0]===3*c+2&&(y=3):2===e.length&&e[0]===c&&e[1]===w&&(y=5),8===y?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let b=!1,v=h;if(s&&kn.size(s.dims)>0){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(f!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=s.dims[2]}else{if(f!==s.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=s.dims[1]*s.dims[3],b=!0}}if(a&&kn.size(a.dims)>0)throw new Error("Key padding mask is not supported");if(o&&kn.size(o.dims)>0){if(4!==o.dims.length)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(o.dims[0]!==c||o.dims[1]!==t.numHeads||o.dims[2]!==p||o.dims[3]!==w)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:c,sequenceLength:p,pastSequenceLength:m,kvSequenceLength:f,totalSequenceLength:w,maxSequenceLength:g,inputHiddenSize:0,hiddenSize:h,vHiddenSize:v,headSize:_,vHeadSize:Math.floor(v/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:b,qkvFormat:d}},ho=e=>vn({...e}),fo=vn({perm:[0,2,1,3]}),mo=(e,t,n,r,s,i,a)=>{let o=[r,s,i],l=kn.size(o),u=[{type:12,data:l},{type:12,data:a},{type:12,data:i}];return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:e=>{let r=Un("qkv_with_bias",t.dataType,o),s=Nn("qkv",t.dataType,o),i=Nn("bias",n.dataType,o);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(s,i,r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`}},{inputs:[t,n],outputs:[-1]})[0]},go=(e,t,n,r,s,i,a,o)=>{let l=i;if(a&&kn.size(a.dims)>0){if(1===r)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=mo(e,i,a,t,r,n*s,o),l=l.reshape([t,r,n,s]),e.compute(Qn(l,fo.perm),{inputs:[l],outputs:[-1]})[0]}return 3===i.dims.length&&(l=i.reshape([t,r,n,s])),e.compute(Qn(l,fo.perm),{inputs:[l],outputs:[-1]})[0]},_o=(e,t)=>{let n=po(e.inputs,t),r=e.inputs[0],s=co(e.inputs,1),i=co(e.inputs,2),a=co(e.inputs,3),o=co(e.inputs,4),l=co(e.inputs,5),u=co(e.inputs,6),d=co(e.inputs,7);if(5===r.dims.length)throw new Error("Packed QKV is not implemented");if(5===s?.dims.length)throw new Error("Packed KV is not implemented");let c=s&&i&&4===s.dims.length&&4===i.dims.length,p=go(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r,a,0);if(c)return ts(e,p,s,i,o,void 0,u,d,l,n,t);if(!s||!i)throw new Error("key and value must be provided");let h=go(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,s,a,n.hiddenSize),f=go(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,i,a,2*n.hiddenSize);ts(e,p,h,f,o,void 0,u,d,l,n,t)}})),vd=Ue((()=>{Ou(),Nu(),Uu(),wo=e=>Array.from(e.getBigInt64Array(),Number),yo=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&10!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(wo(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},bo=(e,t)=>{let n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n},vo=(e,t)=>{let n=e[0].dims,r=t??wo(e[1]),s=bo(n,r),i=kn.size(s),a=e[0].dataType,o=Nn("input",a,n.length),l=Un("output",a,s.length);return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...On(e[0].dims,s)]}),getShaderSource:e=>`\n      const inputShape = ${o.indices(...n)};\n      ${e.registerUniform("output_size","u32").declareVariables(o,l)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${l.offsetToIndices("global_idx")};\n      var input_indices: ${o.type.indices};\n      for (var i = 0; i < ${n.length}; i++) {\n        let input_dim_i = ${o.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${o.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${l.setByOffset("global_idx",o.getByIndices("input_indices"))}\n    }`}},xo=e=>{yo(e.inputs),e.compute(vo(e.inputs),{inputs:[0]})}})),xd=Ue((()=>{Ou(),Nu(),Fu(),Gu(),Uu(),bd(),vd(),ju(),$o=(e,t)=>{let n=e[0],r=e[1],s=e[2],i=e[3],a=e[4];if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let o,l=n.dims[0],u=n.dims[1],d=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],c=u,p=0,h=0,f=Math.floor(d/t.numHeads),m=i&&0!==i.dims.length,g=a&&0!==a.dims.length,_=!0;if(m&&g){if(4!==i.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(4!==a.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');p=i.dims[1],h=i.dims[1]}else if(m||g)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(r){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(n.dims[2]%r.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');o=2,c=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');o=5,c=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');o=0,c=r.dims[2]}}else{if(3!==n.dims.length&&5!==n.dims.length)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===n.dims.length&&(n.dims[2]!==t.numHeads||3!==n.dims[3]))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');o=3}let w=!1,y=d;if(s){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(c!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');y=s.dims[2]}else{if(c!==s.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');y=s.dims[1]*s.dims[3],w=!0}}return{batchSize:l,sequenceLength:u,pastSequenceLength:p,kvSequenceLength:c,totalSequenceLength:p+c,maxSequenceLength:h,inputHiddenSize:0,hiddenSize:d,vHiddenSize:y,headSize:f,vHeadSize:Math.floor(y/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:w,qkvFormat:o,isPastkvBSNH:_}},ko=(e,t,n,r)=>{let s=[r.batchSize,r.totalSequenceLength,r.kvNumHeads,r.headSize],i=kn.size(s)/4,a=r.totalSequenceLength,o=Un("present_kv",n,s.length,4),l=Nn("new_kv",e.dataType,e.dims.length,4),u=t?Nn("past_kv",t.dataType,t.dims.length,4):void 0,d=Math.ceil(r.headSize/4),c={x:a,y:e.dims[0],z:1},p=t?["rank","rank"]:["rank"],h=[{type:12,data:i},{type:12,data:r.pastSequenceLength},{type:12,data:r.kvSequenceLength},{type:12,data:r.totalSequenceLength}],f=[l];u?(h.push(...On(e.dims),...On(t.dims),...On(s)),f.push(u)):h.push(...On(e.dims),...On(s));let m=[{name:"output_size",type:"u32"},{name:"past_seqlen",type:"u32"},{name:"new_seqlen",type:"u32"},{name:"present_seqlen",type:"u32"}],g="      let new_batch_stride = uniforms.new_seqlen * num_heads * H;\n        let new_row_stride = num_heads * H;\n        let new_head_stride = H;\n        let in_offset = b * new_batch_stride + (s - past_seqlen) * new_row_stride + n * new_head_stride + h;\n        present_kv[out_offset] = new_kv[in_offset];",_=t?`if (s < past_seqlen) {\n              let past_batch_stride = uniforms.past_seqlen * num_heads * H;\n        var past_head_stride = uniforms.past_seqlen * H;\n        if (is_bsnh) {\n          past_head_stride = H;\n        }\n        let in_offset = b * past_batch_stride + s * row_stride + n * past_head_stride + h;\n        present_kv[out_offset] = past_kv[in_offset];\n        } else if (s < past_seqlen + uniforms.new_seqlen) {\n        ${g}\n        }`:`if (s < past_seqlen + uniforms.new_seqlen) {\n          ${g}\n        }`;return{name:"ConcatPastNew",shaderCache:{hint:`${r.kvNumHeads}${d}${!!t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:c,programUniforms:h}),getShaderSource:e=>`\n\n  ${e.registerUniforms(m).declareVariables(...f,o)}\n  ${e.mainStart([d,r.kvNumHeads,1])}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    var indices = ${o.offsetToIndices("global_idx")};\n    let h = local_id.x;\n    let n = local_id.y;\n    let s = workgroup_id.x;\n    let b = workgroup_id.y;\n    let num_heads = ${r.kvNumHeads}u;\n    let H = ${d}u;\n\n    let present_seqlen = uniforms.present_seqlen;\n    let present_batch_stride = present_seqlen * num_heads * H;\n    var row_stride = H;\n    let is_bsnh = ${r.isPastkvBSNH};\n\n    if (is_bsnh) {\n      row_stride = num_heads * H;\n    }\n    var present_head_stride = present_seqlen * H;\n    if (is_bsnh) {\n      present_head_stride = H;\n    }\n\n    let past_seqlen = uniforms.past_seqlen;\n\n    let out_offset = b * present_batch_stride + s * row_stride + n * present_head_stride + h;\n    ${_}\n  }`}},Eo=e=>vn({...e}),So=vn({perm:[0,2,1,3]}),Co=(e,t,n,r,s)=>{let i=t,a=r.kvNumHeads,o=r.nReps;return 3===t.dims.length&&0!==r.kvSequenceLength&&(i=t.reshape([r.batchSize,r.kvSequenceLength,a,r.headSize])),i=n?e.compute(ko(i,n,i.dataType,r),{inputs:[i,n],outputs:[r.isPastkvBSNH?s:-1]})[0]:e.compute(ko(i,void 0,i.dataType,r),{inputs:[i],outputs:[r.isPastkvBSNH?s:-1]})[0],1!==o&&(i=e.compute(vo([i],[1,1,1,o]),{inputs:[i],outputs:[-1]})[0],i=i.reshape([r.batchSize,r.totalSequenceLength,a*o,r.headSize])),e.compute(Qn(i,So.perm),{inputs:[i],outputs:[-1]})[0]},Ao=(e,t)=>{let n=$o(e.inputs,t);if(5===e.inputs[0].dims.length)throw new Error("Packed QKV is not implemented");if(5===e.inputs[1]?.dims.length)throw new Error("Packed KV is not implemented");let r=go(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,e.inputs[0],void 0,0),s=e.inputs[3]&&0!==e.inputs[3].dims.length?e.inputs[3]:void 0,i=e.inputs[4]&&0!==e.inputs[4].dims.length?e.inputs[4]:void 0,a=Co(e,e.inputs[1],s,n,1),o=Co(e,e.inputs[2],i,n,2);ts(e,r,a,o,void 0,void 0,void 0,void 0,void 0,n,t)}})),$d=Ue((()=>{Ou(),Nu(),ju(),Uu(),To=(e,t,n,r,s,i,a,o)=>{let l=Bn(i),u=1===l?"f32":`vec${l}f`,d=1===l?"vec2f":`mat2x${l}f`,c=s*a,p=[s,a,i/l],h=[s,a,2],f=[];f.push(...On(p,h));return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:h,dataType:1}],dispatchGroup:{x:c},programUniforms:f}),getShaderSource:e=>{let s=Nn("x",t.dataType,3,l),i=[s,Nn("scale",n.dataType,n.dims),Nn("bias",r.dataType,r.dims),Un("output",1,3,2)];return`\n  var<workgroup> workgroup_shared : array<${d}, 64>;\n  const workgroup_size = 64u;\n  ${e.declareVariables(...i)}\n  ${e.mainStart(64)}\n    let batch = workgroup_index / uniforms.x_shape[1];\n    let channel = workgroup_index % uniforms.x_shape[1];\n    let hight = uniforms.x_shape[2];\n    // initialize workgroup memory\n    var sum = ${u}(0);\n    var squared_sum = ${u}(0);\n    for (var h = local_idx; h < hight; h += workgroup_size) {\n      let value = ${u}(${s.get("batch","channel","h")});\n      sum += value;\n      squared_sum += value * value;\n    }\n    workgroup_shared[local_idx] = ${d}(sum, squared_sum);\n    workgroupBarrier();\n\n    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (local_idx < currSize) {\n        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (local_idx == 0) {\n      let sum_final = ${Dn("workgroup_shared[0][0]",l)} / f32(hight * ${l});\n      let squared_sum_final = ${Dn("workgroup_shared[0][1]",l)} / f32(hight * ${l});\n\n      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${o}));\n      let channel_scale = inv_std_dev * f32(scale[channel]);\n      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;\n      output[workgroup_index] = vec2f(channel_scale, channel_shift);\n    }\n  }`}},{inputs:[t,n,r],outputs:[-1]})[0]},zo=(e,t,n)=>{let r=t[0].dims,s=r,i=r[0],a=r[1],o=kn.sizeFromDimension(r,2),l=Bn(o),u=kn.size(s)/l,d=To(e,t[0],t[1],t[2],i,o,a,n.epsilon),c=[i,a,o/l],p=[i,a];e.compute({name:"InstanceNormalization",shaderCache:{hint:`${l}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},...On(c,p,c)]}),getShaderSource:e=>{let n=Nn("x",t[0].dataType,c.length,l),r=Nn("scale_shift",1,p.length,2),s=Un("output",t[0].dataType,c.length,l),i=[n,r,s];return`\n  ${e.registerUniform("output_size","u32").declareVariables(...i)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let outputIndices = ${s.offsetToIndices("global_idx")};\n      let batch = outputIndices[0];\n      let channel = outputIndices[1];\n      let scale_shift = ${r.getByIndices("vec2<u32>(batch, channel)")};\n      let value = ${n.getByOffset("global_idx")} * ${s.type.value}(scale_shift.x) + ${s.type.value}(scale_shift.y);\n      ${s.setByOffset("global_idx","value")};\n  }`}},{inputs:[t[0],d]})},Io=(e,t,n)=>{let r=t[0].dims,s=r,i=r[0],a=r[r.length-1],o=kn.sizeFromDimension(r,1)/a,l=Bn(a),u=kn.size(s)/l,d=[{type:12,data:o},{type:12,data:Math.floor(a/l)}],c=[0,r.length-1];for(let f=0;f<r.length-2;f++)c.push(f+1);let p=e.compute(Qn(e.inputs[0],c),{inputs:[e.inputs[0]],outputs:[-1]})[0],h=To(e,p,t[1],t[2],i,o,a,n.epsilon);e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:e=>{let n=In(t[0].dataType),r=1===l?"vec2f":`mat${l}x2f`,i=e=>{let t=0===e?"x":"y",r=1===l?"f32":`vec${l}f`;switch(l){case 1:return`${n}(${r}(scale.${t}))`;case 2:return`vec2<${n}>(${r}(scale[0].${t}, scale[1].${t}))`;case 4:return`vec4<${n}>(${r}(scale[0].${t}, scale[1].${t}, scale[2].${t}, scale[3].${t}))`;default:throw new Error(`Not supported compoents ${l}`)}},a=Nn("input",t[0].dataType,t[0].dims,l),o=Un("output",t[0].dataType,s,l);return`\n  @group(0) @binding(0) var<storage, read> input : array<${a.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scale_input : array<${r}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${o.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    let current_image_number = global_idx / (uniforms.C * uniforms.H);\n    let current_channel_number = global_idx % uniforms.C;\n\n    let scale_offset = current_image_number * uniforms.C + current_channel_number;\n    let scale = scale_input[scale_offset];\n    output[global_idx] = fma(input[global_idx], ${i(0)}, ${i(1)});\n  }`}},{inputs:[t[0],h]})},Mo=(e,t)=>{"NHWC"===t.format?Io(e,e.inputs,t):zo(e,e.inputs,t)}})),kd=Ue((()=>{Ou(),Nu(),Uu(),Oo=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Bo=(e,t,n)=>{let r=t.simplified,s=e[0].dims,i=e[1],a=!r&&e[2],o=s,l=kn.normalizeAxis(t.axis,s.length),u=kn.sizeToDimension(s,l),d=kn.sizeFromDimension(s,l),c=kn.size(i.dims),p=a?kn.size(a.dims):0;if(c!==d||a&&p!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let b=0;b<s.length;++b)b<l?h.push(s[b]):h.push(1);let f=Bn(d),m=["type","type"],g=[{type:12,data:u},{type:1,data:d},{type:12,data:Math.floor(d/f)},{type:1,data:t.epsilon}];a&&m.push("type");let _=n>1,w=n>2,y=[{dims:o,dataType:e[0].dataType}];return _&&y.push({dims:h,dataType:1}),w&&y.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${n};${r}`,inputDependencies:m},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:t=>{let n=In(e[0].dataType),s=[Nn("x",e[0].dataType,e[0].dims,f),Nn("scale",i.dataType,i.dims,f)];a&&s.push(Nn("bias",a.dataType,a.dims,f)),s.push(Un("output",e[0].dataType,o,f)),_&&s.push(Un("mean_data_output",1,h)),w&&s.push(Un("inv_std_output",1,h));return`\n  ${t.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...s)}\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${Rn("f32",f)};\n    var mean_square_vector = ${Rn("f32",f)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${Pn(n,f,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${Dn("mean_vector",f)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${Dn("mean_square_vector",f)} / uniforms.norm_size ${r?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${Pn(n,f,"x[j + offset]")};\n      let f32scale = ${Pn(n,f,"scale[j]")};\n      output[j + offset] = ${s[0].type.value}((f32input ${r?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${Pn(n,f,"bias[j]")}`:""}\n      );\n    }\n\n    ${_?"mean_data_output[global_idx] = mean":""};\n    ${w?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`}}},Ro=(e,t)=>{Oo(e.inputs),e.compute(Bo(e.inputs,t,e.outputCount))}})),Ed=Ue((()=>{Ou(),Nu(),Fu(),Uu(),Po=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=e[0],r=n.dims.length;if(n.dims[r-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((t.k+t.blockSize-1)/t.blockSize),i=t.blockSize/8*t.bits,a=e[1];if(!kn.areEqual(a.dims,[t.n,s,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=e[2].dims;if(kn.size(o)!==t.n*s)throw new Error("scales input size error.");if(4===e.length){let n=e[3].dims,r=t.bits>4?t.n*s:t.n*Math.floor((s+1)/2);if(kn.size(n)!==r)throw new Error("zeroPoints input size error.")}},Do=(e,t)=>{let n=e[0].dims,r=n.length,s=n[r-2],i=t.k,a=t.n,o=n.slice(0,r-2),l=kn.size(o),u=e[1].dims[2]/4,d=e[0].dataType,c=Bn(t.k),p=Bn(u),h=Bn(a),f=o.concat([s,a]),m=s>1&&a/h%2===0?2:1,g=kn.size(f)/h/m,_=64,w=[],y=[l,s,i/c],b=kn.convertShape(e[1].dims).slice();b.splice(-1,1,u/p),w.push(...On(y)),w.push(...On(b)),w.push(...On(e[2].dims)),4===e.length&&w.push(...On(kn.convertShape(e[3].dims)));let v=[l,s,a/h];w.push(...On(v));return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${c};${p};${h};${m};64`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:d}],dispatchGroup:{x:g},programUniforms:w}),getShaderSource:n=>{let r=y.length,s=Nn("a",e[0].dataType,r,c),i=Nn("b",12,b.length,p),a=Nn("scales",e[2].dataType,e[2].dims.length),o=[s,i,a],l=4===e.length?Nn("zero_points",12,e[3].dims.length):void 0;l&&o.push(l);let d=v.length,f=Un("output",e[0].dataType,d,h),g=In(e[0].dataType),w=(()=>{switch(c){case 1:return`array<${g}, 8>`;case 2:return`mat4x2<${g}>`;case 4:return`mat2x4<${g}>`;default:throw new Error(`${c}-component is not supported.`)}})();return`\n        var<workgroup> workgroup_shared: array<${f.type.value}, ${m*_}>;\n        ${n.declareVariables(...o,f)}\n        ${n.mainStart([_,1,1])}\n          let output_indices = ${f.offsetToIndices(`(global_idx / 64) * ${m}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let nBlocksPerCol = uniforms.b_shape[1];\n\n          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {\n            //process one block\n            var word_offset: u32 = block * ${t.blockSize/c};\n            ${(()=>{let e=`\n            var col_index = col * ${h};\n            ${l?"\n            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;\n            var zero_point_byte_count: u32;\n            var zero_point_word_index: u32;\n            var zero_point_byte_offset: u32;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32;\n            var zero_point_word: u32;":`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${g}(8);`}\n            `;for(let t=0;t<h*m;t++)e+=`\n            let scale${t} = ${a.getByOffset("col_index * nBlocksPerCol + block")};\n            ${l?`\n            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);\n            zero_point_word_index = zero_point_byte_count >> 0x2u;\n            zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            zero_point_word = ${l.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;\n            let zero_point${t} = ${g}((zero_point_word) & 0xFu);`:""}\n            col_index += 1;`;return e})()}\n            for (var word: u32 = 0; word < ${u}; word += ${p}) {\n              ${(()=>{let e=`col_index = col * ${h};`;for(let t=0;t<h*m;t++)e+=`\n            let b${t}_data = ${i.getByIndices(`${i.type.indices}(col_index, block, word)`)};\n            col_index += 1;`;return e+=`\n            var b_value: u32;\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            var b_value_lower: vec4<u32>;\n            var b_value_upper: vec4<u32>;\n            var b_quantized_values: ${w};\n            var b_dequantized_values: ${w};`,e})()}\n              for (var i: u32 = 0; i < ${p}; i++) {\n                ${(()=>{let e=`\n          // reuse a data\n            var input_offset = ${s.indicesToOffset(`${s.type.indices}(batch, row, word_offset)`)};\n            var a_data: ${w};\n            for (var j: u32 = 0; j < ${8/c}; j++) {\n              a_data[j] = ${s.getByOffset("input_offset")};\n              input_offset++;\n            }\n          `;for(let t=0;t<h*m;t++)e+=`\n            b_value = ${1===p?`b${t}_data`:`b${t}_data[i]`};\n            b_value_lower = unpack4xU8(b_value & b_mask);\n            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);\n            b_quantized_values = ${w}(${Array.from({length:4},((e,t)=>`${g}(b_value_lower[${t}]), ${g}(b_value_upper[${t}])`)).join(", ")});\n            b_dequantized_values = ${1===c?`${w}(${Array.from({length:8},((e,n)=>`(b_quantized_values[${n}] - ${l?`zero_point${t}`:"zero_point"}) * scale${t}`)).join(", ")});`:`(b_quantized_values - ${w}(${Array(8).fill(l?`zero_point${t}`:"zero_point").join(",")})) * scale${t};`};\n            workgroup_shared[local_id.x * ${m} + ${Math.floor(t/h)}]${h>1?`[${t%h}]`:""} += ${Array.from({length:8/c},((e,t)=>""+(1===c?`a_data[${t}] * b_dequantized_values[${t}]`:`dot(a_data[${t}], b_dequantized_values[${t}])`))).join(" + ")};\n          `;return e})()}\n                word_offset += ${8/c};\n              }\n            }\n          }\n          workgroupBarrier();\n\n          if (local_id.x < ${m}) {\n            var output_value: ${f.type.value} = ${f.type.value}(0);\n            var workgroup_shared_offset: u32 = local_id.x;\n            for (var b: u32 = 0u; b < 64u; b++) {\n              output_value += workgroup_shared[workgroup_shared_offset];\n              workgroup_shared_offset += ${m};\n            }\n            ${f.setByIndices(`${f.type.indices}(batch, row, col + local_id.x)`,"output_value")};\n          }\n        }`}}},Lo=(e,t)=>{Po(e.inputs,t),e.compute(Do(e.inputs,t))},Fo=e=>vn(e)})),Sd=Ue((()=>{Ou(),Nu(),Uu(),No=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(1!==e[0].dataType&&10!==e[0].dataType)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(4===e.length&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Uo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n            k = i32(${e.indicesGet("indices",s)}) - ${Ln("uniforms.pads",s,n)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${Ln("uniforms.x_shape",s,t)})) {\n              break;\n            }\n            offset += k * i32(${Ln("uniforms.x_strides",s,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${r}\n            value = x[offset];\n          }\n      `},jo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${Ln("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${Ln("uniforms.x_shape",s,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${Ln("uniforms.x_shape",s,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${Ln("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Vo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${Ln("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${Ln("uniforms.x_shape",s,t)})) {\n                  k = i32(${Ln("uniforms.x_shape",s,t)}) - 1;\n                }\n                offset += k * i32(${Ln("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},qo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${Ln("uniforms.pads",s,n)};\n                if (k < 0)  {\n                  k += i32(${Ln("uniforms.x_shape",s,t)}]);\n                }\n                if (k >= i32(${Ln("uniforms.x_shape",s,t)})) {\n                  k -= i32(${Ln("uniforms.x_shape",s,t)});\n                }\n                offset += k * i32(${Ln("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Wo=(e,t,n)=>{switch(n.mode){case 0:return Uo(e,t,n.pads.length);case 1:return jo(e,t,n.pads.length);case 2:return Vo(e,t,n.pads.length);case 3:return qo(e,t,n.pads.length);default:throw new Error("Invalid mode")}},Go=(e,t)=>{let n=kn.padShape(e[0].dims.slice(),t.pads),r=e[0].dims,s=[{type:12,data:kn.size(n)},{type:6,data:t.pads}],i=e.length>=3&&e[2].data;0===t.mode&&s.push({type:i?e[2].dataType:1,data:t.value}),s.push(...On(e[0].dims,n));return{name:"Pad",shaderCache:{hint:`${t.mode}${i}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(kn.size(n)/64)},programUniforms:s}),getShaderSource:s=>{let a=Un("output",e[0].dataType,n.length),o=Nn("x",e[0].dataType,r.length),l=o.type.value,u=Wo(a,r.length,t),d=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return 0===t.mode&&d.push({name:"constant_value",type:i?l:"f32"}),`\n            ${s.registerUniforms(d).declareVariables(o,a)}\n            ${s.mainStart()}\n            ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${a.offsetToIndices("global_idx")};\n\n            var value = ${l}(0);\n            ${u}\n            output[global_idx] = value;\n        }`}}},Ho=(e,t)=>{if(e.length>1){let n=e[1].getBigInt64Array(),r=e.length>=3&&e[2].data?10===e[2].dataType?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,s=e[0].dims.length,i=new Int32Array(2*s).fill(0);if(e.length>=4){let t=e[3].getBigInt64Array();for(let e=0;e<t.length;e++)i[Number(t[e])]=Number(n[e]),i[Number(t[e])+s]=Number(n[e+t.length])}else n.forEach(((e,t)=>i[Number(t)]=Number(e)));let a=[];return i.forEach((e=>a.push(e))),{mode:t.mode,value:r,pads:a}}return t},Ko=(e,t)=>{No(e.inputs);let n=Ho(e.inputs,t);e.compute(Go(e.inputs,n),{inputs:[0]})}})),Cd=Ue((()=>{ct(),Ou(),Nu(),Uu(),Xo=e=>{if(ue.webgpu.validateInputContent&&(!e||1!==e.length))throw new Error("Pool ops requires 1 input.")},Yo=(e,t,n)=>{let r="NHWC"===t.format,s=e.dims.slice();r&&s.splice(1,0,s.pop());let i=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),o=t.strides.slice(),l=i?t.dilations.slice():[],u=t.pads.slice();En.adjustPoolAttributes(n,s,a,o,l,u);let d=En.computePoolOutputShape(n,s,o,l,a,u,t.autoPad),c=Object.assign({},t);i?Object.assign(c,{kernelShape:a,strides:o,pads:u,dilations:l,cacheKey:t.cacheKey}):Object.assign(c,{kernelShape:a,strides:o,pads:u,cacheKey:t.cacheKey});let p=d.slice();return p.push(p.splice(1,1)[0]),[c,r?p:d]},Qo=(e,t)=>{let n="NHWC"===t.format,r=[{type:12,data:kn.size(e)},{type:12,data:kn.size(t.kernelShape)}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let e=t.kernelShape[t.kernelShape.length-1],n=t.strides[t.strides.length-1],i=t.pads[t.pads.length/2-1],a=t.pads[t.pads.length-1],o=!!(i+a);r.push({type:12,data:e},{type:12,data:n},{type:12,data:i},{type:12,data:a}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let l=!1;if(2===t.kernelShape.length){let e=t.kernelShape[t.kernelShape.length-2],n=t.strides[t.strides.length-2],i=t.pads[t.pads.length/2-2],a=t.pads[t.pads.length-2];l=!!(i+a),r.push({type:12,data:e},{type:12,data:n},{type:12,data:i},{type:12,data:a}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[r,s,!0,o,l]}{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let e=kn.computeStrides(t.kernelShape);return r.push({type:12,data:e},{type:12,data:t.pads},{type:12,data:t.strides}),s.push({name:"kernelStrides",type:"u32",length:e.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length}),[r,s,!!t.pads.reduce(((e,t)=>e+t)),!1,!1]}},Zo=(e,t,n,r,s,i,a,o,l,u,d,c)=>{let p="NHWC"===s.format,h=t.type.value,f=Un("output",t.type.tensor,r);if(s.kernelShape.length<=2){let r="",u="",m="",g=n-(p?2:1);if(r=d?`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${g}] < 0 || xIndices[${g}]\n                      >= uniforms.x_shape[${g}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${i}\n                }`:`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${i}\n                }`,2===s.kernelShape.length){let e=n-(p?3:2);u=c?`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${e}] < 0 || xIndices[${e}] >= uniforms.x_shape[${e}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                `,m="\n              }\n            "}return`\n            ${e.registerUniforms(l).declareVariables(t,f)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${f.offsetToIndices("global_idx")};\n              var xIndices = ${f.offsetToIndices("global_idx")};\n\n              var value = ${h}(${o});\n              var pad = 0;\n              ${u}\n              ${r}\n              ${m}\n              ${a}\n\n              output[global_idx] = value;\n            }`}{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let r=s.kernelShape.length,d=s.pads.length,c="";return c=u?`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${i}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${i}\n            `,`\n            ${e.registerUniforms(l).declareVariables(t,f)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${f.offsetToIndices("global_idx")};\n              var xIndices = ${f.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${r}>;\n\n              var value = ${h}(${o});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${r-1}u; j++) {\n                  offsets[j] = offset / ${Ln("uniforms.kernelStrides","j",r)};\n                  offset -= offsets[j] * ${Ln("uniforms.kernelStrides","j",r)};\n                }\n                offsets[${r-1}] = offset;\n\n                isPad = false;\n                for (var j = ${n-r}u; j < ${n}u; j++) {\n                  xIndices[j] = indices[j] * ${Ln("uniforms.strides",`j - ${n-r}u`,r)}\n                    + offsets[j - ${n-r}u] - ${Ln("uniforms.pads","j - 2u",d)};\n                  ${c}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Jo=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,el=e=>`${Jo(e)};${e.countIncludePad}`,tl=e=>`${Jo(e)};${e.storageOrder};${e.dilations}`,nl=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),rl=(e,t,n,r)=>{let[s,i]=Yo(t,r,n),a=Nn("x",t.dataType,t.dims.length),o=a.type.value,l="";s.countIncludePad?l+=`value /= ${o}(uniforms.kernelSize);`:l+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[u,d,c,p,h]=Qo(i,s);u.push(...On(t.dims,i));return{name:e,shaderCache:{hint:`${r.cacheKey};${c};${p};${h}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(kn.size(i)/64)},programUniforms:u}),getShaderSource:e=>Zo(e,a,t.dims.length,i.length,s,"value += x_val;",l,0,d,c,p,h)}},sl=e=>{let t=0!==e.count_include_pad,n=nl(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let r={countIncludePad:t,...n,cacheKey:""};return{...r,cacheKey:el(r)}},il=(e,t)=>{Xo(e.inputs),e.compute(rl("AveragePool",e.inputs[0],!1,t))},al={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},ol=e=>{let t=e.format;return{format:t,...al,cacheKey:t}},ll=(e,t)=>{Xo(e.inputs),e.compute(rl("GlobalAveragePool",e.inputs[0],!0,t))},ul=(e,t,n,r)=>{let[s,i]=Yo(t,r,n),a=Nn("x",t.dataType,t.dims.length),[o,l,u,d,c]=Qo(i,s);return o.push(...On(t.dims,i)),{name:e,shaderCache:{hint:`${r.cacheKey};${u};${d};${c}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(kn.size(i)/64)},programUniforms:o}),getShaderSource:e=>Zo(e,a,t.dims.length,i.length,s,"\n      value = max(x_val, value);\n    ","",10===t.dataType?-65504:-1e5,l,u,d,c)}},dl=(e,t)=>{Xo(e.inputs),e.compute(ul("MaxPool",e.inputs[0],!1,t))},cl=e=>{let t=e.storage_order,n=e.dilations,r=nl(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:t,dilations:n,...r,cacheKey:""};return{...s,cacheKey:tl(s)}},pl=e=>{let t=e.format;return{format:t,...al,cacheKey:t}},hl=(e,t)=>{Xo(e.inputs),e.compute(ul("GlobalMaxPool",e.inputs[0],!0,t))}})),Ad=Ue((()=>{Ou(),Nu(),Fu(),Uu(),fl=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(3===e.length&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(6===e[0].dataType&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(0!==e[1].dims.length&&1!==e[1].dims.length&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map(((t,n)=>t===e[2].dims[n])).reduce(((e,t)=>e&&t),!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(0===e[1].dims.length||1===e[1].dims.length&&1===e[1].dims[0])throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map(((n,r)=>r===t.axis||n===e[0].dims[r])).reduce(((e,t)=>e&&t),!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let n=e[0].dims[t.axis],r=e[1].dims[t.axis];if(t.blockSize<Math.ceil(n/r)||t.blockSize>Math.ceil(n/(r-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},ml=(e,t)=>{let n=kn.normalizeAxis(t.axis,e[0].dims.length),r=e[0].dataType,s=3===r,i=e[0].dims,a=e[1].dataType,o=kn.size(i),l=3===r||2===r,u=l?[Math.ceil(kn.size(e[0].dims)/4)]:e[0].dims,d=e[1].dims,c=e.length>2?e[2]:void 0,p=c?l?[Math.ceil(kn.size(c.dims)/4)]:c.dims:void 0,h=0===d.length||1===d.length&&1===d[0],f=!1===h&&1===d.length,m=Bn(o),g=h&&(!l||4===m),_=g?m:1,w=g&&!l?m:1,y=Nn("input",l?12:r,u.length,w),b=Nn("scale",a,d.length),v=c?Nn("zero_point",l?12:r,p.length):void 0,x=Un("output",a,i.length,_),$=[y,b];v&&$.push(v);let k=[u,d];c&&k.push(p);let E=[{type:12,data:o/_},{type:12,data:n},{type:12,data:t.blockSize},...On(...k,i)];return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getShaderSource:e=>`\n      ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...$,x)}\n      ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          let output_indices = ${x.offsetToIndices("global_idx")};\n\n          // Set input x\n          ${l?`\n            let input = ${y.getByOffset("global_idx / 4")};\n            let x_vec = ${s?"unpack4xI8(input)":"unpack4xU8(input)"};\n            let x_value = ${1===_?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${y.getByOffset("global_idx")};`};\n\n          // Set scale input\n          ${h?`let scale_value= ${b.getByOffset("0")}`:f?`\n            let scale_index = ${x.indicesGet("output_indices","uniforms.axis")};\n            let scale_value= ${b.getByOffset("scale_index")};`:`\n            var scale_indices: ${b.type.indices} = output_indices;\n            let index = ${b.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;\n            ${b.indicesSet("scale_indices","uniforms.axis","index")};\n            let scale_value= ${b.getByIndices("scale_indices")};`};\n\n          // Set zero-point input\n          ${v?h?l?`\n                let zero_point_input = ${v.getByOffset("0")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${v.getByOffset("0")}`:f?l?`\n                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_input = ${v.getByOffset("zero_point_index / 4")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`\n                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_value = ${v.getByOffset("zero_point_index")};`:l?`\n                let zero_point_offset = ${b.indicesToOffset("scale_indices")};\n                let zero_point_input = ${v.getByOffset("zero_point_offset / 4")};\n                let zero_point_vec = ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${v.getByIndices("scale_indices")};`:`let zero_point_value = ${l?s?"i32":"u32":y.type.value}(0);`};\n      // Compute and write output\n      ${x.setByOffset("global_idx",`${x.type.value}(x_value - zero_point_value) * scale_value`)};\n      }`,getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:Math.ceil(o/_/64),y:1,z:1},programUniforms:E})}},gl=(e,t)=>{fl(e.inputs,t),e.compute(ml(e.inputs,t))},_l=e=>vn({axis:e.axis,blockSize:e.blockSize})})),Td=Ue((()=>{ct(),Ou(),Uu(),wl=(e,t,n)=>{if(e===t||e<t&&n<0||e>t&&n>0)throw new Error("Range these inputs' contents are invalid.")},yl=(e,t,n,r)=>{let s=Math.abs(Math.ceil((t-e)/n)),i=[s],a=s,o=[{type:12,data:a},{type:r,data:e},{type:r,data:n},...On(i)];return{name:"Range",shaderCache:{hint:`${r}`},getShaderSource:e=>{let t=Un("output",r,i.length),n=t.type.value,s=[{name:"outputSize",type:"u32"},{name:"start",type:n},{name:"delta",type:n}];return`\n        ${e.registerUniforms(s).declareVariables(t)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${n}(global_idx) * uniforms.delta;\n      }`},getRunData:()=>({outputs:[{dims:i,dataType:r}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o})}},bl=e=>{let t=0,n=0,r=0;6===e.inputs[0].dataType?(t=e.inputs[0].getInt32Array()[0],n=e.inputs[1].getInt32Array()[0],r=e.inputs[2].getInt32Array()[0]):1===e.inputs[0].dataType&&(t=e.inputs[0].getFloat32Array()[0],n=e.inputs[1].getFloat32Array()[0],r=e.inputs[2].getFloat32Array()[0]),ue.webgpu.validateInputContent&&wl(t,n,r),e.compute(yl(t,n,r,e.inputs[0].dataType),{inputs:[]})}})),zd=Ue((()=>{Ou(),Nu(),Fu(),Uu(),vl=(e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||3===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]||5===e.length&&1===e[0]&&1===e[1]))throw new Error("For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")},xl=(e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));let r=new Array(n).fill(1);return t.forEach(((t,n)=>r[t]=e[n])),r},$l=(e,t,n,r,s,i)=>{let[a,o,l]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],u=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach((e=>i.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&e.length>o&&1===e[o].dims.length&&e[o].dims[0]>0){if(e[o].getFloat32Array().forEach((e=>r.push(e))),0!==r.length&&r.length!==u&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");vl(r,t),t.axes.length>0&&xl(r,t.axes,u).forEach(((e,t)=>r[t]=e))}if(l>0&&e.length>l&&1===e[l].dims.length&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach((e=>s.push(Number(e)))),0!==s.length&&s.length!==u&&n>=18&&s.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(0!==r.length&&r.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(0!==s.length&&s.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<"u"&&typeof s<"u"&&r.length>0&&s.length>u)throw new Error("Resize requires only of scales or sizes to be specified")},kl=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",El=(e,t,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Sl=(e,t,n)=>{let r=new Array(n).fill(0).concat(new Array(n).fill(1)),s=0===e.length?r:e.slice();return t.length>0?(t.forEach(((e,i)=>{r[e]=s[i],r[i+n]=s[t.length+i]})),r):s},Cl=(e,t,n,r)=>{let s=[];if(n.length>0)if(r.length>0){if(e.forEach((e=>s.push(e))),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach(((e,t)=>s[e]=n[t]))}else n.forEach((e=>s.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");s=e.map(((e,n)=>Math.round(e*t[n])))}return s},Al=(e,t,n)=>{let r=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map((e=>t[e])),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map((e=>t[e])),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let s=e.slice();return n.axes.length>0?(n.axes.forEach((e=>t[e]=r)),n.axes.forEach((n=>s[n]=Math.round(e[n]*t[n])))):(t.fill(r,0,t.length),s.forEach(((e,n)=>s[n]=Math.round(e*t[n])))),s},Tl=(e,t,n,r,s)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${n.length}> {\n      var original_indices: array<${e.type.value}, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${Ln("uniforms.scales","i",r)};\n        var roi_low = ${Ln("uniforms.roi","i",s)};\n        var roi_hi = ${Ln("uniforms.roi",`i + ${t.length}`,s)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${Ln("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${Ln("uniforms.output_shape","i",n.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,zl=(e,t,n,r,s,i,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${Ln("uniforms.scales","i",s)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${Ln("uniforms.roi","i",i)};\n          var roi_hi = ${Ln("uniforms.roi",`i + ${n.length}`,i)};\n          var input_shape_i = ${Ln("uniforms.input_shape","i",n.length)};\n          var output_shape_i = ${Ln("uniforms.output_shape","i",r.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Il=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${Ln("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Ml=(e,t,n,r)=>e.rank>r?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",n,"batch")};\n`:"",Ol=(e,t,n,r,s)=>{let[i,a,o,l]=2===n.length?[-1,0,1,-1]:[0,2,3,1],u=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${u} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(col, ${n[o]} - 1))`)};\n      ${Ml(e,l,i,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${u} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${u} = originalIndices[${a}];\n      var col:${u} = originalIndices[${o}];\n      ${r?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[o]} - 1)) {\n        return ${s};\n      }`:""};\n      row = max(0, min(row, ${n[a]} - 1));\n      col = max(0, min(col, ${n[o]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};\n      var batch: u32 =  ${n.length>2?`u32(originalIndices[${i}])`:"0"};\n      var x11: ${u} = getInputValue(batch, channel, row1, col1);\n      var x12: ${u} = getInputValue(batch, channel, row1, col2);\n      var x21: ${u} = getInputValue(batch, channel, row2, col1);\n      var x22: ${u} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${u} = abs(row - ${u}(row1));\n      var dx2: ${u} = abs(${u}(row2) - row);\n      var dy1: ${u} = abs(col - ${u}(col1));\n      var dy2: ${u} = abs(${u}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Bl=(e,t,n,r,s,i,a,o,l,u)=>{let d=2===n.length,[c,p]=d?[0,1]:[2,3],h=e.type.value,f=a=>{let d=a===c?"row":"col";return`\n      fn ${d}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${h} {\n        var output_index = ${t.indicesGet("output_indices",a)};\n        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[a]},\n        ${r[a]}, ${n[a]}, ${i[a]}, ${i[a]} + ${n.length});\n        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${o} && (originalIdx < 0 || originalIdx > (${n[a]} - 1))) {\n          return ${l};\n        }\n        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${d}: ${h} = originalIdx + ${h}(i);\n          if (${d} < 0 || ${d} >= ${n[a]}) {\n            ${u?"coefs[i + 1] = 0.0;\n                        continue;":o?`return ${l};`:`${d} = max(0, min(${d}, ${n[a]} - 1));`};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",a,`u32(${d})`)};\n          data[i + 1] = ${a===c?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${f(c)};\n    ${f(p)};\n  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${h} = 1.0 - absS;\n    var twoMinusAbsS: ${h} = 2.0 - absS;\n    var onePlusAbsS: ${h} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {\n    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${h} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Rl=(e,t,n,r,s)=>{let[i,a,o,l,u]=3===n.length?[-1,0,1,2,-1]:[0,2,3,4,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(height, ${n[o]} - 1))`)};\n      ${e.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};\n      ${Ml(e,u,i,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${d} = originalIndices[${a}];\n      var height:${d} = originalIndices[${o}];\n      var width:${d} = originalIndices[${l}];\n      ${r?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[o]} - 1) || width < 0 || (width > ${n[l]} - 1)) {\n      return ${s};\n        }`:""};\n\n    depth = max(0, min(depth, ${n[a]} - 1));\n      height = max(0, min(height, ${n[o]} - 1));\n      width = max(0, min(width, ${n[l]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${n.length>3?`u32(originalIndices[${u}])`:"0"};\n      var batch: u32 =  ${n.length>3?`u32(originalIndices[${i}])`:"0"};\n\n      var x111: ${d} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${d} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${d} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${d} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${d} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${d} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${d} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${d} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${d} = abs(depth - ${d}(depth1));\n      var dx2: ${d} = abs(${d}(depth2) - depth);\n      var dy1: ${d} = abs(height - ${d}(height1));\n      var dy2: ${d} = abs(${d}(height2) - height);\n      var dz1: ${d} = abs(width - ${d}(width1));\n      var dz2: ${d} = abs(${d}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Pl=(e,t,n,r,s,i)=>{let a=e.dims,o=Sl(i,t.axes,a.length),l=Cl(a,r,s,t.axes),u=r.slice();0===r.length&&(u=a.map(((e,t)=>0===e?1:l[t]/e)),"stretch"!==t.keepAspectRatioPolicy&&(l=Al(a,u,t)));let d=Un("output",e.dataType,l.length),c=Nn("input",e.dataType,a.length),p=kn.size(l),h=a.length===l.length&&a.every(((e,t)=>e===l[t])),f="tf_crop_and_resize"===t.coordinateTransformMode,m=t.extrapolationValue,g=c.type.value;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${n}|${u.length>0?u:""}|${s.length>0?s:""}|${o.length>0?o:""}|${h}|${a}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${h?"":`\n      ${kl(t.coordinateTransformMode,g)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Il(c,a)};\n              ${El(t.nearestMode,n,g)};\n              ${zl(c,d,a,l,u.length,o.length,f)};\n              `;case"linear":return`\n              ${Tl(d,a,l,u.length,o.length)};\n              ${(()=>{if(2===a.length||4===a.length)return`${Ol(c,d,a,f,m)}`;if(3===a.length||5===a.length)return`${Rl(c,d,a,f,m)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(2===a.length||4===a.length)return`${Bl(c,d,a,l,u,o,t.cubicCoeffA,f,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${e.registerUniform("output_size","u32").registerUniform("scales","f32",u.length).registerUniform("roi","f32",o.length).declareVariables(c,d)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${h?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${c.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${c.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${2===a.length||4===a.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:1,data:u},{type:1,data:o},...On(a,l)]})}},Dl=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ll=(e,t)=>{let n=[],r=[],s=[],i=Dl(e);if(0!==t.antialias)throw Error("Only default value (0) for Antialias attribute is supported");$l(e.inputs,t,i,n,r,s),e.compute(Pl(e.inputs[0],t,i,n,r,s),{inputs:[0]})},Fl=e=>{let t=e.antialias,n=e.axes,r=e.coordinateTransformMode,s=e.cubicCoeffA,i=0!==e.excludeOutside,a=e.extrapolationValue,o=e.keepAspectRatioPolicy,l=e.mode,u=""===e.nearestMode?"simple":e.nearestMode;return vn({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:s,excludeOutside:i,extrapolationValue:a,keepAspectRatioPolicy:o,mode:l,nearestMode:u})}})),Id=Ue((()=>{Ou(),Nu(),Fu(),Uu(),Nl=(e,t)=>{let[n,r,s,i]=e,{numHeads:a,rotaryEmbeddingDim:o}=t;if(3!==n.dims.length&&4!==n.dims.length)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${n.dims.length}`);if(!kn.areEqual(r.dims,[])&&!kn.areEqual(r.dims,[1])&&2!==r.dims.length)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${r.dims.length}`);if(2!==s.dims.length)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(2!==i.dims.length)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!kn.areEqual(s.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&0===a)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=n.dims[0],u=n.dims[n.dims.length-2],d=s.dims[0],c=kn.sizeFromDimension(n.dims,1)/u,p=0===o?2*s.dims[1]:c/a;if(o>p)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(2===r.dims.length){if(l!==r.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${r.dims[0]}`);if(u!==r.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${r.dims[1]}`)}if(p/2!==s.dims[1]&&o/2!==s.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${s.dims[1]}`);if(u>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Ul=(e,t)=>{let{interleaved:n,numHeads:r,rotaryEmbeddingDim:s,scale:i}=t,a=e[0].dims[0],o=kn.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],u=o/l,d=e[2].dims[1],c=0===s?2*d:u/r,p=new Array(a,l,u/c,c-d),h=kn.computeStrides(p),f=[{type:1,data:i},{type:12,data:p},{type:12,data:h},...3===e[0].dims.length?new Array({type:12,data:[o,u,c,1]}):[],...4===e[0].dims.length?new Array({type:12,data:[o,c,l*c,1]}):[],...On(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:vn({interleaved:n}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:t=>{let r=Nn("input",e[0].dataType,e[0].dims.length),s=Nn("position_ids",e[1].dataType,e[1].dims.length),i=Nn("cos_cache",e[2].dataType,e[2].dims.length),a=Nn("sin_cache",e[3].dataType,e[3].dims.length),o=Un("output",e[0].dataType,e[0].dims.length);return t.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:p.length},{name:"global_strides",type:"u32",length:h.length},{name:"input_output_strides",type:"u32",length:h.length}]),`\n        ${t.declareVariables(r,s,i,a,o)}\n\n        ${t.mainStart(Tn)}\n          let half_rotary_emb_dim = uniforms.${i.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${t.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${s.broadcastedIndicesToOffset("bsnh.xy",Un("",s.type.tensor,2))};\n            let position_id =\n                u32(${s.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${n});\n            let j = i + select(half_rotary_emb_dim, 1, ${n});\n            let re = ${r.getByOffset("i")} * ${i.get("position_id","bsnh[3]")} -\n                ${r.getByOffset("j")} * ${a.get("position_id","bsnh[3]")};\n            ${o.setByOffset("i","re")}\n            let im = ${r.getByOffset("i")} * ${a.get("position_id","bsnh[3]")} +\n                ${r.getByOffset("j")} * ${i.get("position_id","bsnh[3]")};\n            ${o.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${o.setByOffset("k",r.getByOffset("k"))}\n          }\n        }`},getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(kn.size(p)/Tn)},programUniforms:f})}},jl=(e,t)=>{Nl(e.inputs,t),e.compute(Ul(e.inputs,t))}})),Md=Ue((()=>{Ou(),Nu(),Uu(),Vl=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");let s=t.dims[t.dims.length-1],i=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},ql=(e,t,n,r)=>{let s=t.simplified,i=e[0].dims,a=kn.size(i),o=i,l=a,u=i.slice(-1)[0],d=r?i.slice(0,-1).concat(1):[],c=!s&&e.length>3,p=e.length>4,h=r&&n>1,f=r&&n>2,m=n>3,g=64,_=Bn(u),w=[{type:12,data:l},{type:12,data:_},{type:12,data:u},{type:1,data:t.epsilon}],y=[{dims:o,dataType:e[0].dataType}];return n>1&&y.push({dims:d,dataType:1}),n>2&&y.push({dims:d,dataType:1}),n>3&&y.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${_};${h};${f};${m}`,inputDependencies:e.map(((e,t)=>"type"))},getShaderSource:t=>{let n=[Nn("x",e[0].dataType,e[0].dims,_),Nn("skip",e[1].dataType,e[1].dims,_),Nn("gamma",e[2].dataType,e[2].dims,_)];c&&n.push(Nn("beta",e[3].dataType,e[3].dims,_)),p&&n.push(Nn("bias",e[4].dataType,e[4].dims,_)),n.push(Un("output",e[0].dataType,o,_)),h&&n.push(Un("mean_output",1,d)),f&&n.push(Un("inv_std_output",1,d)),m&&n.push(Un("input_skip_bias_sum",e[0].dataType,o,_));let r=In(e[0].dataType),i=In(1,_);return`\n\n      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...n)}\n      var<workgroup> sum_shared : array<${i}, 64>;\n      var<workgroup> sum_squared_shared : array<${i}, 64>;\n\n      ${t.mainStart([g,1,1])}\n        let ix = local_id.x;\n        let iy = global_id.x / 64;\n\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        var stride = hidden_size_vectorized / 64;\n        let offset = ix * stride + iy * hidden_size_vectorized;\n        let offset1d = stride * ix;\n        if (ix == 63) {\n          stride = hidden_size_vectorized - stride * ix;\n        }\n        for (var i: u32 = 0; i < stride; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${p?"bias[offset1d + i]":r+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${m?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${Pn(r,_,"value")};\n          sum_shared[ix] += f32_value;\n          sum_squared_shared[ix] += f32_value * f32_value;\n        }\n        workgroupBarrier();\n\n        var reduce_size : u32 = 64;\n        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {\n          reduce_size = curr_size + (reduce_size & 1);\n          if (ix < curr_size) {\n            sum_shared[ix] += sum_shared[ix + reduce_size];\n            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];\n          }\n          workgroupBarrier();\n        }\n\n        let sum = sum_shared[0];\n        let square_sum = sum_squared_shared[0];\n        let mean = ${Dn("sum",_)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${Dn("square_sum",_)} / f32(uniforms.hidden_size) ${s?"":"- mean * mean"} + uniforms.epsilon);\n        ${h?"mean_output[global_idx] = mean;":""}\n        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}\n\n        for (var i: u32 = 0; i < stride; i++) {\n          output[offset + i] = (output[offset + i] ${s?"":`- ${r}(mean)`}) *\n            ${r}(inv_std_dev) * gamma[offset1d + i]\n            ${c?"+ beta[offset1d + i]":""};\n        }\n      }`},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(l/u)},programUniforms:w})}},Wl=(e,t)=>{Vl(e.inputs);let n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(ql(e.inputs,t,e.outputCount,!1),{outputs:n})}})),Od=Ue((()=>{Ou(),Nu(),Fu(),Uu(),Gl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))},Hl=(e,t)=>{let n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},Kl=(e,t)=>{if(e.length>1){let t=Hl(e,1),n=Hl(e,2),r=Hl(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),vn({starts:t,ends:n,axes:r})}return t},Xl=(e,t,n,r,s)=>{let i=e;return e<0&&(i+=n[r[t]]),s[t]<0?Math.max(0,Math.min(i,n[r[t]]-1)):Math.max(0,Math.min(i,n[r[t]]))},Yl=(e,t,n)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            let input_shape_i = ${Ln("uniforms.input_shape","i",n.length)};\n            let steps_i = ${Ln("uniforms.steps","i",n.length)};\n            let signs_i = ${Ln("uniforms.signs","i",n.length)};\n            let starts_i = ${Ln("uniforms.starts","i",n.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Ql=(e,t)=>{let n=e[0].dims,r=kn.size(n),s=t.axes.length>0?kn.normalizeAxes(t.axes,n.length):[...Array(n.length).keys()],i=Hl(e,4);i.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===i.length&&(i=Array(s.length).fill(1));let a=t.starts.map(((e,t)=>Xl(e,t,n,s,i))),o=t.ends.map(((e,t)=>Xl(e,t,n,s,i)));if(s.length!==a.length||s.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==n.length)for(let g=0;g<n.length;++g)s.includes(g)||(a.splice(g,0,0),o.splice(g,0,n[g]),i.splice(g,0,1));let l=i.map((e=>Math.sign(e)));i.forEach(((e,t,n)=>{if(e<0){let r=(o[t]-a[t])/e,s=a[t],l=s+r*i[t];a[t]=l,o[t]=s,n[t]=-e}}));let u=n.slice(0);s.forEach(((e,t)=>{u[e]=Math.ceil((o[e]-a[e])/i[e])}));let d={dims:u,dataType:e[0].dataType},c=Un("output",e[0].dataType,u.length),p=Nn("input",e[0].dataType,e[0].dims.length),h=kn.size(u),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:i.length}],m=[{type:12,data:h},{type:12,data:a},{type:6,data:l},{type:12,data:i},...On(e[0].dims,u)];return{name:"Slice",shaderCache:{hint:`${l.length}_${a.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${e.registerUniforms(f).declareVariables(p,c)}\n        ${Yl(p,c,n)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${c.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${c.setByOffset("global_idx",p.getByIndices("input_indices"))}\n      }`,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:m})}},Zl=(e,t)=>{Gl(e.inputs,t);let n=Kl(e.inputs,t);e.compute(Ql(e.inputs,n),{inputs:[0]})},Jl=e=>{let t=e.starts,n=e.ends,r=e.axes;return vn({starts:t,ends:n,axes:r})}})),Bd=Ue((()=>{Ou(),Nu(),Fu(),ju(),Uu(),eu=e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.")},tu=(e,t)=>{let n,r=e.inputs[0],s=r.dims,i=kn.size(s),a=s.length,o=kn.normalizeAxis(t.axis,a),l=o<s.length-1,u=[];l?(u=Array.from({length:a},((e,t)=>t)),u[o]=a-1,u[a-1]=o,n=e.compute(Qn(r,u),{inputs:[r],outputs:[-1]})[0]):n=r;let d=n.dims,c=d[a-1],p=i/c,h=Bn(c),f=c/h,m=Nn("x",n.dataType,n.dims,h),g=Un("result",n.dataType,n.dims,h),_=m.type.value,w="f32"===In(n.dataType)?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,y=e.compute({name:"Softmax",shaderCache:{hint:`${h}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:d,dataType:n.dataType}],dispatchGroup:{x:p},programUniforms:[{type:6,data:f}]}),getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, 64>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${e.registerUniform("packedCols","i32").declareVariables(m,g)}\n      ${e.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = 64;\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${w}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${((e,t)=>4===t?`max(max(${e}.x, ${e}.y), max(${e}.z, ${e}.w))`:2===t?`max(${e}.x, ${e}.y)`:3===t?`max(max(${e}.x, ${e}.y), ${e}.z)`:e)("threadShared[0]",h)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${Dn("threadShared[0]",h)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`},{inputs:[n],outputs:[l?-1:0]})[0];l&&e.compute(Qn(y,u),{inputs:[y]})},nu=(e,t)=>{eu(e.inputs),tu(e,t)},ru=e=>vn({axis:e.axis})})),Rd=Ue((()=>{Ou(),Nu(),Fu(),Uu(),su=e=>{if(!e||e.length<1)throw new Error("too few inputs")},iu=(e,t)=>{let n=[],r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),r=n.length),vn({numOutputs:r,axis:t.axis,splitSizes:n})},au=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${Ln("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,ou=e=>{let t=e.length,n=[];for(let r=0;r<t;++r){let s=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(s):0===r?n.push(`if (output_number == ${r}u) { ${s} }`):r===t-1?n.push(`else { ${s} }`):n.push(`else if (output_number == ${r}) { ${s} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`},lu=(e,t)=>{let n=e[0].dims,r=kn.size(n),s=e[0].dataType,i=kn.normalizeAxis(t.axis,n.length),a=new Array(t.numOutputs),o=Nn("input",s,n.length),l=new Array(t.numOutputs),u=[],d=[],c=0,p=[{type:12,data:r}];for(let h=0;h<t.numOutputs;h++){c+=t.splitSizes[h],l[h]=c;let r=n.slice();r[i]=t.splitSizes[h],d.push(r),a[h]=Un(`output${h}`,s,r.length),u.push({dims:d[h],dataType:e[0].dataType})}p.push({type:12,data:l},...On(n,...d));return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:e=>`\n  ${e.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...a)}\n  ${au(l.length)}\n  ${ou(a)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${o.offsetToIndices("global_idx")};\n    var index = ${o.indicesGet("indices",i)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${Ln("uniforms.size_in_split_axis","output_number - 1u",l.length)};\n      ${o.indicesSet("indices",i,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`,getRunData:()=>({outputs:u,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:p})}},uu=(e,t)=>{su(e.inputs);let n=1===e.inputs.length?t:iu(e.inputs,t);e.compute(lu(e.inputs,n),{inputs:[0]})},du=e=>{let t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return vn({axis:t,numOutputs:r,splitSizes:n})}})),Pd=Ue((()=>{Ou(),Nu(),Uu(),cu=(e,t,n,r,s)=>{let i,a=Un("output_data",s,n.length,4),o=Nn("a_data",t[1].dataType,t[1].dims.length,4),l=Nn("b_data",t[2].dataType,t[2].dims.length,4),u=Nn("c_data",t[0].dataType,t[0].dims.length,4),d=(e,t,n)=>`select(${t}, ${e}, ${n})`;if(r){let e=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",r=`a_data[index_a${t}][component_a${t}]`,s=`b_data[index_b${t}][component_b${t}]`,i=`bool(c_data[index_c${t}] & (0xffu << (component_c${t} * 8)))`;return`\n            let output_indices${t} = ${a.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offset_a${t} = ${o.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let offset_b${t} = ${l.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let offset_c${t} = ${u.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let index_a${t} = offset_a${t} / 4u;\n            let index_b${t} = offset_b${t} / 4u;\n            let index_c${t} = offset_c${t} / 4u;\n            let component_a${t} = offset_a${t} % 4u;\n            let component_b${t} = offset_b${t} % 4u;\n            let component_c${t} = offset_c${t} % 4u;\n            ${e}[${t}] = ${n}(${d(r,s,i)});\n          `};i=9===s?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("output_data[global_idx]",0)}\n            ${e("output_data[global_idx]",1)}\n            ${e("output_data[global_idx]",2)}\n            ${e("output_data[global_idx]",3)}\n          `}else i=a.setByOffset("global_idx",d(o.getByOffset("global_idx"),l.getByOffset("global_idx"),u.getByOffset("global_idx")));return`\n        ${e.registerUniform("vec_size","u32").declareVariables(u,o,l,a)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${i}\n      }`},pu=e=>{let t=e[1].dims,n=e[2].dims,r=e[0].dims,s=e[1].dataType,i=!(kn.areEqual(t,n)&&kn.areEqual(n,r)),a=t,o=kn.size(t);if(i){let e=$n.calcShape($n.calcShape(t,n,!1),r,!1);if(!e)throw new Error("Can't perform where op on the given tensors");a=e,o=kn.size(a)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:t=>cu(t,e,a,i,s),getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...On(r,t,n,a)]})}},hu=e=>{e.compute(pu(e.inputs))}})),Dd=Ue((()=>{Wu(),Gu(),Hu(),Ku(),Yu(),Qu(),Zu(),od(),dd(),cd(),pd(),hd(),fd(),md(),gd(),_d(),wd(),yd(),xd(),$d(),kd(),ad(),Ed(),bd(),Sd(),Cd(),Ad(),Td(),qu(),zd(),Id(),Md(),Od(),Bd(),Rd(),vd(),ju(),Xu(),Pd(),fu=new Map([["Abs",[hs]],["Acos",[fs]],["Acosh",[ms]],["Add",[li]],["ArgMax",[Xr,Yr]],["ArgMin",[Kr,Yr]],["Asin",[gs]],["Asinh",[_s]],["Atan",[ws]],["Atanh",[ys]],["Attention",[rs]],["AveragePool",[il,sl]],["BatchNormalization",[os]],["BiasAdd",[ds]],["BiasSplitGelu",[si]],["Cast",[vs,bs]],["Ceil",[ks]],["Clip",[$s]],["Concat",[xi,$i]],["Conv",[la,sa]],["ConvTranspose",[xa,_a]],["Cos",[Es]],["Cosh",[Ss]],["CumSum",[ka,Ea]],["DepthToSpace",[Ta,za]],["DequantizeLinear",[gl,_l]],["Div",[ui]],["Einsum",[Fa,Na]],["Elu",[As,Cs]],["Equal",[di]],["Erf",[zs]],["Exp",[Is]],["Expand",[Wa]],["FastGelu",[Ha]],["Floor",[Ms]],["FusedConv",[la,sa]],["Gather",[Qa,Ya]],["GatherElements",[io,so]],["GatherBlockQuantized",[eo,to]],["Gelu",[Os]],["Gemm",[uo,lo]],["GlobalAveragePool",[ll,ol]],["GlobalMaxPool",[hl,pl]],["Greater",[fi]],["GreaterOrEqual",[gi]],["GroupQueryAttention",[Ao,Eo]],["HardSigmoid",[Us,Ns]],["InstanceNormalization",[Mo]],["LayerNormalization",[Ro]],["LeakyRelu",[Bs,Cs]],["Less",[mi]],["LessOrEqual",[_i]],["Log",[Zs]],["MatMul",[Ji]],["MatMulNBits",[Lo,Fo]],["MaxPool",[dl,cl]],["Mul",[ci]],["MultiHeadAttention",[_o,ho]],["Neg",[Ps]],["Not",[Rs]],["Pad",[Ko]],["Pow",[pi]],["QuickGelu",[ti,Cs]],["Range",[bl]],["Reciprocal",[Ds]],["ReduceMin",[jr]],["ReduceMean",[Dr]],["ReduceMax",[Ur]],["ReduceSum",[qr]],["ReduceProd",[Vr]],["ReduceL1",[Lr]],["ReduceL2",[Fr]],["ReduceLogSum",[Gr]],["ReduceLogSumExp",[Nr]],["ReduceSumSquare",[Wr]],["Relu",[Ls]],["Resize",[Ll,Fl]],["RotaryEmbedding",[jl]],["Sigmoid",[Fs]],["Sin",[js]],["Sinh",[Vs]],["Slice",[Zl,Jl]],["SkipLayerNormalization",[Wl]],["Split",[uu,du]],["Sqrt",[qs]],["Softmax",[nu,ru]],["Sub",[hi]],["Tan",[Ws]],["Tanh",[Hs]],["ThresholdedRelu",[Qs,Cs]],["Tile",[xo]],["Transpose",[Zn,Jn]],["Where",[hu]]])})),Ld=Ue((()=>{ct(),Ru(),Uu(),mu=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r,s){Ae(e.programInfo.name);let i=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let o=[];for(let u of t)o.push({binding:o.length,resource:{buffer:u.buffer}});for(let u of n)o.push({binding:o.length,resource:{buffer:u.buffer}});s&&o.push({binding:o.length,resource:s});let l=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:o,label:e.programInfo.name});if("capturing"===this.backend.sessionStatus){let t={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(t)}a.setPipeline(e.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...r),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Te(e.programInfo.name)}dispose(){}build(e,t){Ae(e.name);let n=this.backend.device,r=[];n.features.has("shader-f16")&&r.push("enable f16;");let s=qn(t,this.backend.device.limits),i=e.getShaderSource(s),a=`${r.join("\n")}\n${s.additionalImplementations}\n${i}`,o=n.createShaderModule({code:a,label:e.name});un("verbose",(()=>`[WebGPU] ${e.name} shader code: ${a}`));let l=n.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:e.name});return Te(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:s.variablesInfo}}normalizeDispatchGroupSize(e){let t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=s&&n<=s&&r<=s)return[t,n,r];let i=t*n*r,a=Math.ceil(Math.sqrt(i));if(a>s){if(a=Math.ceil(Math.cbrt(i)),a>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}return[a,a,1]}}})),Fd=Ue((()=>{ct(),Ou(),Ru(),Pu(),Lu(),Dd(),Ld(),gu=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let n=[];for(let r=0;r<e.length;++r){let s=e[r].dataType;switch(t[r]){case"none":n.push("");break;case"type":n.push(`${s}`);break;case"rank":{let t=e[r].dims.length;n.push(`${s};${t}`);break}case"dims":{let t=e[r].dims.join(",");n.push(`${s};${t}`);break}default:throw new Error(`unsupported input dependency: ${t[r]}`)}}return n.join("|")},_u=(e,t,n)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=":"+n+`:${gu(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},wu=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},yu=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let n=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n};t.features.has("chromium-experimental-timestamp-query-inside-passes")?n.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&n.push("timestamp-query"),t.features.has("shader-f16")&&n.push("shader-f16"),this.device=await t.requestDevice(r),this.adapterInfo=new wu(t.info||await t.requestAdapterInfo()),this.gpuDataManager=yn(this),this.programManager=new mu(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,on(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};"at-passes"===this.queryType&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;Ae(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&e.mapAsync(GPUMapMode.READ).then((()=>{let t=new BigUint64Array(e.getMappedRange()),n=this.pendingQueries.get(e);for(let e=0;e<t.length/2;e++){let r=n[e],s=r.kernelId,i=this.kernels.get(s),a=i.kernelType,o=i.kernelName,l=r.programName,u=r.inputTensorViews,d=r.outputTensorViews,c=t[2*e],p=t[2*e+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=c);let h=Number(c-this.queryTimeBase),f=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(h)||!Number.isSafeInteger(f))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:u.map((e=>({dims:e.dims,dataType:Kt(e.dataType)}))),outputsMetadata:d.map((e=>({dims:e.dims,dataType:Kt(e.dataType)}))),kernelId:s,kernelType:a,kernelName:o,programName:l,startTime:h,endTime:f});else{let e="";u.forEach(((t,n)=>{e+=`input[${n}]: [${t.dims}] | ${Kt(t.dataType)}, `}));let t="";d.forEach(((e,n)=>{t+=`output[${n}]: [${e.dims}] | ${Kt(e.dataType)}, `})),console.log(`[profiling] kernel "${s}|${a}|${o}|${l}" ${e}${t}execution time: ${f-h} ns`)}Se("GPU",`${l}::${c}::${p}`)}e.unmap(),this.pendingQueries.delete(e)})),Te()}run(e,t,n,r,s,i){Ae(e.name);let a=[];for(let w=0;w<t.length;++w){let e=t[w].data;if(0===e)continue;let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for input: ${e}`);a.push(n)}let{outputs:o,dispatchGroup:l,programUniforms:u}=e.getRunData(t),d=0===n.length?o.map(((e,t)=>t)):n;if(d.length!==o.length)throw new Error(`Output size ${d.length} must be equal to ${o.length}.`);let c,p=[],h=[];for(let w=0;w<o.length;++w){if(!Number.isInteger(d[w])||d[w]<-3||d[w]>=i)throw new Error(`Invalid output index: ${d[w]}`);if(-3===d[w])continue;let e=-1===d[w],t=-2===d[w],n=e||t?s(o[w].dataType,o[w].dims):r(d[w],o[w].dataType,o[w].dims);if(p.push(n),0===n.data)continue;let a=this.gpuDataManager.get(n.data);if(!a)throw new Error(`no GPU data for output: ${n.data}`);if(e&&this.temporaryData.push(a),t){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(a)}h.push(a)}if(a.length!==t.length||h.length!==p.length){if(0===h.length)return Te(e.name),p;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(u){let e=0,t=[];u.forEach((n=>{let r="number"==typeof n.data?[n.data]:n.data;if(0===r.length)return;let s,i,a=10===n.type?2:4;10===n.type?(i=r.length>4?16:r.length>2?8:r.length*a,s=r.length>4?16:a*r.length):(i=r.length<=2?r.length*a:16,s=16),e=Math.ceil(e/i)*i,t.push(e);let o=10===n.type?8:4;e+=r.length>4?Math.ceil(r.length/o)*s:r.length*a}));let n=16;e=Math.ceil(e/n)*n;let r=new ArrayBuffer(e);u.forEach(((e,n)=>{let s=t[n],i="number"==typeof e.data?[e.data]:e.data;if(6===e.type)new Int32Array(r,s,i.length).set(i);else if(12===e.type)new Uint32Array(r,s,i.length).set(i);else if(10===e.type)new Uint16Array(r,s,i.length).set(i);else{if(1!==e.type)throw new Error(`Unsupported uniform type: ${Kt(e.type)}`);new Float32Array(r,s,i.length).set(i)}}));let s=this.gpuDataManager.create(e,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(s.buffer,0,r,0,e),this.gpuDataManager.release(s.id),c={offset:0,size:e,buffer:s.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),m=1===f[1]&&1===f[2],g=_u(e,t,m),_=this.programManager.getArtifact(g);if(_||(_=this.programManager.build(e,f),this.programManager.setArtifact(g,_),un("info",(()=>`[artifact] key: ${g}, programName: ${e.name}`))),u&&_.uniformVariablesInfo){if(u.length!==_.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${_.uniformVariablesInfo.length}, got ${u.length} in program "${_.programInfo.name}".`);for(let e=0;e<u.length;e++){let t=u[e],n=t.type,r="number"==typeof t.data?1:t.data.length,[s,i]=_.uniformVariablesInfo[e];if(n!==s||r!==i)throw new Error(`Uniform variable ${e} mismatch: expect type ${s} with size ${i}, got type ${n} with size ${r} in program "${_.programInfo.name}".`)}}if(un("info",(()=>`[ProgramManager] run "${e.name}" (key=${g}) with ${f[0]}x${f[1]}x${f[2]}`)),"none"!==this.queryType||"capturing"===this.sessionStatus){let e={kernelId:this.currentKernelId,programName:_.programInfo.name,inputTensorViews:t,outputTensorViews:p};this.pendingKernels.push(e),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(e)}return this.programManager.run(_,a,h,f,c),Te(e.name),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){let s=fu.get(e);if(!s)throw new Error(`kernel not implemented: ${e}`);let i={kernelType:e,kernelName:r,kernelEntry:s[0],attributes:[s[1],n]};this.kernels.set(t,i)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){let r=this.kernels.get(e);if(!r)throw new Error(`kernel not created: ${e}`);let s=r.kernelType,i=r.kernelName,a=r.kernelEntry,o=r.attributes;if(null!==this.currentKernelId)throw new Error(`kernel "[${s}] ${i}" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),un("info",(()=>`[WebGPU] Start to run kernel "[${s}] ${i}"...`));let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(t,o[1]),0}catch(u){return n.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${i}" failed. ${u}`)),1}finally{l&&n.push(this.device.popErrorScope().then((e=>e?`GPU validation error for kernel "[${s}] ${i}": ${e.message}`:null)));for(let e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,n,r){let s=this.sessionExternalDataMapping.get(e);s||(s=new Map,this.sessionExternalDataMapping.set(e,s));let i=s.get(t),a=this.gpuDataManager.registerExternalBuffer(n,r,i);return s.set(t,[a,n]),a}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach((e=>this.gpuDataManager.unregisterExternalBuffer(e[0]))),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,n){return async()=>{let r=await _n(this,e,t);return dn(r.buffer,n)}}writeTimestamp(e){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",("default"===this.env.webgpu.profiling?.mode||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){un("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){un("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){un("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),n=e.length;this.pendingKernels=[];for(let r=0;r<n;r++){let n=this.getComputePassEncoder(),s=e[r];this.writeTimestamp(2*this.pendingDispatchNumber),n.setPipeline(s.computePipeline),n.setBindGroup(0,s.bindGroup),n.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(t[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}})),Nd=Ue((()=>{Ru(),bu=1,vu=()=>bu++,xu=class{constructor(e,t){this.mlContext=e,this.tensorEntry=t,this.tensorCache=t?[t]:[]}get tensor(){return this.tensorEntry?.[0]}get context(){if(!this.mlContext)throw new Error("MLContext has not been set.");return this.mlContext}set context(e){if(this.mlContext&&this.mlContext!==e)throw new Error("MLTensor in use in a different MLContext.");this.mlContext=e}destroy(){for(let[e]of this.tensorCache)e.destroy();this.tensorCache=[],this.tensorEntry=void 0}trySelectTensor(e,t){for(let[n,r,s]of this.tensorCache)if(t===n){if(this.context!==e)throw new Error("MLTensor cannot be registered with a different MLContext.");return this.tensorEntry=[n,r,s],!0}return!1}async ensureTensor(e,t,n){if(this.tensorEntry){let[n,r,s]=this.tensorEntry;if(r===e&&s.every(((e,n)=>e===t[n])))return n}for(let[i,a,o]of this.tensorCache)if(a===e&&o.every(((e,n)=>e===t[n]))){if(n&&this.tensorEntry){un("verbose",(()=>`[WebNN] Slowdown may occur, having to copy existing tensor {dataType: ${e}, shape: ${t}}`));let n=await this.context.readTensor(this.tensorEntry[0]);this.context.writeTensor(i,n)}return this.tensorEntry=[i,a,o],i}un("verbose",(()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`));let r=MLTensorUsage.READ|MLTensorUsage.WRITE,s=await this.context.createTensor({dataType:e,shape:t,dimensions:t,usage:r});return this.tensorEntry=[s,e,t],this.tensorCache.push(this.tensorEntry),this.activeUpload&&(this.mlContext?.writeTensor(s,this.activeUpload),this.activeUpload=void 0),s}upload(e){this.tensorEntry?this.mlContext?.writeTensor(this.tensorEntry[0],e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)return e?void(e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload)):this.activeUpload.buffer;if(!this.tensorEntry)throw new Error("Tensor has not been created.");return e?this.context.readTensor(this.tensorEntry[0],e):this.context.readTensor(this.tensorEntry[0])}},$u=class{constructor(e){this.backend=e,this.tensorsById=new Map,this.tensorIdsByContext=new Map}reserveTensorId(){let e=vu();return this.tensorsById.set(e,new xu),e}releaseTensorId(e){let t=this.tensorsById.get(e);if(t){t.destroy(),this.tensorsById.delete(e);for(let[t,n]of this.tensorIdsByContext)if(n.has(e)){n.delete(e),0===n.size&&this.tensorIdsByContext.delete(t);break}}}async ensureTensor(e,t,n,r){un("verbose",(()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${n}, copyOld: ${r}}`));let s=this.tensorsById.get(e);if(!s)throw new Error("Tensor not found.");return s.context=this.backend.currentContext,this.tensorIdsByContext.has(this.backend.currentContext)||this.tensorIdsByContext.set(this.backend.currentContext,new Set),this.tensorIdsByContext.get(this.backend.currentContext)?.add(e),s.ensureTensor(t,n,r)}upload(e,t){this.tensorsById.get(e).upload(t)}async download(e,t){return un("verbose",(()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t?.byteLength}}`)),this.tensorsById.get(e).download(t)}releaseTensorsForContext(e){let t=this.tensorIdsByContext.get(e);if(t){for(let e of t)this.tensorsById.get(e).destroy(),this.tensorsById.delete(e);this.tensorIdsByContext.delete(e)}}registerTensor(e,t,n,r){for(let[a,o]of this.tensorsById)if(o.trySelectTensor(e,t))return a;let s=vu();this.tensorsById.set(s,new xu(e,[t,n,r]));let i=this.tensorIdsByContext.get(e);return i||(i=new Set,this.tensorIdsByContext.set(e,i)),i.add(s),s}},ku=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return new $u(...t)}})),Ud=Ue((()=>{Ou(),Tu(),Pu(),Nd(),Ru(),Eu=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Su=class{constructor(e){this.tensorManager=ku(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,on(e.logLevel,!!e.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let n=this.sessionIdsByMLContext.get(t);n||(n=new Set,this.sessionIdsByMLContext.set(t,n)),n.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.mlContextBySessionId.delete(e);let n=this.sessionIdsByMLContext.get(t);n.delete(e),0===n.size&&(this.sessionIdsByMLContext.delete(t),this.tensorManager.releaseTensorsForContext(t))}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){un("verbose",(()=>`[WebNN] releaseTensorId {tensorId: ${e}}`)),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,n,r){let s=Eu.get(t);if(!s)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,s,n,r)}uploadTensor(e,t){if(!Dt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");un("verbose",(()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`)),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let n=await this.tensorManager.download(e);return dn(n,t)}}registerMLTensor(e,t,n){let r=Eu.get(t);if(!r)throw new Error(`Unsupported ONNX data type: ${t}`);let s=this.tensorManager.registerTensor(this.currentContext,e,r,n);return un("verbose",(()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${r}, dimensions: ${n}} -> {tensorId: ${s}}`)),s}flush(){}}})),jd={};je(jd,{init:()=>Wd});var Vd,qd,Wd,Gd,Hd,Kd,Xd,Yd,Qd,Zd,Jd,ec,tc,nc,rc,sc,ic,ac,oc,lc,uc,dc,cc,pc,hc,fc,mc,gc,_c,wc,yc,bc,vc,xc,$c,kc,Ec=Ue((()=>{Ou(),Fd(),Ru(),Nu(),Ud(),Vd=class e{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");let e=kn.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");let e=kn.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");let e=kn.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw new Error("Invalid data type");let e=kn.size(this.dims);return 0===e?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,e)}reshape(t){if(kn.size(t)!==kn.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},qd=class{constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let r=e.HEAPU32,s=n>>>2;this.opKernelContext=r[s++];let i=r[s++];this.outputCount=r[s++],this.customDataOffset=r[s++],this.customDataSize=r[s++];let a=[];for(let o=0;o<i;o++){let t=r[s++],n=r[s++],i=r[s++],o=[];for(let e=0;e<i;e++)o.push(r[s++]);a.push(new Vd(e,t,n,o))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){let n=t?.inputs?.map((e=>"number"==typeof e?this.inputs[e]:e))??this.inputs,r=t?.outputs??[];return this.backend.run(e,n,r,((e,t,n)=>new Vd(this.module,t,this.output(e,n),n)),((e,t)=>{let n=Xt(e,t);if(!n)throw new Error(`Unsupported data type: ${e}`);let r=n>0?this.backend.gpuDataManager.create(n).id:0;return new Vd(this.module,e,r,t)}),this.outputCount)}output(e,t){let n=this.module.stackSave();try{let n=this.module.stackAlloc(4*(1+t.length)),r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(r){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${r}`)}finally{this.module.stackRestore(n)}}},Wd=async(e,t,n,r)=>{let s=t.jsepInit;if(!s)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===e){let e=new yu;await e.initialize(n,r),s("webgpu",[e,t=>e.alloc(t),t=>e.free(t),function(n,r,s){if(arguments.length>3&&void 0!==arguments[3]&&arguments[3])un("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${r}, size=${s}`)),e.memcpy(n,r);else{un("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${r}, size=${s}`));let i=t.HEAPU8.subarray(n>>>0,(n>>>0)+s);e.upload(r,i)}},async(n,r,s)=>{un("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${r}, size=${s}`)),await e.download(n,(()=>t.HEAPU8.subarray(r>>>0,(r>>>0)+s)))},(n,r,s)=>e.createKernel(n,r,s,t.UTF8ToString(t._JsepGetNodeName(r))),t=>e.releaseKernel(t),(n,r,s,i)=>{un("verbose",(()=>`[WebGPU] jsepRun: sessionHandle=${s}, kernel=${n}, contextDataOffset=${r}`));let a=new qd(t,e,r);return e.computeKernel(n,a,i)},()=>e.captureBegin(),()=>e.captureEnd(),()=>e.replay()])}else{let e=new Su(n);s("webnn",[e,()=>e.reserveTensorId(),t=>e.releaseTensorId(t),async(t,n,r,s)=>e.ensureTensor(t,n,r,s),(t,n)=>{e.uploadTensor(t,n)},async(t,n)=>e.downloadTensor(t,n)])}}})),Sc=Ue((()=>{Iu(),Mu(),Ou(),Tu(),zu(),Bu(),Gd=(e,t)=>{0!==Dt()._OrtInit(e,t)&&Nt("Can't initialize onnxruntime.")},Hd=async e=>{Gd(e.wasm.numThreads,Qt(e.logLevel))},Kd=async(e,t)=>{{let n=(Ec(),Ve(jd)).init;if("webgpu"===t){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=e.webgpu.adapter;if(t){if("object"!=typeof t.limits||"object"!=typeof t.features||"function"!=typeof t.requestDevice)throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(void 0!==n&&"low-power"!==n&&"high-performance"!==n)throw new Error(`Invalid powerPreference setting: "${n}"`);let r=e.webgpu.forceFallbackAdapter;if(void 0!==r&&"boolean"!=typeof r)throw new Error(`Invalid forceFallbackAdapter setting: "${r}"`);if(t=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:r}),!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await n("webgpu",Dt(),e,t)}if("webnn"===t){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await n("webnn",Dt(),e)}}},Xd=new Map,Yd=e=>{let t=Dt(),n=t.stackSave();try{let n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&Nt("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}},Qd=e=>{let t=Dt(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},Zd=async(e,t)=>{let n,r,s=Dt();Array.isArray(e)?[n,r]=e:e.buffer===s.HEAPU8.buffer?[n,r]=[e.byteOffset,e.byteLength]:[n,r]=Qd(e);let i=0,a=0,o=0,l=[],u=[],d=[];try{if([a,l]=Gt(t),t?.externalData&&s.mountExternalData){let e=[];for(let n of t.externalData){let t="string"==typeof n?n:n.path;e.push(tn("string"==typeof n?n:n.data).then((e=>{s.mountExternalData(t,e)})))}await Promise.all(e)}for(let n of t?.executionProviders??[])if("webnn"===("string"==typeof n?n:n.name)){if(s.shouldTransferToMLTensor=!1,s.currentContext)throw new Error("WebNN execution provider is already set.");if("string"!=typeof n){let e=n,t=e?.context,r=e?.gpuDevice,i=e?.deviceType,a=e?.numThreads,o=e?.powerPreference;s.currentContext=t||(r?await navigator.ml.createContext(r):await navigator.ml.createContext({deviceType:i,numThreads:a,powerPreference:o}))}else s.currentContext=await navigator.ml.createContext();break}i=await s._OrtCreateSession(n,r,a),0===i&&Nt("Can't create a session."),s.currentContext&&(s.jsepRegisterMLContext(i,s.currentContext),s.currentContext=void 0,s.shouldTransferToMLTensor=!0);let[e,c]=Yd(i),p=!!t?.enableGraphCapture,h=[],f=[],m=[];for(let t=0;t<e;t++){let e=s._OrtGetInputName(i,t);0===e&&Nt("Can't get an input name."),u.push(e),h.push(s.UTF8ToString(e))}for(let n=0;n<c;n++){let e=s._OrtGetOutputName(i,n);0===e&&Nt("Can't get an output name."),d.push(e);let r=s.UTF8ToString(e);f.push(r);{if(p&&void 0===t?.preferredOutputLocation){m.push("gpu-buffer");continue}let e="string"==typeof t?.preferredOutputLocation?t.preferredOutputLocation:t?.preferredOutputLocation?.[r]??"cpu";if("cpu"!==e&&"cpu-pinned"!==e&&"gpu-buffer"!==e&&"ml-tensor"!==e)throw new Error(`Not supported preferred output location: ${e}.`);if(p&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);m.push(e)}}let g=null;return m.some((e=>"gpu-buffer"===e||"ml-tensor"===e))&&(o=s._OrtCreateBinding(i),0===o&&Nt("Can't create IO binding."),g={handle:o,outputPreferredLocations:m,outputPreferredLocationsEncoded:m.map((e=>en(e)))}),Xd.set(i,[i,u,d,g,p,!1]),[i,h,f]}catch(c){throw u.forEach((e=>s._OrtFree(e))),d.forEach((e=>s._OrtFree(e))),0!==o&&s._OrtReleaseBinding(o),0!==i&&s._OrtReleaseSession(i),c}finally{s._free(n),0!==a&&s._OrtReleaseSessionOptions(a),l.forEach((e=>s._free(e))),s.unmountExternalData?.()}},Jd=e=>{let t=Dt(),n=Xd.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[r,s,i,a,o]=n;a&&(o&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),s.forEach((e=>t._OrtFree(e))),i.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),Xd.delete(e)},ec=function(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if(!e)return void t.push(0);let a,o,l=Dt(),u=e[0],d=e[1],c=e[3];if("string"===u&&("gpu-buffer"===c||"ml-tensor"===c))throw new Error("String tensor is not supported on GPU.");if(i&&"gpu-buffer"!==c)throw new Error(`External buffer must be provided for input/output index ${s} when enableGraphCapture is true.`);if("gpu-buffer"===c){let t=e[2].gpuBuffer;o=Xt(Ht(u),d);let n=l.jsepRegisterBuffer;if(!n)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');a=n(r,s,t,o)}else if("ml-tensor"===c){let t=e[2].mlTensor;o=Xt(Ht(u),d);let n=l.jsepRegisterMLTensor;if(!n)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');a=n(t,Ht(u),d)}else{let t=e[2];if(Array.isArray(t)){o=4*t.length,a=l._malloc(o),n.push(a);let e=a/4;for(let r=0;r<t.length;r++){if("string"!=typeof t[r])throw new TypeError(`tensor data at index ${r} is not a string`);l.HEAPU32[e++]=Lt(t[r],n)}}else o=t.byteLength,a=l._malloc(o),n.push(a),l.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),a)}let p=l.stackSave(),h=l.stackAlloc(4*d.length);try{let e=h/4;d.forEach((t=>l.HEAP32[e++]=t));let n=l._OrtCreateTensor(Ht(u),a,o,h,d.length,en(c));0===n&&Nt(`Can't create tensor for input/output. session=${r}, index=${s}.`),t.push(n)}finally{l.stackRestore(p)}},tc=async(e,t,n,r,s,i)=>{let a=Dt(),o=Xd.get(e);if(!o)throw new Error(`cannot run inference. invalid session id: ${e}`);let l=o[0],u=o[1],d=o[2],c=o[3],p=o[4],h=o[5],f=t.length,m=r.length,g=0,_=[],w=[],y=[],b=[],v=a.stackSave(),x=a.stackAlloc(4*f),$=a.stackAlloc(4*f),k=a.stackAlloc(4*m),E=a.stackAlloc(4*m);try{a.jsepOnRunStart?.(l),[g,_]=Ut(i);for(let r=0;r<f;r++)ec(n[r],w,b,e,t[r],p);for(let t=0;t<m;t++)ec(s[t],y,b,e,f+r[t],p);let o,v=x/4,S=$/4,C=k/4,A=E/4;for(let e=0;e<f;e++)a.HEAPU32[v++]=w[e],a.HEAPU32[S++]=u[t[e]];for(let e=0;e<m;e++)a.HEAPU32[C++]=y[e],a.HEAPU32[A++]=d[r[e]];if(c&&!h){let{handle:n,outputPreferredLocations:i,outputPreferredLocationsEncoded:o}=c;if(u.length!==f)throw new Error(`input count from feeds (${f}) is expected to be always equal to model's input count (${u.length}).`);for(let r=0;r<f;r++){let s=t[r];0!==await a._OrtBindInput(n,u[s],w[r])&&Nt(`Can't bind input[${r}] for session=${e}.`)}for(let t=0;t<m;t++){let l=r[t];s[t]?.[3]?0!==a._OrtBindOutput(n,d[l],y[t],0)&&Nt(`Can't bind pre-allocated output[${t}] for session=${e}.`):0!==a._OrtBindOutput(n,d[l],0,o[l])&&Nt(`Can't bind output[${t}] to ${i[t]} for session=${e}.`)}Xd.set(e,[l,u,d,c,p,!0])}o=c?await a._OrtRunWithBinding(l,c.handle,m,k,g):await a._OrtRun(l,$,x,f,E,m,k,g),0!==o&&Nt("failed to call OrtRun().");let T=[];for(let e=0;e<m;e++){let t=a.HEAPU32[k/4+e];if(t===y[e]){T.push(s[e]);continue}let n,i=a.stackSave(),o=a.stackAlloc(16),l=!1,u=0;try{0!==a._OrtGetTensorData(t,o,o+4,o+8,o+12)&&Nt(`Can't access output tensor data on index ${e}.`);let s=o/4,i=a.HEAPU32[s++];u=a.HEAPU32[s++];let d=a.HEAPU32[s++],p=a.HEAPU32[s++],h=[];for(let e=0;e<p;e++)h.push(a.HEAPU32[d/4+e]);a._OrtFree(d);let f=h.reduce(((e,t)=>e*t),1);n=Kt(i);let m=c?.outputPreferredLocations[r[e]];if("string"===n){if("gpu-buffer"===m||"ml-tensor"===m)throw new Error("String tensor is not supported on GPU.");let e=[],t=u/4;for(let n=0;n<f;n++){let r=a.HEAPU32[t++],s=n===f-1?void 0:a.HEAPU32[t]-r;e.push(a.UTF8ToString(r,s))}T.push([n,h,e,"cpu"])}else if("gpu-buffer"===m&&f>0){let e=a.jsepGetBuffer;if(!e)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let r=e(u),s=Xt(i,f);if(void 0===s||!Zt(n))throw new Error(`Unsupported data type: ${n}`);l=!0,T.push([n,h,{gpuBuffer:r,download:a.jsepCreateDownloader(r,s,n),dispose:()=>{a._OrtReleaseTensor(t)}},"gpu-buffer"])}else if("ml-tensor"===m&&f>0){let e=a.jsepEnsureTensor;if(!e)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(void 0===Xt(i,f)||!Jt(n))throw new Error(`Unsupported data type: ${n}`);let r=await e(u,i,h,!1);l=!0,T.push([n,h,{mlTensor:r,download:a.jsepCreateMLTensorDownloader(u,n),dispose:()=>{a.jsepReleaseTensorId(u),a._OrtReleaseTensor(t)}},"ml-tensor"])}else{let e=new(Yt(n))(f);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(a.HEAPU8.subarray(u,u+e.byteLength)),T.push([n,h,e,"cpu"])}}finally{a.stackRestore(i),"string"===n&&u&&a._free(u),l||a._OrtReleaseTensor(t)}}return c&&!p&&(a._OrtClearBoundOutputs(c.handle),Xd.set(e,[l,u,d,c,p,!1])),T}finally{a.stackRestore(v),w.forEach((e=>a._OrtReleaseTensor(e))),y.forEach((e=>a._OrtReleaseTensor(e))),b.forEach((e=>a._free(e))),0!==g&&a._OrtReleaseRunOptions(g),_.forEach((e=>a._free(e)))}},nc=e=>{let t=Dt(),n=Xd.get(e);if(!n)throw new Error("invalid session id");let r=n[0],s=t._OrtEndProfiling(r);0===s&&Nt("Can't get an profile file name."),t._OrtFree(s)},rc=e=>{let t=[];for(let n of e){let e=n[2];!Array.isArray(e)&&"buffer"in e&&t.push(e.buffer)}return t}})),Cc=Ue((()=>{ct(),Sc(),Tu(),Au(),sc=()=>!!ue.wasm.proxy&&typeof document<"u",ac=!1,oc=!1,lc=!1,cc=new Map,pc=(e,t)=>{let n=cc.get(e);n?n.push(t):cc.set(e,[t])},hc=()=>{if(ac||!oc||lc||!ic)throw new Error("worker not ready")},fc=e=>{switch(e.data.type){case"init-wasm":ac=!1,e.data.err?(lc=!0,dc[1](e.data.err)):(oc=!0,dc[0]()),uc&&(URL.revokeObjectURL(uc),uc=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=cc.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},mc=async()=>{if(!oc){if(ac)throw new Error("multiple calls to 'initWasm()' detected.");if(lc)throw new Error("previous call to 'initWasm()' failed.");if(ac=!0,sc())return new Promise(((e,t)=>{ic?.terminate(),Ct().then((n=>{let[r,s]=n;try{(ic=s).onerror=e=>t(e),ic.onmessage=fc,dc=[e,t];let n={type:"init-wasm",in:ue};ic.postMessage(n),uc=r}catch(i){t(i)}}),t)}));try{await Pt(ue.wasm),await Hd(ue),oc=!0}catch(ee){throw lc=!0,ee}finally{ac=!1}}},gc=async e=>{if(sc())return hc(),new Promise(((t,n)=>{pc("init-ep",[t,n]);let r={type:"init-ep",in:{epName:e,env:ue}};ic.postMessage(r)}));await Kd(ue,e)},_c=async e=>sc()?(hc(),new Promise(((t,n)=>{pc("copy-from",[t,n]);let r={type:"copy-from",in:{buffer:e}};ic.postMessage(r,[e.buffer])}))):Qd(e),wc=async(e,t)=>{if(sc()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return hc(),new Promise(((n,r)=>{pc("create",[n,r]);let s={type:"create",in:{model:e,options:{...t}}},i=[];e instanceof Uint8Array&&i.push(e.buffer),ic.postMessage(s,i)}))}return Zd(e,t)},yc=async e=>{if(sc())return hc(),new Promise(((t,n)=>{pc("release",[t,n]);let r={type:"release",in:e};ic.postMessage(r)}));Jd(e)},bc=async(e,t,n,r,s,i)=>{if(sc()){if(n.some((e=>"cpu"!==e[3])))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some((e=>e)))throw new Error("pre-allocated output tensor is not supported for proxy.");return hc(),new Promise(((s,a)=>{pc("run",[s,a]);let o=n,l={type:"run",in:{sessionId:e,inputIndices:t,inputs:o,outputIndices:r,options:i}};ic.postMessage(l,rc(o))}))}return tc(e,t,n,r,s,i)},vc=async e=>{if(sc())return hc(),new Promise(((t,n)=>{pc("end-profiling",[t,n]);let r={type:"end-profiling",in:e};ic.postMessage(r)}));nc(e)}})),Ac=Ue((()=>{ct(),Cc(),Ou(),pt(),Bu(),xc=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},$c=e=>{switch(e[3]){case"cpu":return new Ee(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Zt(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:r,dispose:s}=e[2];return Ee.fromGpuBuffer(n,{dataType:t,dims:e[1],download:r,dispose:s})}case"ml-tensor":{let t=e[0];if(!Jt(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:n,download:r,dispose:s}=e[2];return Ee.fromMLTensor(n,{dataType:t,dims:e[1],download:r,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},kc=class{async fetchModelAndCopyToWasmMemory(e){return _c(await tn(e))}async loadModel(e,t){let n;Ae(),n="string"==typeof e?await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames]=await wc(n,t),Te()}async dispose(){return yc(this.sessionId)}async run(e,t,n){Ae();let r=[],s=[];Object.entries(e).forEach((e=>{let t=e[0],n=e[1],i=this.inputNames.indexOf(t);if(-1===i)throw new Error(`invalid input '${t}'`);r.push(n),s.push(i)}));let i=[],a=[];Object.entries(t).forEach((e=>{let t=e[0],n=e[1],r=this.outputNames.indexOf(t);if(-1===r)throw new Error(`invalid output '${t}'`);i.push(n),a.push(r)}));let o=r.map(((e,t)=>xc(e,(()=>`input "${this.inputNames[s[t]]}"`)))),l=i.map(((e,t)=>e?xc(e,(()=>`output "${this.outputNames[a[t]]}"`)):null)),u=await bc(this.sessionId,s,o,a,l,n),d={};for(let c=0;c<u.length;c++)d[this.outputNames[a[c]]]=i[c]??$c(u[c]);return Te(),d}startProfiling(){}endProfiling(){vc(this.sessionId)}}})),Tc={};je(Tc,{OnnxruntimeWebAssemblyBackend:()=>Ic,initializeFlags:()=>zc,wasmBackend:()=>Mc});var zc,Ic,Mc,Oc=Ue((()=>{ct(),Cc(),Ac(),Au(),zc=()=>{if(("number"!=typeof ue.wasm.initTimeout||ue.wasm.initTimeout<0)&&(ue.wasm.initTimeout=0),!1===ue.wasm.simd&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),"boolean"!=typeof ue.wasm.proxy&&(ue.wasm.proxy=!1),"boolean"!=typeof ue.wasm.trace&&(ue.wasm.trace=!1),"number"!=typeof ue.wasm.numThreads||!Number.isInteger(ue.wasm.numThreads)||ue.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)ue.wasm.numThreads=1;else{let e=typeof navigator>"u"?Ne("node:os").cpus().length:navigator.hardwareConcurrency;ue.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Mc=new(Ic=class{async init(e){zc(),await mc(),await gc(e)}async createInferenceSessionHandler(e,t){let n=new kc;return await n.loadModel(e,t),Promise.resolve(n)}})}));ct(),ct(),ct();var Bc=dt;{let e=(Oc(),Ve(Tc)).wasmBackend;re("webgpu",e,5),re("webnn",e,5),re("cpu",e,10),re("wasm",e,10)}Object.defineProperty(ue.versions,"web",{value:"1.20.0-dev.20241013-72cc72cc21",enumerable:!0});new Map;let Rc="warning";const Pc={wasm:{},webgl:{},webgpu:{},versions:{common:"1.20.0-dev.20240928-1bda91fc57"},set logLevel(e){if(void 0!==e){if("string"!==typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);Rc=e}},get logLevel(){return Rc}};Object.defineProperty(Pc,"logLevel",{enumerable:!0});const Dc=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:r}=t,s=t.norm??{mean:255,bias:0};let i,a;i="number"===typeof s.mean?[s.mean,s.mean,s.mean,s.mean]:[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],a="number"===typeof s.bias?[s.bias,s.bias,s.bias,s.bias]:[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];const o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=n*r,d="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u);let c=4,p=0,h=1,f=2,m=3,g=0,_=u,w=2*u,y=-1;"RGB"===o&&(c=3,p=0,h=1,f=2,m=-1),"RGBA"===l?y=3*u:"RBG"===l?(g=0,w=u,_=2*u):"BGR"===l&&(w=0,_=u,g=2*u);for(let b=0;b<u;b++,p+=c,f+=c,h+=c,m+=c)d[g++]=(e[p]+a[0])/i[0],d[_++]=(e[h]+a[1])/i[1],d[w++]=(e[f]+a[2])/i[2],-1!==y&&-1!==m&&(d[y++]=(e[m]+a[3])/i[3]);return new Uc("float32",d,"RGBA"===l?[1,4,n,r]:[1,3,n,r])},Lc=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Fc=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Nc=!1;class Uc{constructor(e,t,n){let r,s;if((()=>{if(!Nc){Nc=!0;const e="undefined"!==typeof BigInt64Array&&BigInt64Array.from,t="undefined"!==typeof BigUint64Array&&BigUint64Array.from,n="undefined"!==typeof Float16Array&&Float16Array.from;e&&(Lc.set("int64",BigInt64Array),Fc.set(BigInt64Array,"int64")),t&&(Lc.set("uint64",BigUint64Array),Fc.set(BigUint64Array,"uint64")),n?(Lc.set("float16",Float16Array),Fc.set(Float16Array,"float16")):Lc.set("float16",Uint16Array)}})(),"object"===typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{const t=Lc.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if("string"===typeof e)if(r=e,a=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{const n=Lc.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)i=t;else{if(!(t instanceof Uint8ClampedArray))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");i=Uint8Array.from(t)}}else if(a=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",i=Uint8Array.from(e);else{const t=Fc.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===a)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");s=a,this.cpuData=i,this.dataLocation="cpu"}const i=(e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!==typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t})(s);if(this.cpuData&&i!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(i/2)!==this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=i}static async fromImage(e,t){return(async(e,t)=>{const n="undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement,r="undefined"!==typeof ImageData&&e instanceof ImageData,s="undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap,i="string"===typeof e;let a,o=t??{};const l=()=>{if("undefined"!==typeof document)return document.createElement("canvas");if("undefined"!==typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(n){const n=l();n.width=e.width,n.height=e.height;const r=u(n);if(null==r)throw new Error("Can not access image data");{let n=e.height,s=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(n=t.resizedHeight,s=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=n,o.width=s}else o.tensorFormat="RGBA",o.height=n,o.width=s;r.drawImage(e,0,0),a=r.getImageData(0,0,s,n).data}}else{if(!r){if(s){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");const n=l();n.width=e.width,n.height=e.height;const r=u(n);if(null!=r){const t=e.height,n=e.width;return r.drawImage(e,0,0,n,t),a=r.getImageData(0,0,n,t).data,o.height=t,o.width=n,Dc(a,o)}throw new Error("Can not access image data")}if(i)return new Promise(((t,n)=>{const r=l(),s=u(r);if(!e||!s)return n();const i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,s.drawImage(i,0,0,r.width,r.height);const e=s.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(Dc(e.data,o))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let n,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(n=t.resizedHeight,r=t.resizedWidth):(n=e.height,r=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=n,o.width=r,void 0!==t){const t=l();t.width=r,t.height=n;const s=u(t);if(null==s)throw new Error("Can not access image data");s.putImageData(e,0,0),a=s.getImageData(0,0,r,n).data}else a=e.data}}if(void 0!==a)return Dc(a,o);throw new Error("Input data provided is not supported - aborted tensor creation")})(e,t)}static fromTexture(e,t){return((e,t)=>{const{width:n,height:r,download:s,dispose:i}=t;return new Uc({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:s,dispose:i})})(e,t)}static fromGpuBuffer(e,t){return((e,t)=>{const{dataType:n,dims:r,download:s,dispose:i}=t;return new Uc({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:s,dispose:i})})(e,t)}static fromMLTensor(e,t){return((e,t)=>{const{dataType:n,dims:r,download:s,dispose:i}=t;return new Uc({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:r,download:s,dispose:i})})(e,t)}static fromPinnedBuffer(e,t,n){return((e,t,n)=>new Uc({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]}))(e,t,n)}toDataURL(e){return((e,t)=>{const n="undefined"!==typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext("2d");if(null!=r){let s,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[3]):(s=e.dims[3],i=e.dims[2]);const a=void 0!==t?.format?t.format:"RGB",o=t?.norm;let l,u;void 0===o||void 0===o.mean?l=[255,255,255,255]:"number"===typeof o.mean?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],void 0!==o.mean[3]&&(l[3]=o.mean[3])),void 0===o||void 0===o.bias?u=[0,0,0,0]:"number"===typeof o.bias?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],void 0!==o.bias[3]&&(u[3]=o.bias[3]));const d=i*s;let c=0,p=d,h=2*d,f=-1;"RGBA"===a?(c=0,p=d,h=2*d,f=3*d):"RGB"===a?(c=0,p=d,h=2*d):"RBG"===a&&(c=0,h=d,p=2*d);for(let t=0;t<i;t++)for(let n=0;n<s;n++){const s=(e.data[c++]-u[0])*l[0],i=(e.data[p++]-u[1])*l[1],a=(e.data[h++]-u[2])*l[2],o=-1===f?255:(e.data[f++]-u[3])*l[3];r.fillStyle="rgba("+s+","+i+","+a+","+o+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")})(this,e)}toImageData(e){return((e,t)=>{const n="undefined"!==typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(null==n)throw new Error("Can not access image data");{let s,i,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[1],a=e.dims[3]):(s=e.dims[3],i=e.dims[2],a=e.dims[1]);const o=void 0!==t&&void 0!==t.format?t.format:"RGB",l=t?.norm;let u,d;void 0===l||void 0===l.mean?u=[255,255,255,255]:"number"===typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"===typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));const c=i*s;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const p=4;let h=0,f=1,m=2,g=3,_=0,w=c,y=2*c,b=-1;"RGBA"===o?(_=0,w=c,y=2*c,b=3*c):"RGB"===o?(_=0,w=c,y=2*c):"RBG"===o&&(_=0,y=c,w=2*c),r=n.createImageData(s,i);for(let t=0;t<i*s;h+=p,f+=p,m+=p,g+=p,t++)r.data[h]=(e.data[_++]-d[0])*u[0],r.data[f]=(e.data[w++]-d[1])*u[1],r.data[m]=(e.data[y++]-d[2])*u[2],r.data[g]=-1===b?255:(e.data[b++]-d[3])*u[3]}return r})(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return((e,t)=>{switch(e.location){case"cpu":return new Uc(e.type,e.data,t);case"cpu-pinned":return new Uc({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new Uc({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new Uc({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new Uc({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}})(this,e)}}const jc=Uc;const Vc=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),qc=[];let Wc,Gc;const Hc=Symbol.for("onnxruntime");if(Hc in globalThis)Gc=globalThis[Hc];else if(g.IS_NODE_ENV){switch(Gc=Be??Re,process.platform){case"win32":qc.push("dml");break;case"linux":"x64"===process.arch&&qc.push("cuda")}qc.push("cpu"),Wc=["cpu"]}else Gc=r,g.IS_WEBNN_AVAILABLE&&qc.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),g.IS_WEBGPU_AVAILABLE&&qc.push("webgpu"),qc.push("wasm"),Wc=["wasm"];const Kc=Gc.InferenceSession;let Xc=null;async function Yc(e,t){Xc&&await Xc;const n=Kc.create(e,t);return Xc??=n,await n}function Qc(e){return e instanceof Gc.Tensor}const Zc=Gc?.env;function Jc(){return Zc?.wasm?.proxy}Zc?.wasm&&(Zc.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${v.version}/dist/`,Zc.wasm.proxy=!1,"undefined"!==typeof crossOriginIsolated&&crossOriginIsolated||(Zc.wasm.numThreads=1)),Zc?.webgpu&&(Zc.webgpu.powerPreference="high-performance"),v.backends.onnx=Zc;const ep=async(e,t,n)=>{const r=await Yc(new Uint8Array(e),t);return async e=>{const t=Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,n.ort_tensor]}))),s=await r.run(t);return Array.isArray(n)?n.map((e=>new rp(s[e]))):new rp(s[n])}};class tp{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=ep([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=ep([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=ep([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=ep([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=ep([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=ep([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}const np=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class rp{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(){return Qc(arguments.length<=0?void 0:arguments[0])?this.ort_tensor=arguments.length<=0?void 0:arguments[0]:this.ort_tensor=new jc(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2]),new Proxy(this,{get:(e,t)=>{if("string"===typeof t){let n=Number(t);if(Number.isInteger(n))return e._getitem(n)}return e[t]},set:(e,t,n)=>e[t]=n})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const n=t.reduce(((e,t)=>e*t));for(let r=0;r<e;++r)yield this._subarray(r,n,t)}else yield*this.data}_getitem(e){const[t,...n]=this.dims;if(e=up(e,t),n.length>0){const t=n.reduce(((e,t)=>e*t));return this._subarray(e,t,n)}return new rp(this.type,[this.data[e]],n)}indexOf(e){const t=this.data;for(let n=0;n<t.length;++n)if(t[n]==e)return n;return-1}_subarray(e,t,n){const r=e*t,s=(e+1)*t,i="subarray"in this.data?this.data.subarray(r,s):this.data.slice(r,s);return new rp(this.type,i,n)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const n=e.length,r=t.reduce(((e,t)=>e*t));if(n!==r)throw Error(`cannot reshape array of size ${n} into shape (${t})`);let s=e;for(let i=t.length-1;i>=0;i--)s=s.reduce(((e,n)=>{let r=e[e.length-1];return r.length<t[i]?r.push(n):e.push([n]),e}),[[]]);return s[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}map(e){return this.clone().map_(e)}map_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]=e(t[n],n,t);return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]+=e;return this}sub(e){return this.clone().sub_(e)}sub_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]-=e;return this}clone(){return new rp(this.type,this.data.slice(),this.dims.slice())}slice(){const e=[],t=[];for(let o=0;o<this.dims.length;++o){let n=o<0||arguments.length<=o?void 0:arguments[o];if(null===n||void 0===n)t.push([0,this.dims[o]]),e.push(this.dims[o]);else if("number"===typeof n)n=up(n,this.dims[o],o),t.push([n,n+1]);else{if(!Array.isArray(n)||2!==n.length)throw new Error(`Invalid slice: ${n}`);{let[r,s]=n;if(r=null===r?0:up(r,this.dims[o],o,!1),s=null===s?this.dims[o]:up(s,this.dims[o],o,!1),r>s)throw new Error(`Invalid slice: ${n}`);const i=[Math.max(r,0),Math.min(s,this.dims[o])];t.push(i),e.push(i[1]-i[0])}}}const n=t.map((e=>{let[t,n]=e;return n-t})),r=n.reduce(((e,t)=>e*t)),s=this.data,i=new s.constructor(r),a=this.stride();for(let o=0;o<r;++o){let e=0;for(let r=n.length-1,s=o;r>=0;--r){const i=n[r];e+=(s%i+t[r][0])*a[r],s=Math.floor(s/i)}i[o]=s[e]}return new rp(this.type,i,e)}permute(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e,t){const[n,r]=function(e,t,n){const r=new Array(n.length),s=new Array(n.length);for(let o=n.length-1,l=1;o>=0;--o)s[o]=l,r[o]=t[n[o]],l*=r[o];const i=n.map(((e,t)=>s[n.indexOf(t)])),a=new e.constructor(e.length);for(let o=0;o<e.length;++o){let n=0;for(let e=t.length-1,r=o;e>=0;--e)n+=r%t[e]*i[e],r=Math.floor(r/t[e]);a[n]=e[o]}return[a,r]}(e.data,e.dims,t);return new rp(e.type,n,r)}(this,t)}transpose(){return this.permute(...arguments)}sum(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.norm(1,e,t)}norm(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"fro",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if("fro"===e)e=2;else if("string"===typeof e)throw Error(`Unsupported norm: ${e}`);const r=this.data;if(null===t){let t=r.reduce(((t,n)=>t+n**e),0)**(1/e);return new rp(this.type,[t],[])}t=up(t,this.dims.length);const s=this.dims.slice();s[t]=1;const i=new r.constructor(r.length/this.dims[t]);for(let a=0;a<r.length;++a){let n=0;for(let e=this.dims.length-1,r=a,i=1;e>=0;--e){const a=this.dims[e];if(e!==t){n+=r%a*i,i*=s[e]}r=Math.floor(r/a)}i[n]+=r[a]**e}if(1!==e)for(let a=0;a<i.length;++a)i[a]=i[a]**(1/e);return n||s.splice(t,1),new rp(this.type,i,s)}normalize_(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:2,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;t=up(t,this.dims.length);const n=this.norm(e,t,!0),r=this.data,s=n.data;for(let i=0;i<r.length;++i){let e=0;for(let n=this.dims.length-1,r=i,s=1;n>=0;--n){const i=this.dims[n];if(n!==t){e+=r%i*s,s*=this.dims[n]}r=Math.floor(r/i)}r[i]/=s[e]}return this}normalize(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:2,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let n=e.length-1,r=1;n>=0;--n)t[n]=r,r*=e[n];return t}(this.dims)}squeeze(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return new rp(this.type,this.data,op(this.dims,e))}squeeze_(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return this.dims=op(this.dims,e),this}unsqueeze(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return new rp(this.type,this.data,lp(this.dims,e))}unsqueeze_(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return this.dims=lp(this.dims,e),this}flatten_(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;t=(t+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),r=this.dims.slice(e,t+1),s=this.dims.slice(t+1);return this.dims=[...n,r.reduce(((e,t)=>e*t),1),...s],this}flatten(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return this.clone().flatten_(e,t)}view(){let e=-1;for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];for(let i=0;i<n.length;++i)if(-1===n[i]){if(-1!==e)throw new Error("Only one dimension can be inferred");e=i}const s=this.data;if(-1!==e){const t=n.reduce(((t,n,r)=>r!==e?t*n:t),1);n[e]=s.length/t}return new rp(this.type,s,n)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}clamp_(e,t){const n=this.data;for(let r=0;r<n.length;++r)n[r]=Math.min(Math.max(n[r],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(){return hp(this,arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,arguments.length>1&&void 0!==arguments[1]&&arguments[1])}to(e){if(this.type===e)return this;if(!np.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);return new rp(e,np[e].from(this.data),this.dims)}}function sp(e,t){let[n,r]=t;const s=e.dims.at(-3)??1,i=e.dims.at(-2),a=e.dims.at(-1);let o=function(e,t,n){let[r,s,i]=t,[a,o]=n;const l=o/i,u=a/s,d=new e.constructor(a*o*r),c=s*i,p=a*o;for(let h=0;h<a;++h)for(let t=0;t<o;++t){const n=h*o+t,a=(t+.5)/l-.5,f=(h+.5)/u-.5;let m=Math.floor(a),g=Math.floor(f);const _=Math.min(m+1,i-1),w=Math.min(g+1,s-1);m=Math.max(m,0),g=Math.max(g,0);const y=a-m,b=f-g,v=(1-y)*(1-b),x=y*(1-b),$=(1-y)*b,k=y*b,E=g*i,S=w*i,C=E+m,A=E+_,T=S+m,z=S+_;for(let t=0;t<r;++t){const r=t*c;d[t*p+n]=v*e[r+C]+x*e[r+A]+$*e[r+T]+k*e[r+z]}}return d}(e.data,[s,i,a],[n,r]);return new rp(e.type,o,[s,n,r])}async function ip(e){let t,n,{size:r=null,mode:s="bilinear"}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!r)throw new Error("`interpolate_4d` requires a `size` argument.");if(2===r.length)t=[...e.dims.slice(0,2),...r];else if(3===r.length)t=[e.dims[0],...r];else{if(4!==r.length)throw new Error("`size` must be of length 2, 3, or 4.");t=r}if("bilinear"===s)n=await tp.bilinear_interpolate_4d;else{if("bicubic"!==s)throw new Error(`Unsupported mode: ${s}`);n=await tp.bicubic_interpolate_4d}const i=new rp("int64",new BigInt64Array(t.map(BigInt)),[t.length]);return await n({x:e,s:i})}async function ap(e,t){const n=await tp.top_k;return t=null===t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await n({x:e,k:new rp("int64",[BigInt(t)],[1])})}function op(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"===typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,n)=>1!==e||!t.includes(n)))),e}function lp(e,t){return t=up(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function up(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if((!(arguments.length>3&&void 0!==arguments[3])||arguments[3])&&(e<-t||e>=t))throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===n?"":" "+n} with size ${t}`);return e<0&&(e=(e%t+t)%t),e}function dp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;t=up(t,e[0].dims.length);const n=e[0].dims.slice();n[t]=e.reduce(((e,n)=>e+n.dims[t]),0);const r=n.reduce(((e,t)=>e*t),1),s=new e[0].data.constructor(r),i=e[0].type;if(0===t){let t=0;for(const n of e){const e=n.data;s.set(e,t),t+=e.length}}else{let r=0;for(let i=0;i<e.length;++i){const{data:a,dims:o}=e[i];for(let e=0;e<a.length;++e){let i=0;for(let s=o.length-1,a=e,l=1;s>=0;--s){const e=o[s];let u=a%e;s===t&&(u+=r),i+=u*l,l*=n[s],a=Math.floor(a/e)}s[i]=a[e]}r+=o[t]}}return new rp(i,s,n)}function cp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return dp(e.map((e=>e.unsqueeze(t))),t)}function pp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e.data,i=e.dims;if(null===t){const t=s.reduce(((e,t)=>e+t),0)/s.length,r=Math.sqrt(s.reduce(((e,n)=>e+(n-t)**2),0)/(s.length-n)),i=new rp(e.type,[t],[]);return[new rp(e.type,[r],[]),i]}t=up(t,i.length);const a=hp(e,t,r),o=a.data,l=i.slice();l[t]=1;const u=new s.constructor(s.length/i[t]);for(let d=0;d<s.length;++d){let e=0;for(let n=i.length-1,r=d,s=1;n>=0;--n){const a=i[n];if(n!==t){e+=r%a*s,s*=l[n]}r=Math.floor(r/a)}u[e]+=(s[d]-o[e])**2}for(let d=0;d<u.length;++d)u[d]=Math.sqrt(u[d]/(i[t]-n));r||l.splice(t,1);return[new rp(e.type,u,l),a]}function hp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=e.data;if(null===t){const t=r.reduce(((e,t)=>e+t),0);return new rp(e.type,[t/r.length],[])}const s=e.dims;t=up(t,s.length);const i=s.slice();i[t]=1;const a=new r.constructor(r.length/s[t]);for(let o=0;o<r.length;++o){let e=0;for(let n=s.length-1,r=o,a=1;n>=0;--n){const o=s[n];if(n!==t){e+=r%o*a,a*=i[n]}r=Math.floor(r/o)}a[e]+=r[o]}if(1!==s[t])for(let o=0;o<a.length;++o)a[o]=a[o]/s[t];return n||i.splice(t,1),new rp(e.type,a,i)}function fp(e,t,n,r){const s=e.reduce(((e,t)=>e*t),1);return new rp(n,new r(s).fill(t),e)}function mp(e,t){let n,r;if("number"===typeof t)n="float32",r=Float32Array;else{if("bigint"!==typeof t)throw new Error("Unsupported data type: "+typeof t);n="int64",r=BigInt64Array}return fp(e,t,n,r)}function gp(e){return fp(e,1n,"int64",BigInt64Array)}function _p(e){return fp(e.dims,0n,"int64",BigInt64Array)}class wp{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(e,t)=>e>t,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0;this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.extend(t)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const n=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=n}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class yp{constructor(){this.root=bp.default()}extend(e){for(const t of e)this.push(t)}push(e){let t=this.root;for(const n of e){let e=t.children.get(n);void 0===e&&(e=bp.default(),t.children.set(n,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root;if(void 0===t)return;let n="";for(const r of e){if(n+=r,t=t.children.get(r),void 0===t)return;t.isLeaf&&(yield n)}}}class bp{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new bp(!1,new Map)}}class vp{constructor(e,t,n){this.chars=Array.from(e),this.len=this.chars.length,this.bosTokenId=t,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const r=new xp(this.bosTokenId,0,0,0,0),s=new xp(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(s.clone()),this.beginNodes[this.len].push(s),this.endNodes[0].push(r)}insert(e,t,n,r){const s=this.nodes.length,i=new xp(r,s,e,t,n);this.beginNodes[e].push(i),this.endNodes[e+t].push(i),this.nodes.push(i)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let n=0,r=null;for(let s of this.endNodes[t]){const t=s.backtraceScore+e.score;(null===r||t>n)&&(r=s.clone(),n=t)}if(null===r)return[];e.prev=r,e.backtraceScore=n}++t}const n=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let s=r.clone();for(;null!==s.prev;){n.push(s.clone());const e=s.clone();s=e.prev.clone()}return n.reverse(),n}piece(e){return this.chars.slice(e.pos,e.pos+e.length).join("")}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class xp{constructor(e,t,n,r,s){this.tokenId=e,this.nodeId=t,this.pos=n,this.length=r,this.score=s,this.prev=null,this.backtraceScore=0}clone(){const e=new xp(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}var $p=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),kp=Object.freeze({set:$p.Set,for:$p.For,in:$p.In,is:$p.Is,if:$p.If,else:$p.Else,endif:$p.EndIf,elif:$p.ElseIf,endfor:$p.EndFor,and:$p.And,or:$p.Or,not:$p.Not,"not in":$p.NotIn,macro:$p.Macro,endmacro:$p.EndMacro,true:$p.BooleanLiteral,false:$p.BooleanLiteral,none:$p.NullLiteral,True:$p.BooleanLiteral,False:$p.BooleanLiteral,None:$p.NullLiteral}),Ep=class{constructor(e,t){this.value=e,this.type=t}};function Sp(e){return/\w/.test(e)}function Cp(e){return/[0-9]/.test(e)}var Ap=[["{%",$p.OpenStatement],["%}",$p.CloseStatement],["{{",$p.OpenExpression],["}}",$p.CloseExpression],["(",$p.OpenParen],[")",$p.CloseParen],["{",$p.OpenCurlyBracket],["}",$p.CloseCurlyBracket],["[",$p.OpenSquareBracket],["]",$p.CloseSquareBracket],[",",$p.Comma],[".",$p.Dot],[":",$p.Colon],["|",$p.Pipe],["<=",$p.ComparisonBinaryOperator],[">=",$p.ComparisonBinaryOperator],["==",$p.ComparisonBinaryOperator],["!=",$p.ComparisonBinaryOperator],["<",$p.ComparisonBinaryOperator],[">",$p.ComparisonBinaryOperator],["+",$p.AdditiveBinaryOperator],["-",$p.AdditiveBinaryOperator],["*",$p.MultiplicativeBinaryOperator],["/",$p.MultiplicativeBinaryOperator],["%",$p.MultiplicativeBinaryOperator],["=",$p.Equals]],Tp=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);var zp=class{type="Statement"},Ip=class extends zp{constructor(e){super(),this.body=e}type="Program"},Mp=class extends zp{constructor(e,t,n){super(),this.test=e,this.body=t,this.alternate=n}type="If"},Op=class extends zp{constructor(e,t,n,r){super(),this.loopvar=e,this.iterable=t,this.body=n,this.defaultBlock=r}type="For"},Bp=class extends zp{constructor(e,t){super(),this.assignee=e,this.value=t}type="Set"},Rp=class extends zp{constructor(e,t,n){super(),this.name=e,this.args=t,this.body=n}type="Macro"},Pp=class extends zp{type="Expression"},Dp=class extends Pp{constructor(e,t,n){super(),this.object=e,this.property=t,this.computed=n}type="MemberExpression"},Lp=class extends Pp{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},Fp=class extends Pp{constructor(e){super(),this.value=e}type="Identifier"},Np=class extends Pp{constructor(e){super(),this.value=e}type="Literal"},Up=class extends Np{type="NumericLiteral"},jp=class extends Np{type="StringLiteral"},Vp=class extends Np{type="BooleanLiteral"},qp=class extends Np{type="NullLiteral"},Wp=class extends Np{type="ArrayLiteral"},Gp=class extends Np{type="TupleLiteral"},Hp=class extends Np{type="ObjectLiteral"},Kp=class extends Pp{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}type="BinaryExpression"},Xp=class extends Pp{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},Yp=class extends Pp{constructor(e,t){super(),this.iterable=e,this.test=t}type="SelectExpression"},Qp=class extends Pp{constructor(e,t,n){super(),this.operand=e,this.negate=t,this.test=n}type="TestExpression"},Zp=class extends Pp{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},Jp=class extends Pp{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;super(),this.start=e,this.stop=t,this.step=n}type="SliceExpression"},eh=class extends Pp{constructor(e,t){super(),this.key=e,this.value=t}type="KeywordArgumentExpression"};function th(e){const t=new Ip([]);let n=0;function r(t,r){const s=e[n++];if(!s||s.type!==t)throw new Error(`Parser Error: ${r}. ${s.type} !== ${t}.`);return s}function s(){switch(e[n].type){case $p.Text:return new jp(r($p.Text,"Expected text token").value);case $p.OpenStatement:return function(){let t;switch(r($p.OpenStatement,"Expected opening statement token"),e[n].type){case $p.Set:++n,t=o(),r($p.CloseStatement,"Expected closing statement token");break;case $p.If:++n,t=l(),r($p.OpenStatement,"Expected {% token"),r($p.EndIf,"Expected endif token"),r($p.CloseStatement,"Expected %} token");break;case $p.Macro:++n,t=function(){const e=v();if("Identifier"!==e.type)throw new SyntaxError("Expected identifier following macro statement");const t=_();r($p.CloseStatement,"Expected closing statement token");const n=[];for(;i($p.OpenStatement,$p.EndMacro);)n.push(s());return new Rp(e,t,n)}(),r($p.OpenStatement,"Expected {% token"),r($p.EndMacro,"Expected endmacro token"),r($p.CloseStatement,"Expected %} token");break;case $p.For:++n,t=function(){const e=u(!0);if(!(e instanceof Fp||e instanceof Gp))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);r($p.In,"Expected `in` keyword following loop variable");const t=d();r($p.CloseStatement,"Expected closing statement token");const o=[];for(;i($p.OpenStatement,$p.EndFor)&&i($p.OpenStatement,$p.Else);)o.push(s());const l=[];if(a($p.OpenStatement,$p.Else))for(++n,++n,r($p.CloseStatement,"Expected closing statement token");i($p.OpenStatement,$p.EndFor);)l.push(s());return new Op(e,t,o,l)}(),r($p.OpenStatement,"Expected {% token"),r($p.EndFor,"Expected endfor token"),r($p.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${e[n].type}`)}return t}();case $p.OpenExpression:return function(){r($p.OpenExpression,"Expected opening expression token");const e=d();return r($p.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[n].type}`)}}function i(){for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];return n+r.length<=e.length&&r.some(((t,r)=>t!==e[n+r].type))}function a(){for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];return n+r.length<=e.length&&r.every(((t,r)=>t===e[n+r].type))}function o(){const e=d();if(a($p.Equals)){++n;const t=o();return new Bp(e,t)}return e}function l(){const t=d();r($p.CloseStatement,"Expected closing statement token");const i=[],o=[];for(;e[n]?.type!==$p.OpenStatement||e[n+1]?.type!==$p.ElseIf&&e[n+1]?.type!==$p.Else&&e[n+1]?.type!==$p.EndIf;)i.push(s());if(e[n]?.type===$p.OpenStatement&&e[n+1]?.type!==$p.EndIf)if(++n,a($p.ElseIf))r($p.ElseIf,"Expected elseif token"),o.push(l());else for(r($p.Else,"Expected else token"),r($p.CloseStatement,"Expected closing statement token");e[n]?.type!==$p.OpenStatement||e[n+1]?.type!==$p.EndIf;)o.push(s());return new Mp(t,i,o)}function u(){const e=arguments.length>0&&void 0!==arguments[0]&&arguments[0]?v:d,t=[e()],r=a($p.Comma);for(;r&&(++n,t.push(e()),a($p.Comma)););return r?new Gp(t):t[0]}function d(){return function(){const e=c();if(a($p.If)){++n;const t=c();if(a($p.Else)){++n;const r=c();return new Mp(t,[e],[r])}return new Yp(e,t)}return e}()}function c(){let t=p();for(;a($p.Or);){const r=e[n];++n;const s=p();t=new Kp(r,t,s)}return t}function p(){let t=h();for(;a($p.And);){const r=e[n];++n;const s=h();t=new Kp(r,t,s)}return t}function h(){let t;for(;a($p.Not);){const r=e[n];++n;const s=h();t=new Zp(r,s)}return t??function(){let t=f();for(;a($p.ComparisonBinaryOperator)||a($p.In)||a($p.NotIn);){const r=e[n];++n;const s=f();t=new Kp(r,t,s)}return t}()}function f(){let t=y();for(;a($p.AdditiveBinaryOperator);){const r=e[n];++n;const s=y();t=new Kp(r,t,s)}return t}function m(){const t=function(){let t=v();for(;a($p.Dot)||a($p.OpenSquareBracket);){const s=e[n];let i;++n;const a=s.type!==$p.Dot;if(a)i=w(),r($p.CloseSquareBracket,"Expected closing square bracket");else if(i=v(),"Identifier"!==i.type)throw new SyntaxError("Expected identifier following dot operator");t=new Dp(t,i,a)}return t}();return a($p.OpenParen)?g(t):t}function g(e){let t=new Lp(e,_());return a($p.OpenParen)&&(t=g(t)),t}function _(){r($p.OpenParen,"Expected opening parenthesis for arguments list");const e=function(){const e=[];for(;!a($p.CloseParen);){let t=d();if(a($p.Equals)){if(++n,!(t instanceof Fp))throw new SyntaxError("Expected identifier for keyword argument");const e=d();t=new eh(t,e)}e.push(t),a($p.Comma)&&++n}return e}();return r($p.CloseParen,"Expected closing parenthesis for arguments list"),e}function w(){const e=[];let t=!1;for(;!a($p.CloseSquareBracket);)a($p.Colon)?(e.push(void 0),++n,t=!0):(e.push(d()),a($p.Colon)&&(++n,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new Jp(...e)}return e[0]}function y(){let t=b();for(;a($p.MultiplicativeBinaryOperator);){const r=e[n];++n;const s=b();t=new Kp(r,t,s)}return t}function b(){let e=function(){let e=m();for(;a($p.Pipe);){++n;let t=v();if(!(t instanceof Fp))throw new SyntaxError("Expected identifier for the filter");a($p.OpenParen)&&(t=g(t)),e=new Xp(e,t)}return e}();for(;a($p.Is);){++n;const t=a($p.Not);t&&++n;let r=v();if(r instanceof Vp?r=new Fp(r.value.toString()):r instanceof qp&&(r=new Fp("none")),!(r instanceof Fp))throw new SyntaxError("Expected identifier for the test");e=new Qp(e,t,r)}return e}function v(){const t=e[n];switch(t.type){case $p.NumericLiteral:return++n,new Up(Number(t.value));case $p.StringLiteral:return++n,new jp(t.value);case $p.BooleanLiteral:return++n,new Vp("true"===t.value.toLowerCase());case $p.NullLiteral:return++n,new qp(null);case $p.Identifier:return++n,new Fp(t.value);case $p.OpenParen:{++n;const t=u();if(e[n].type!==$p.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${e[n].type} instead`);return++n,t}case $p.OpenSquareBracket:{++n;const e=[];for(;!a($p.CloseSquareBracket);)e.push(d()),a($p.Comma)&&++n;return++n,new Wp(e)}case $p.OpenCurlyBracket:{++n;const e=new Map;for(;!a($p.CloseCurlyBracket);){const t=d();r($p.Colon,"Expected colon between key and value in object literal");const s=d();e.set(t,s),a($p.Comma)&&++n}return++n,new Hp(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;n<e.length;)t.body.push(s());return t}function nh(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;void 0===t&&(t=e,e=0);const r=[];for(let s=e;s<t;s+=n)r.push(s);return r}function rh(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const s=Math.sign(r);s>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),n=(n??=e.length)<0?Math.max(e.length+n,0):Math.min(n,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),n=(n??=-1)<-1?Math.max(e.length+n,-1):Math.min(n,e.length-1));const i=[];for(let a=t;s*a<s*n;a+=r)i.push(e[a]);return i}function sh(e){return e.replace(/\b\w/g,(e=>e.toUpperCase()))}var ih=class{type="RuntimeValue";value;builtins=(()=>new Map)();constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;this.value=e}__bool__(){return new lh(!!this.value)}},ah=class extends ih{type="NumericValue"},oh=class extends ih{type="StringValue";builtins=(()=>new Map([["upper",new hh((()=>new oh(this.value.toUpperCase())))],["lower",new hh((()=>new oh(this.value.toLowerCase())))],["strip",new hh((()=>new oh(this.value.trim())))],["title",new hh((()=>new oh(sh(this.value))))],["length",new ah(this.value.length)],["rstrip",new hh((()=>new oh(this.value.trimEnd())))],["lstrip",new hh((()=>new oh(this.value.trimStart())))]]))()},lh=class extends ih{type="BooleanValue"},uh=class extends ih{type="ObjectValue";__bool__(){return new lh(this.value.size>0)}builtins=(()=>new Map([["get",new hh((e=>{let[t,n]=e;if(!(t instanceof oh))throw new Error(`Object key must be a string: got ${t.type}`);return this.value.get(t.value)??n??new fh}))],["items",new hh((()=>new ch(Array.from(this.value.entries()).map((e=>{let[t,n]=e;return new ch([new oh(t),n])})))))]]))()},dh=class extends uh{type="KeywordArgumentsValue"},ch=class extends ih{type="ArrayValue";builtins=(()=>new Map([["length",new ah(this.value.length)]]))();__bool__(){return new lh(this.value.length>0)}},ph=class extends ch{type="TupleValue"},hh=class extends ih{type="FunctionValue"},fh=class extends ih{type="NullValue"},mh=class extends ih{type="UndefinedValue"},gh=class{constructor(e){this.parent=e}variables=(()=>new Map([["namespace",new hh((e=>{if(0===e.length)return new uh(new Map);if(1!==e.length||!(e[0]instanceof uh))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]}))]]))();tests=(()=>new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof hh],["odd",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "odd" to type: ${e.type}`);return e.value%2!==0}],["even",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "even" to type: ${e.type}`);return e.value%2===0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["none",e=>"NullValue"===e.type],["string",e=>"StringValue"===e.type],["number",e=>"NumericValue"===e.type],["integer",e=>"NumericValue"===e.type&&Number.isInteger(e.value)],["iterable",e=>e instanceof ch||e instanceof oh],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value],["eq",(e,t)=>e.value===t.value]]))();set(e,t){return this.declareVariable(e,wh(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new mh}catch{return new mh}}},_h=class{global;constructor(e){this.global=e??new gh}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const n=this.evaluate(e.left,t);switch(e.operator.value){case"and":return n.__bool__().value?this.evaluate(e.right,t):n;case"or":return n.__bool__().value?n:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new lh(n.value==r.value);case"!=":return new lh(n.value!=r.value)}if(n instanceof mh||r instanceof mh)throw new Error("Cannot perform operation on undefined values");if(n instanceof fh||r instanceof fh)throw new Error("Cannot perform operation on null values");if(n instanceof ah&&r instanceof ah)switch(e.operator.value){case"+":return new ah(n.value+r.value);case"-":return new ah(n.value-r.value);case"*":return new ah(n.value*r.value);case"/":return new ah(n.value/r.value);case"%":return new ah(n.value%r.value);case"<":return new lh(n.value<r.value);case">":return new lh(n.value>r.value);case">=":return new lh(n.value>=r.value);case"<=":return new lh(n.value<=r.value)}else if(n instanceof ch&&r instanceof ch){if("+"===e.operator.value)return new ch(n.value.concat(r.value))}else if(r instanceof ch){const t=void 0!==r.value.find((e=>e.value===n.value));switch(e.operator.value){case"in":return new lh(t);case"not in":return new lh(!t)}}if((n instanceof oh||r instanceof oh)&&"+"===e.operator.value)return new oh(n.value.toString()+r.value.toString());if(n instanceof oh&&r instanceof oh)switch(e.operator.value){case"in":return new lh(r.value.includes(n.value));case"not in":return new lh(!r.value.includes(n.value))}if(n instanceof oh&&r instanceof uh)switch(e.operator.value){case"in":return new lh(r.value.has(n.value));case"not in":return new lh(!r.value.has(n.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${n.type} and ${r.type}`)}evaluateArguments(e,t){const n=[],r=new Map;for(const s of e)if("KeywordArgumentExpression"===s.type){const e=s;r.set(e.key.value,this.evaluate(e.value,t))}else{if(r.size>0)throw new Error("Positional arguments must come before keyword arguments");n.push(this.evaluate(s,t))}return[n,r]}evaluateFilterExpression(e,t){const n=this.evaluate(e.operand,t);if("Identifier"===e.filter.type){const t=e.filter;if("tojson"===t.value)return new oh(yh(n));if(n instanceof ch)switch(t.value){case"list":return n;case"first":return n.value[0];case"last":return n.value[n.value.length-1];case"length":return new ah(n.value.length);case"reverse":return new ch(n.value.reverse());case"sort":return new ch(n.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"NumericValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));default:throw new Error(`Unknown ArrayValue filter: ${t.value}`)}else if(n instanceof oh)switch(t.value){case"length":return new ah(n.value.length);case"upper":return new oh(n.value.toUpperCase());case"lower":return new oh(n.value.toLowerCase());case"title":return new oh(sh(n.value));case"capitalize":return new oh(n.value.charAt(0).toUpperCase()+n.value.slice(1));case"trim":return new oh(n.value.trim());case"indent":return new oh(n.value.split("\n").map(((e,t)=>0===t||0===e.length?e:"    "+e)).join("\n"));case"string":return n;default:throw new Error(`Unknown StringValue filter: ${t.value}`)}else{if(n instanceof ah){if("abs"===t.value)return new ah(Math.abs(n.value));throw new Error(`Unknown NumericValue filter: ${t.value}`)}if(n instanceof uh)switch(t.value){case"items":return new ch(Array.from(n.value.entries()).map((e=>{let[t,n]=e;return new ch([new oh(t),n])})));case"length":return new ah(n.value.size);default:throw new Error(`Unknown ObjectValue filter: ${t.value}`)}}throw new Error(`Cannot apply filter "${t.value}" to type: ${n.type}`)}if("CallExpression"===e.filter.type){const r=e.filter;if("Identifier"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const s=r.callee.value;if("tojson"===s){const[,e]=this.evaluateArguments(r.args,t),s=e.get("indent")??new fh;if(!(s instanceof ah||s instanceof fh))throw new Error("If set, indent must be a number");return new oh(yh(n,s.value))}if(n instanceof ch){switch(s){case"selectattr":{if(n.value.some((e=>!(e instanceof uh))))throw new Error("`selectattr` can only be applied to array of objects");if(r.args.some((e=>"StringLiteral"!==e.type)))throw new Error("arguments of `selectattr` must be strings");const[e,s,i]=r.args.map((e=>this.evaluate(e,t)));let a;if(s){const e=t.tests.get(s.value);if(!e)throw new Error(`Unknown test: ${s.value}`);a=e}else a=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t[0].__bool__().value};const o=n.value.filter((t=>{const n=t.value.get(e.value);return!!n&&a(n,i)}));return new ch(o)}case"map":{const[,e]=this.evaluateArguments(r.args,t);if(e.has("attribute")){const t=e.get("attribute");if(!(t instanceof oh))throw new Error("attribute must be a string");const r=e.get("default"),s=n.value.map((e=>{if(!(e instanceof uh))throw new Error("items in map must be an object");return e.value.get(t.value)??r??new mh}));return new ch(s)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${s}`)}if(n instanceof oh){if("indent"===s){const[e,s]=this.evaluateArguments(r.args,t),i=e.at(0)??s.get("width")??new ah(4);if(!(i instanceof ah))throw new Error("width must be a number");const a=e.at(1)??s.get("first")??new lh(!1),o=e.at(2)??s.get("blank")??new lh(!1),l=n.value.split("\n"),u=" ".repeat(i.value),d=l.map(((e,t)=>!a.value&&0===t||!o.value&&0===e.length?e:u+e));return new oh(d.join("\n"))}throw new Error(`Unknown StringValue filter: ${s}`)}throw new Error(`Cannot apply filter "${s}" to type: ${n.type}`)}throw new Error(`Unknown filter: ${e.filter.type}`)}evaluateTestExpression(e,t){const n=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const s=r(n);return new lh(e.negate?!s:s)}evaluateUnaryExpression(e,t){const n=this.evaluate(e.argument,t);if("not"===e.operator.value)return new lh(!n.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let n="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(n+=e.value)}return new oh(n)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[n,r]=this.evaluateArguments(e.args,t);r.size>0&&n.push(new dh(r));const s=this.evaluate(e.callee,t);if("FunctionValue"!==s.type)throw new Error(`Cannot call something that is not a function: got ${s.type}`);return s.value(n,t)}evaluateSliceExpression(e,t,n){if(!(e instanceof ch||e instanceof oh))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,n),s=this.evaluate(t.stop,n),i=this.evaluate(t.step,n);if(!(r instanceof ah||r instanceof mh))throw new Error("Slice start must be numeric or undefined");if(!(s instanceof ah||s instanceof mh))throw new Error("Slice stop must be numeric or undefined");if(!(i instanceof ah||i instanceof mh))throw new Error("Slice step must be numeric or undefined");return e instanceof ch?new ch(rh(e.value,r.value,s.value,i.value)):new oh(rh(Array.from(e.value),r.value,s.value,i.value).join(""))}evaluateMemberExpression(e,t){const n=this.evaluate(e.object,t);let r,s;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(n,e.property,t);r=this.evaluate(e.property,t)}else r=new oh(e.property.value);if(n instanceof uh){if(!(r instanceof oh))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.value.get(r.value)??n.builtins.get(r.value)}else if(n instanceof ch||n instanceof oh)if(r instanceof ah)s=n.value.at(r.value),n instanceof oh&&(s=new oh(n.value.at(r.value)));else{if(!(r instanceof oh))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);s=n.builtins.get(r.value)}else{if(!(r instanceof oh))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.builtins.get(r.value)}return s instanceof ih?s:new mh}evaluateSet(e,t){const n=this.evaluate(e.value,t);if("Identifier"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,n)}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,s=this.evaluate(r.object,t);if(!(s instanceof uh))throw new Error("Cannot assign to member of non-object");if("Identifier"!==r.property.type)throw new Error("Cannot assign to member with non-identifier property");s.value.set(r.property.value,n)}}return new fh}evaluateIf(e,t){const n=this.evaluate(e.test,t);return this.evaluateBlock(n.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const n=new gh(t);let r,s;if("SelectExpression"===e.iterable.type){const t=e.iterable;s=this.evaluate(t.iterable,n),r=t.test}else s=this.evaluate(e.iterable,n);if(!(s instanceof ch))throw new Error(`Expected iterable type in for loop: got ${s.type}`);const i=[],a=[];for(let u=0;u<s.value.length;++u){const t=new gh(n),o=s.value[u];let l;if("Identifier"===e.loopvar.type)l=t=>t.setVariable(e.loopvar.value,o);else{if("TupleLiteral"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if("ArrayValue"!==o.type)throw new Error(`Cannot unpack non-iterable type: ${o.type}`);const n=o;if(t.value.length!==n.value.length)throw new Error(`Too ${t.value.length>n.value.length?"few":"many"} items to unpack`);l=e=>{for(let r=0;r<t.value.length;++r){if("Identifier"!==t.value[r].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[r].type}`);e.setVariable(t.value[r].value,n.value[r])}}}}if(r){l(t);if(!this.evaluate(r,t).__bool__().value)continue}i.push(o),a.push(l)}let o="",l=!0;for(let u=0;u<i.length;++u){const t=new Map([["index",new ah(u+1)],["index0",new ah(u)],["revindex",new ah(i.length-u)],["revindex0",new ah(i.length-u-1)],["first",new lh(0===u)],["last",new lh(u===i.length-1)],["length",new ah(i.length)],["previtem",u>0?i[u-1]:new mh],["nextitem",u<i.length-1?i[u+1]:new mh]]);n.setVariable("loop",new uh(t)),a[u](n);o+=this.evaluateBlock(e.body,n).value,l=!1}if(l){o+=this.evaluateBlock(e.defaultBlock,n).value}return new oh(o)}evaluateMacro(e,t){return t.setVariable(e.name.value,new hh(((t,n)=>{const r=new gh(n);let s;t=t.slice(),"KeywordArgumentsValue"===t.at(-1)?.type&&(s=t.pop());for(let i=0;i<e.args.length;++i){const n=e.args[i],a=t[i];if("Identifier"===n.type){const e=n;if(!a)throw new Error(`Missing positional argument: ${e.value}`);r.setVariable(e.value,a)}else{if("KeywordArgumentExpression"!==n.type)throw new Error(`Unknown argument type: ${n.type}`);{const e=n,t=a??s?.value.get(e.key.value)??this.evaluate(e.value,r);r.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,r)}))),new fh}evaluate(e,t){if(void 0===e)return new mh;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"Macro":return this.evaluateMacro(e,t);case"NumericLiteral":return new ah(Number(e.value));case"StringLiteral":return new oh(e.value);case"BooleanLiteral":return new lh(e.value);case"NullLiteral":return new fh(e.value);case"ArrayLiteral":return new ch(e.value.map((e=>this.evaluate(e,t))));case"TupleLiteral":return new ph(e.value.map((e=>this.evaluate(e,t))));case"ObjectLiteral":{const n=new Map;for(const[r,s]of e.value){const e=this.evaluate(r,t);if(!(e instanceof oh))throw new Error(`Object keys must be strings: got ${e.type}`);n.set(e.value,this.evaluate(s,t))}return new uh(n)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function wh(e){switch(typeof e){case"number":return new ah(e);case"string":return new oh(e);case"boolean":return new lh(e);case"undefined":return new mh;case"object":return null===e?new fh:Array.isArray(e)?new ch(e.map(wh)):new uh(new Map(Object.entries(e).map((e=>{let[t,n]=e;return[t,wh(n)]}))));case"function":return new hh(((t,n)=>wh(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function yh(e,t,n){const r=n??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const n=t?" ".repeat(t):"",s="\n"+n.repeat(r),i=s+n;if("ArrayValue"===e.type){const n=e.value.map((e=>yh(e,t,r+1)));return t?`[${i}${n.join(`,${i}`)}${s}]`:`[${n.join(", ")}]`}{const n=Array.from(e.value.entries()).map((e=>{let[n,s]=e;const a=`"${n}": ${yh(s,t,r+1)}`;return t?`${i}${a}`:a}));return t?`{${n.join(",")}${s}}`:`{${n.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var bh=class{parsed;constructor(e){const t=function(e){const t=[],n=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e.endsWith("\n")&&(e=e.slice(0,-1)),e=e.replace(/{#.*?#}/gs,"{##}"),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%]})\n/g,"$1")),e.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:{});let r=0;const s=e=>{let t="";for(;e(n[r]);)if("\\"!==n[r]){if(t+=n[r++],r>=n.length)throw new SyntaxError("Unexpected end of input")}else{if(++r,r>=n.length)throw new SyntaxError("Unexpected end of input");const e=n[r++],s=Tp.get(e);if(void 0===s)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=s}return t};e:for(;r<n.length;){const e=t.at(-1)?.type;if(void 0===e||e===$p.CloseStatement||e===$p.CloseExpression){let e="";for(;r<n.length&&("{"!==n[r]||"%"!==n[r+1]&&"{"!==n[r+1]);)e+=n[r++];if(e.length>0){t.push(new Ep(e,$p.Text));continue}}s((e=>/\s/.test(e)));const i=n[r];if("-"===i||"+"===i){const e=t.at(-1)?.type;if(e===$p.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${i}`);switch(e){case $p.Identifier:case $p.NumericLiteral:case $p.BooleanLiteral:case $p.NullLiteral:case $p.StringLiteral:case $p.CloseParen:case $p.CloseSquareBracket:break;default:{++r;const e=s(Cp);t.push(new Ep(`${i}${e}`,e.length>0?$p.NumericLiteral:$p.UnaryOperator));continue}}}for(const[s,a]of Ap)if(n.slice(r,r+s.length)===s){t.push(new Ep(s,a)),r+=s.length;continue e}if("'"!==i&&'"'!==i)if(Cp(i)){const e=s(Cp);t.push(new Ep(e,$p.NumericLiteral))}else{if(!Sp(i))throw new SyntaxError(`Unexpected character: ${i}`);{const e=s(Sp),n=Object.hasOwn(kp,e)?kp[e]:$p.Identifier;n===$p.In&&t.at(-1)?.type===$p.Not?(t.pop(),t.push(new Ep("not in",$p.NotIn))):t.push(new Ep(e,n))}}else{++r;const e=s((e=>e!==i));t.push(new Ep(e,$p.StringLiteral)),++r}}return t}(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=th(t)}render(e){const t=new gh;t.set("false",!1),t.set("true",!0),t.set("raise_exception",(e=>{throw new Error(e)})),t.set("range",nh);for(const[n,r]of Object.entries(e))t.set(n,r);return new _h(t).run(this.parsed).value}};const vh=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],xh=new Map(vh),$h=new Map([...vh.map((e=>{let[t,n]=e;return[n,t]})),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);async function kh(e,t){const n=await Promise.all([U(e,"tokenizer.json",!0,t),U(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(n[1].legacy=t.legacy),n}function Eh(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,n]of Bh)t=t.replaceAll(e,n);return new RegExp(t,"gu")}if(void 0!==e.String){const n=E(e.String);return new RegExp(t?n:`(${n})`,"gu")}return console.warn("Unknown pattern type:",e),null}function Sh(e){return new Map(Object.entries(e))}function Ch(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function Ah(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function Th(e){return e.replace(/\p{M}/gu,"")}function zh(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const Ih="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",Mh=new RegExp(`^[${Ih}]+$`,"gu"),Oh=".,!?\u2026\u3002\uff0c\u3001\u0964\u06d4\u060c",Bh=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${Oh}])]+`,` ?[^\\s${Oh}]+`]]);class Rh{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class Ph extends ${constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];switch(e.type){case"WordPiece":return new Dh(e);case"Unigram":return new Lh(e,...n);case"BPE":return new jh(e);default:if(e.vocab)return Array.isArray(e.vocab)?new Lh(e,...n):new Vh(e,...n);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){return e=this.encode(e),this.fuse_unk&&(e=function(e,t,n){const r=[];let s=0;for(;s<e.length;)if(r.push(e[s]),(t.get(e[s])??n)===n)for(;++s<e.length&&(t.get(e[s])??n)===n;)t.get(r.at(-1))!==n&&(r[r.length-1]+=e[s]);else++s;return r}(e,this.tokens_to_ids,this.unk_token_id)),e}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id))}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class Dh extends Ph{constructor(e){super(e),this.tokens_to_ids=Sh(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[t,n]of this.tokens_to_ids)this.vocab[n]=t}encode(e){const t=[];for(const n of e){const e=[...n];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,s=0;const i=[];for(;s<e.length;){let t=e.length,n=null;for(;s<t;){let r=e.slice(s,t).join("");if(s>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){n=r;break}--t}if(null===n){r=!0;break}i.push(n),s=t}r?t.push(this.unk_token):t.push(...i)}return t}}class Lh extends Ph{constructor(e,t){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let r=0;r<n;++r){const t=e.vocab[r];this.vocab[r]=t[0],this.scores[r]=t[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=W(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new yp,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.chars;let n=0;for(;n<t.length;){let r=!1;const s=[],i=t.slice(n).join(""),a=this.trie.commonPrefixSearch(i);for(const t of a){s.push(t);const i=this.tokens_to_ids.get(t),a=this.scores[i],o=I(t);e.insert(n,o,a,i),r||1!==o||(r=!0)}r||e.insert(n,1,this.unk_score,this.unk_token_id),n+=1}}tokenize(e){const t=new vp(e,this.bos_token_id,this.eos_token_id);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const n of e){const e=this.tokenize(n);t.push(...e)}return t}}const Fh=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"\xac".charCodeAt(0)-"\xa1".charCodeAt(0)+1},((e,t)=>t+"\xa1".charCodeAt(0))),...Array.from({length:"\xff".charCodeAt(0)-"\xae".charCodeAt(0)+1},((e,t)=>t+"\xae".charCodeAt(0)))],t=e.slice();let n=0;for(let s=0;s<256;++s)e.includes(s)||(e.push(s),t.push(256+n),n+=1);const r=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,r[t]])))})(),Nh=(Uh=Fh,Object.fromEntries(Object.entries(Uh).map((e=>{let[t,n]=e;return[n,t]}))));var Uh;class jh extends Ph{constructor(e){super(e),this.tokens_to_ids=Sh(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[n,r]of this.tokens_to_ids)this.vocab[r]=n;const t=Array.isArray(e.merges[0]);this.merges=t?e.merges:e.merges.map((e=>e.split(" ",2))),this.bpe_ranks=new Map(this.merges.map(((e,t)=>[JSON.stringify(e),t]))),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let r=[];if(n.length>1){const e=new wp(((e,t)=>e.score<t.score));let t={token:n[0],bias:0,prev:null,next:null},s=t;for(let r=1;r<n.length;++r){const t={bias:r/n.length,token:n[r],prev:s,next:null};s.next=t,this._add_node(e,s),s=t}for(;!e.isEmpty();){const n=e.pop();if(n.deleted||!n.next||n.next.deleted)continue;if(n.deleted=!0,n.next.deleted=!0,n.prev){const e={...n.prev};n.prev.deleted=!0,n.prev=e,e.prev?e.prev.next=e:t=e}const r={token:n.token+n.next.token,bias:n.bias,prev:n.prev,next:n.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let n=t;null!==n;n=n.next)r.push(n.token)}else r=n;if(this.continuing_subword_suffix)for(let s=0;s<r.length-1;++s)r[s]+=this.continuing_subword_suffix;return this.cache.set(e,r),r}_add_node(e,t){const n=this.bpe_ranks.get(JSON.stringify([t.token,t.next.token]));void 0!==n&&(t.score=n+t.bias,e.push(t))}encode(e){const t=[];for(const n of e){if(this.ignore_merges&&this.tokens_to_ids.has(n)){t.push(n);continue}const e=this.bpe(n);for(const n of e)if(this.tokens_to_ids.has(n))t.push(n);else if(this.byte_fallback){const e=Array.from(this.text_encoder.encode(n)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`));e.every((e=>this.tokens_to_ids.has(e)))?t.push(...e):t.push(this.unk_token)}else t.push(this.unk_token)}return t}}class Vh extends Ph{constructor(e,t){super(e),this.tokens_to_ids=Sh(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[n,r]of this.tokens_to_ids)this.vocab[r]=n}encode(e){return e}}class qh extends ${constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new ef(e);case"Precompiled":return new Cf(e);case"Sequence":return new Jh(e);case"Replace":return new Wh(e);case"NFC":return new Gh(e);case"NFKC":return new Hh(e);case"NFKD":return new Kh(e);case"Strip":return new Xh(e);case"StripAccents":return new Yh(e);case"Lowercase":return new Qh(e);case"Prepend":return new Zh(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class Wh extends qh{normalize(e){const t=Eh(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class Gh extends qh{normalize(e){return e=e.normalize("NFC")}}class Hh extends qh{normalize(e){return e=e.normalize("NFKC")}}class Kh extends qh{normalize(e){return e=e.normalize("NFKD")}}class Xh extends qh{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class Yh extends qh{normalize(e){return e=Th(e)}}class Qh extends qh{normalize(e){return e=e.toLowerCase()}}class Zh extends qh{normalize(e){return e=this.config.prepend+e}}class Jh extends qh{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>qh.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class ef extends qh{_tokenize_chinese_chars(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n];zh(r.charCodeAt(0))?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const n of e){const e=n.charCodeAt(0);0===e||65533===e||this._is_control(n)||(/^\s$/.test(n)?t.push(" "):t.push(n))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class tf extends ${static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new nf(e);case"Sequence":return new Af(e);case"Whitespace":return new Tf(e);case"WhitespaceSplit":return new zf(e);case"Metaspace":return new Ef(e);case"ByteLevel":return new rf(e);case"Split":return new sf(e);case"Punctuation":return new af(e);case"Digits":return new of(e);case"Replace":return new If(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e,t))):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class nf extends tf{constructor(e){super(),this.pattern=new RegExp(`[^\\s${Ih}]+|[${Ih}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class rf extends tf{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=Fh,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e);return(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class sf extends tf{constructor(e){super(),this.config=e,this.pattern=Eh(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:function(e,t){const n=[];let r=0;for(const s of e.matchAll(t)){const t=s[0];r<s.index&&n.push(e.slice(r,s.index)),t.length>0&&n.push(t),r=s.index+t.length}return r<e.length&&n.push(e.slice(r)),n}(e,this.pattern)}}class af extends tf{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${Ih}]+|[${Ih}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class of extends tf{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class lf extends ${constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new cf(e);case"ByteLevel":return new pf(e);case"RobertaProcessing":return new df(e);case"BertProcessing":return new uf(e);case"Sequence":return new hf(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e){throw Error("post_process should be implemented in subclass.")}_call(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return this.post_process(e,...n)}}class uf extends lf{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,{add_special_tokens:n=!0}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};n&&(e=C([this.cls],e,[this.sep]));let r=new Array(e.length).fill(0);if(null!==t){const s=n&&this instanceof df?[this.sep]:[],i=n?[this.sep]:[];e=C(e,s,t,i),r=C(r,new Array(t.length+s.length+i.length).fill(1))}return{tokens:e,token_type_ids:r}}}class df extends uf{}class cf extends lf{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,{add_special_tokens:n=!0}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null===t?this.single:this.pair;let s=[],i=[];for(const a of r)"SpecialToken"in a?n&&(s.push(a.SpecialToken.id),i.push(a.SpecialToken.type_id)):"Sequence"in a&&("A"===a.Sequence.id?(s=C(s,e),i=C(i,new Array(e.length).fill(a.Sequence.type_id))):"B"===a.Sequence.id&&(s=C(s,t),i=C(i,new Array(t.length).fill(a.Sequence.type_id))));return{tokens:s,token_type_ids:i}}}class pf extends lf{post_process(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return t&&(e=C(e,t)),{tokens:e}}}class hf extends lf{constructor(e){super(e),this.processors=e.processors.map((e=>lf.fromConfig(e)))}post_process(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(const s of this.processors)if(s instanceof pf){if(e=s.post_process(e).tokens,n){n=s.post_process(n).tokens}}else{const i=s.post_process(e,n,r);e=i.tokens,t=i.token_type_ids}return{tokens:e,token_type_ids:t}}}class ff extends ${constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new yf(e);case"Metaspace":return new Sf(e);case"ByteLevel":return new bf(e);case"Replace":return new mf(e);case"ByteFallback":return new gf(e);case"Fuse":return new _f(e);case"Strip":return new wf(e);case"Sequence":return new xf(e);case"CTC":return new vf(e);case"BPEDecoder":return new $f(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class mf extends ff{decode_chain(e){const t=Eh(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class gf extends ff{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let n=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)n.push(e);else{if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}t.push(r)}}if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}return t}}class _f extends ff{decode_chain(e){return[e.join("")]}}class wf extends ff{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let r=0;r<this.start&&e[r]===this.content;++r)t=r+1;let n=e.length;for(let r=0;r<this.stop;++r){const t=e.length-r-1;if(e[t]!==this.content)break;n=t}return e.slice(t,n)}))}}class yf extends ff{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=Ah(e)),e)))}}class bf extends ff{constructor(e){super(e),this.byte_decoder=Nh,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),n=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(n)}decode_chain(e){const t=[];let n=[];for(const r of e)void 0!==this.added_tokens.find((e=>e.content===r))?(n.length>0&&(t.push(this.convert_tokens_to_string(n)),n=[]),t.push(r)):n.push(r);return n.length>0&&t.push(this.convert_tokens_to_string(n)),t}}class vf extends ff{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let r=1;r<e.length;++r)e[r]!==t.at(-1)&&t.push(e[r]);let n=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(n=Ah(n).replaceAll(this.word_delimiter_token," ").trim()),n}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class xf extends ff{constructor(e){super(e),this.decoders=e.decoders.map((e=>ff.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class $f extends ff{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,n)=>t.replaceAll(this.suffix,n===e.length-1?"":" ")))}}class kf extends ff{decode_chain(e){let t="";for(let n=1;n<e.length;n+=2)t+=e[n];return[t]}}class Ef extends tf{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e){let{section_index:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(n=this.strRep+n),[n]}}class Sf extends ff{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let n=0;n<e.length;++n){let r=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&0==n&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class Cf extends qh{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("\uff5e")){const t=e.split("\uff5e");e=t.map((e=>e.normalize("NFKC"))).join("\uff5e")}else e=e.normalize("NFKC");return e}}class Af extends tf{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>tf.fromConfig(e)))}pre_tokenize_text(e,t){return this.tokenizers.reduce(((e,n)=>n.pre_tokenize(e,t)),[e])}}class Tf extends tf{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class zf extends tf{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class If extends tf{constructor(e){super(),this.config=e,this.pattern=Eh(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const Mf=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Of(e,t,n,r){for(const s of Object.keys(e)){const i=t-e[s].length,a=n(s),o=new Array(i).fill(a);e[s]="right"===r?C(e[s],o):C(o,e[s])}}function Bf(e,t){for(const n of Object.keys(e))e[n].length=t}class Rf extends ${return_token_type_ids=!1;padding_side="right";constructor(e,t){super(),this._tokenizer_config=t,this.normalizer=qh.fromConfig(e.normalizer),this.pre_tokenizer=tf.fromConfig(e.pre_tokenizer),this.model=Ph.fromConfig(e.model,t),this.post_processor=lf.fromConfig(e.post_processor),this.decoder=ff.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const n of e.added_tokens){const e=new Rh(n);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort(((e,t)=>t.content.length-e.content.length)).map((e=>`${e.lstrip?"\\s*":""}(${E(e.content)})${e.rstrip?"\\s*":""}`)).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,t.padding_side&&(this.padding_side=t.padding_side),this.legacy=!1,this.chat_template=t.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:n}of this.chat_template){if("string"!==typeof t||"string"!==typeof n)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=n}this.chat_template=e}this._compiled_template_cache=new Map}getToken(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(const r of t){const e=this._tokenizer_config[r];if(e){if("object"===typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e){let{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main",legacy:a=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new this(...await kh(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i,legacy:a}))}_call(e){let{text_pair:t=null,add_special_tokens:n=!0,padding:r=!1,truncation:s=null,max_length:i=null,return_tensor:a=!0,return_token_type_ids:o=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const l=Array.isArray(e);let u;if(l){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");u=e.map(((e,r)=>this._encode_plus(e,{text_pair:t[r],add_special_tokens:n,return_token_type_ids:o})))}else u=e.map((e=>this._encode_plus(e,{add_special_tokens:n,return_token_type_ids:o})))}else{if(null===e||void 0===e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");u=[this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:o})]}if(null===i?i="max_length"===r?this.model_max_length:G(u.map((e=>e.input_ids.length)))[0]:s||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),i=Math.min(i,this.model_max_length??1/0),r||s)for(let c=0;c<u.length;++c)u[c].input_ids.length!==i&&(u[c].input_ids.length>i?s&&Bf(u[c],i):r&&Of(u[c],i,(e=>"input_ids"===e?this.pad_token_id:0),this.padding_side));const d={};if(a){if((!r||!s)&&u.some((e=>{for(const t of Object.keys(e))if(e[t].length!==u[0][t]?.length)return!0;return!1})))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[u.length,u[0].input_ids.length];for(const t of Object.keys(u[0]))d[t]=new rp("int64",BigInt64Array.from(u.flatMap((e=>e[t])).map(BigInt)),e)}else{for(const e of Object.keys(u[0]))d[e]=u.map((t=>t[e]));if(!l)for(const e of Object.keys(d))d[e]=d[e][0]}return d}_encode_text(e){if(null===e)return null;const t=(this.added_tokens_regex?e.split(this.added_tokens_regex).filter((e=>e)):[e]).map(((e,t)=>{if(void 0!==this.added_tokens.find((t=>t.content===e)))return e;{if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return Th(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const n=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(n)}})).flat();return t}_encode_plus(e){let{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{tokens:s,token_type_ids:i}=this._tokenize_helper(e,{pair:t,add_special_tokens:n}),a=this.model.convert_tokens_to_ids(s),o={input_ids:a,attention_mask:new Array(a.length).fill(1)};return(r??this.return_token_type_ids)&&i&&(o.token_type_ids=i),o}_tokenize_helper(e){let{pair:t=null,add_special_tokens:n=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=this._encode_text(e),s=this._encode_text(t);return this.post_processor?this.post_processor(r,s,{add_special_tokens:n}):{tokens:C(r??[],s??[])}}tokenize(e){let{pair:t=null,add_special_tokens:n=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this._tokenize_helper(e,{pair:t,add_special_tokens:n}).tokens}encode(e){let{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:r}).input_ids}batch_decode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e instanceof rp&&(e=e.tolist()),e.map((e=>this.decode(e,t)))}decode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(e instanceof rp&&(e=Ch(e)),!Array.isArray(e)||0===e.length||(n=e[0],!Number.isInteger(n)&&"bigint"!==typeof n))throw Error("token_ids must be a non-empty array of integers.");var n;return this.decode_single(e,t)}decode_single(e,t){let{skip_special_tokens:n=!1,clean_up_tokenization_spaces:r=null}=t,s=this.model.convert_ids_to_tokens(e);n&&(s=s.filter((e=>!this.special_tokens.includes(e))));let i=this.decoder?this.decoder(s):s.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(i=i.replaceAll(this.decoder.end_of_word_suffix," "),n&&(i=i.trim())),(r??this.clean_up_tokenization_spaces)&&(i=Ah(i)),i}get_chat_template(){let{chat_template:e=null,tools:t=null}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this.chat_template&&"object"===typeof this.chat_template){const n=this.chat_template;if(null!==e&&Object.hasOwn(n,e))e=n[e];else if(null===e)if(null!==t&&"tool_use"in n)e=n.tool_use;else{if(!("default"in n))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(n).sort()}.`);e=n.default}}else if(null===e){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");e=this.chat_template}return e}apply_chat_template(e){let{tools:t=null,documents:n=null,chat_template:r=null,add_generation_prompt:s=!1,tokenize:i=!0,padding:a=!1,truncation:o=!1,max_length:l=null,return_tensor:u=!0,return_dict:d=!1,tokenizer_kwargs:c={},...p}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(r=this.get_chat_template({chat_template:r,tools:t}),"string"!==typeof r)throw Error("chat_template must be a string, but got "+typeof r);let h=this._compiled_template_cache.get(r);void 0===h&&(h=new bh(r),this._compiled_template_cache.set(r,h));const f=Object.create(null);for(const g of Mf){const e=this.getToken(g);e&&(f[g]=e)}const m=h.render({messages:e,add_generation_prompt:s,tools:t,documents:n,...f,...p});if(i){const e=this._call(m,{add_special_tokens:!1,padding:a,truncation:o,max_length:l,return_tensor:u,...c});return d?e:e.input_ids}return m}}class Pf extends Rf{return_token_type_ids=!0}class Df extends Rf{return_token_type_ids=!0}class Lf extends Rf{return_token_type_ids=!0}class Ff extends Rf{return_token_type_ids=!0}class Nf extends Rf{return_token_type_ids=!0}class Uf extends Rf{return_token_type_ids=!0}class jf extends Rf{return_token_type_ids=!0}class Vf extends Rf{return_token_type_ids=!0}class qf extends Rf{return_token_type_ids=!0}class Wf extends Rf{}class Gf extends Rf{}class Hf extends Rf{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Kf extends Rf{return_token_type_ids=!0}class Xf extends Rf{}class Yf extends Rf{}class Qf extends Rf{}class Zf extends Rf{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return hm(this,e,t,n)}}class Jf extends Zf{}class em extends Rf{}class tm extends Rf{}const nm="\u2581";class rm extends Rf{padding_side="left";constructor(e,t){super(e,t),this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Ef({replacement:nm,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(nm+e.replaceAll(nm," "));return t.length>1&&t[0]===nm&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}}class sm extends Rf{}class im extends Rf{}class am extends Rf{}class om extends Rf{}class lm extends Rf{}class um extends Rf{}class dm extends Rf{}class cm extends Rf{}class pm extends Rf{}function hm(e,t,n,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e)||!(e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!==typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const s=r.src_lang,i=r.tgt_lang;if(!e.language_codes.includes(i))throw new Error(`Target language code "${i}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==s){if(!e.language_codes.includes(s))throw new Error(`Source language code "${s}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(s);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(i)])[0],e._call(t,n)}class fm extends Rf{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return hm(this,e,t,n)}}class mm extends Rf{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,n){return hm(this,e,t,n)}}class gm extends Rf{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e){let{return_timestamps:t=!1,return_language:n=!1,time_precision:r=null,force_full_sequences:s=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null===r)throw Error("Must specify time_precision");let i=null;const a="word"===t;function o(){return{language:i,timestamp:[null,null],text:""}}const l=[];let u=o(),d=0;const c=this.timestamp_begin;let p=[],h=[],f=!1,m=null;const g=new Set(this.all_special_ids);for(const y of e){const e=y.tokens,n=a?y.token_timestamps:null;let s=null,_=c;if("stride"in y){const[t,n,i]=y.stride;if(d-=n,m=t-i,n&&(_=n/r+c),i)for(let a=e.length-1;a>=0;--a){const t=Number(e[a]);if(t>=c){if(null!==s&&(t-c)*r<m)break;s=t}}}let w=[],b=[];for(let m=0;m<e.length;++m){const y=Number(e[m]);if(g.has(y)){const e=this.decode([y]),n=xh.get(e.slice(2,-2));if(void 0!==n){if(null!==i&&n!==i&&!t){p.push(w);const e=this.findLongestCommonSequence(p)[0],t=this.decode(e);u.text=t,l.push(u),p=[],w=[],u=o()}i=u.language=n}}else if(y>=c){const e=Z((y-c)*r+d,2);if(null!==s&&y>=s)f=!0;else if(f||p.length>0&&y<_)f=!1;else if(null===u.timestamp[0])u.timestamp[0]=e;else if(e===u.timestamp[0]);else{u.timestamp[1]=e,p.push(w),a&&h.push(b);const[t,n]=this.findLongestCommonSequence(p,h),r=this.decode(t);u.text=r,a&&(u.words=this.collateWordTimestamps(t,n,i)),l.push(u),p=[],w=[],h=[],b=[],u=o()}}else if(w.push(y),a){let e,t=Z(n[m]+d,2);if(m+1<n.length){e=Z(n[m+1]+d,2);const s=this.decode([y]);Mh.test(s)&&(e=Z(Math.min(t+r,e),2))}else e=null;b.push([t,e])}}if("stride"in y){const[e,t,n]=y.stride;d+=e-n}w.length>0?(p.push(w),a&&h.push(b)):p.every((e=>0===e.length))&&(u=o(),p=[],w=[],h=[],b=[])}if(p.length>0){if(s&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,n]=this.findLongestCommonSequence(p,h),r=this.decode(e);u.text=r,a&&(u.words=this.collateWordTimestamps(e,n,i)),l.push(u)}let _=Object.create(null);const w=l.map((e=>e.text)).join("");if(t||n){for(let e=0;e<l.length;++e){const r=l[e];t||delete r.timestamp,n||delete r.language}if(a){const e=[];for(const t of l)for(const n of t.words)e.push(n);_={chunks:e}}else _={chunks:l}}return[w,_]}findLongestCommonSequence(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=e[0],r=n.length,s=[];const i=Array.isArray(t)&&t.length>0;let a=i?[]:null,o=i?t[0]:null;for(let l=1;l<e.length;++l){const u=e[l];let d=0,c=[r,r,0,0];const p=u.length;for(let e=1;e<r+p;++e){const s=Math.max(0,r-e),a=Math.min(r,r+p-e),h=n.slice(s,a),f=Math.max(0,e-r),m=Math.min(p,e),g=u.slice(f,m);if(h.length!==g.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let _;_=i?h.filter(((e,n)=>e===g[n]&&o[s+n]<=t[l][f+n])).length:h.filter(((e,t)=>e===g[t])).length;const w=_/e+e/1e4;_>1&&w>d&&(d=w,c=[s,a,f,m])}const[h,f,m,g]=c,_=Math.floor((f+h)/2),w=Math.floor((g+m)/2);s.push(...n.slice(0,_)),n=u.slice(w),r=n.length,i&&(a.push(...o.slice(0,_)),o=t[l].slice(w))}return s.push(...n),i?(a.push(...o),[s,a]):[s,[]]}collateWordTimestamps(e,t,n){const[r,s,i]=this.combineTokensIntoWords(e,n),a=[];for(let o=0;o<r.length;++o){const e=i[o];a.push({text:r[o],timestamp:[t[e.at(0)][0],t[e.at(-1)][1]]})}return a}combineTokensIntoWords(e,t){let n,r,s,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"\"'\u201c\xa1\xbf([{-",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"\"'.\u3002,\uff0c!\uff01?\uff1f:\uff1a\u201d)]}\u3001";return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[n,r,s]=this.splitTokensOnUnicode(e):[n,r,s]=this.splitTokensOnSpaces(e),this.mergePunctuations(n,r,s,i,a)}decode(e,t){let n;return t?.decode_with_timestamps?(e instanceof rp&&(e=Ch(e)),n=this.decodeWithTimestamps(e,t)):n=super.decode(e,t),n}decodeWithTimestamps(e,t){const n=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let s=[[]];for(let i of e)if(i=Number(i),i>=r){const e=((i-r)*n).toFixed(2);s.push(`<|${e}|>`),s.push([])}else s[s.length-1].push(i);return s=s.map((e=>"string"===typeof e?e:super.decode(e,t))),s.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),n=[],r=[],s=[];let i=[],a=[],o=0;for(let l=0;l<e.length;++l){const u=e[l];i.push(u),a.push(l);const d=this.decode(i,{decode_with_timestamps:!0});d.includes("\ufffd")&&"\ufffd"!==t[o+d.indexOf("\ufffd")]||(n.push(d),r.push(i),s.push(a),i=[],a=[],o+=d.length)}return[n,r,s]}splitTokensOnSpaces(e){const[t,n,r]=this.splitTokensOnUnicode(e),s=[],i=[],a=[],o=new RegExp(`^[${Ih}]$`,"gu");for(let l=0;l<t.length;++l){const e=t[l],u=n[l],d=r[l],c=u[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),p=e.startsWith(" "),h=e.trim(),f=o.test(h);if(c||p||f||0===s.length)s.push(e),i.push(u),a.push(d);else{const t=s.length-1;s[t]+=e,i[t].push(...u),a[t].push(...d)}}return[s,i,a]}mergePunctuations(e,t,n,r,s){const i=structuredClone(e),a=structuredClone(t),o=structuredClone(n);let l=i.length-2,u=i.length-1;for(;l>=0;)i[l].startsWith(" ")&&r.includes(i[l].trim())?(i[u]=i[l]+i[u],a[u]=C(a[l],a[u]),o[u]=C(o[l],o[u]),i[l]="",a[l]=[],o[l]=[]):u=l,--l;for(l=0,u=1;u<i.length;)!i[l].endsWith(" ")&&s.includes(i[u])?(i[l]+=i[u],a[l]=C(a[l],a[u]),o[l]=C(o[l],o[u]),i[u]="",a[u]=[],o[u]=[]):l=u,++u;return[i.filter((e=>e)),a.filter((e=>e.length>0)),o.filter((e=>e.length>0))]}}class _m extends Rf{}class wm extends Rf{}class ym extends Rf{}class bm extends Rf{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...n]=e.trim().split(this.languageRegex);if(0===n.length)return super._encode_text(t);if(2===n.length){const[e,t]=n;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),C([e],super._encode_text(t))}}}class vm extends Rf{}class xm extends Rf{}class $m extends Rf{}class km extends Rf{}class Em extends Rf{}class Sm extends Rf{constructor(e,t){super(e,t),this.decoder=new kf({})}}class Cm extends Rf{}class Am{static TOKENIZER_CLASS_MAPPING=(()=>({T5Tokenizer:Xf,DistilBertTokenizer:Wf,CamembertTokenizer:Gf,DebertaTokenizer:Nf,DebertaV2Tokenizer:Uf,BertTokenizer:Pf,HerbertTokenizer:jf,ConvBertTokenizer:Vf,RoFormerTokenizer:qf,XLMTokenizer:Hf,ElectraTokenizer:Kf,MobileBertTokenizer:Lf,SqueezeBertTokenizer:Ff,AlbertTokenizer:Df,GPT2Tokenizer:Yf,BartTokenizer:Qf,MBartTokenizer:Zf,MBart50Tokenizer:Jf,RobertaTokenizer:em,WhisperTokenizer:gm,CodeGenTokenizer:_m,CLIPTokenizer:wm,SiglipTokenizer:ym,MarianTokenizer:bm,BloomTokenizer:tm,NllbTokenizer:fm,M2M100Tokenizer:mm,LlamaTokenizer:rm,CodeLlamaTokenizer:sm,XLMRobertaTokenizer:im,MPNetTokenizer:am,FalconTokenizer:om,GPTNeoXTokenizer:lm,EsmTokenizer:um,Wav2Vec2CTCTokenizer:vm,BlenderbotTokenizer:xm,BlenderbotSmallTokenizer:$m,SpeechT5Tokenizer:km,NougatTokenizer:Em,VitsTokenizer:Sm,Qwen2Tokenizer:dm,GemmaTokenizer:cm,Grok1Tokenizer:pm,CohereTokenizer:Cm,PreTrainedTokenizer:Rf}))();static async from_pretrained(e){let{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main",legacy:a=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const[o,l]=await kh(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i,legacy:a}),u=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let d=this.TOKENIZER_CLASS_MAPPING[u];return d||(console.warn(`Unknown tokenizer class "${u}", attempting to construct from base class.`),d=Rf),new d(o,l)}}function Tm(e){const t={};let n={};switch(e.model_type){case"llava":case"paligemma":case"florence2":n=Tm(e.text_config);break;case"moondream1":n=Tm(e.phi_config);break;case"musicgen":n=Tm(e.decoder);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const r=Tm(e.decoder),s="num_decoder_layers"in r,i=z(e,["model_type","is_encoder_decoder"]);return s?(i.num_decoder_layers=r.num_decoder_layers,i.num_decoder_heads=r.num_decoder_heads,i.decoder_hidden_size=r.decoder_hidden_size,i.num_encoder_layers=r.num_encoder_layers,i.num_encoder_heads=r.num_encoder_heads,i.encoder_hidden_size=r.encoder_hidden_size):(i.num_layers=r.num_layers,i.num_heads=r.num_heads,i.hidden_size=r.hidden_size),i}const r={...n,...z(e,["model_type","multi_query","is_encoder_decoder"])};for(const s in t)r[s]=e[t[s]];return r}function zm(e){let{prefix:t="past_key_values"}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n={},r=e.normalized_config;if(r.is_encoder_decoder&&"num_encoder_heads"in r&&"num_decoder_heads"in r){const e=r.encoder_dim_kv??r.encoder_hidden_size/r.num_encoder_heads,s=r.decoder_dim_kv??r.decoder_hidden_size/r.num_decoder_heads,i=[1,r.num_encoder_heads,0,e],a=[1,r.num_decoder_heads,0,s];for(let o=0;o<r.num_decoder_layers;++o)n[`${t}.${o}.encoder.key`]=i,n[`${t}.${o}.encoder.value`]=i,n[`${t}.${o}.decoder.key`]=a,n[`${t}.${o}.decoder.value`]=a}else{const e=r.num_heads,s=r.num_layers,i=r.dim_kv??r.hidden_size/(r.num_attention_heads??e);if("falcon"===r.model_type){const r=[1*e,0,i];for(let e=0;e<s;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=r}else if(r.multi_query){const r=[1*e,0,2*i];for(let e=0;e<s;++e)n[`${t}.${e}.key_value`]=r}else if("bloom"===r.model_type){const r=[1*e,i,0],a=[1*e,0,i];for(let e=0;e<s;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=a}else if("openelm"===r.model_type)for(let r=0;r<s;++r){const s=[1,e[r],0,i];n[`${t}.${r}.key`]=s,n[`${t}.${r}.value`]=s}else{const r=[1,e,0,i];for(let e=0;e<s;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=r}}return n}class Im{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(e){Object.assign(this,e),this.normalized_config=Tm(this)}static async from_pretrained(e){let{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main"}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!n||n instanceof Im||(n=new Im(n));const a=n??await async function(e,t){return await U(e,"config.json",!0,t)}(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i});return new this(a)}}class Mm{static async from_pretrained(){return Im.from_pretrained(...arguments)}}const Om=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"}),Bm=function(){let e;return async function(){if(void 0===e)if(g.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(ee){e=!1}else e=!1;return e}}(),Rm=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),Pm=Object.freeze({[Om.wasm]:Rm.q8}),Dm=Object.freeze({[Rm.fp32]:"",[Rm.fp16]:"_fp16",[Rm.int8]:"_int8",[Rm.uint8]:"_uint8",[Rm.q8]:"_quantized",[Rm.q4]:"_q4",[Rm.q4f16]:"_q4f16",[Rm.bnb4]:"_bnb4"});class Lm extends ${_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class Fm extends ${_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class Nm extends ${constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let n=t;for(const r of this.processors)n=r(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class Um extends Lm{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let n=0;n<e.length;++n)if(1===e[n].length){const e=t[n].data;e.fill(-1/0),e[this.bos_token_id]=0}return t}}class jm extends Lm{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const e=t[n].data;e.fill(-1/0);for(const t of this.eos_token_id)e[t]=0}return t}}class Vm extends Lm{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const e=t[n].data;for(const t of this.begin_suppress_tokens)e[t]=-1/0}return t}}class qm extends Lm{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;if(r[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const s=e[n].slice(this.begin_index),i=s.length>=1&&s[s.length-1]>=this.timestamp_begin,a=s.length<2||s[s.length-2]>=this.timestamp_begin;if(i&&(a?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const o=q(r);Math.log(o.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>G(o.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class Wm extends Lm{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let s=0;s<t+1-this.no_repeat_ngram_size;++s){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[s+n]);n.push(t.map(Number))}const r=new Map;for(const s of n){const e=s.slice(0,s.length-1),t=JSON.stringify(e),n=r.get(t)??[];n.push(s[s.length-1]),r.set(t,n)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n.map(Number)))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=this.calcBannedNgramTokens(e[n]);for(const e of s)r[e]=-1/0}return t}}class Gm extends Lm{constructor(e){super(),this.penalty=e}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;for(const t of e[n]){const e=Number(t);r[e]<0?r[e]*=this.penalty:r[e]/=this.penalty}}return t}}class Hm extends Lm{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class Km extends Lm{constructor(e,t,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,t){for(let n=0;n<e.length;++n){if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}}return t}}class Xm extends Lm{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=e[n];for(const e of this.bad_words_ids){let t=!0;for(let n=1;n<=e.length-1&&e.length<s.length;++n)if(e.at(-n-1)!=s.at(-n)){t=!1;break}t&&(r[e.at(-1)]=-1/0)}}return t}}class Ym extends Lm{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,r=t.slice([0,n],null),s=t.slice([n,t.dims[0]],null);for(let i=0;i<s.data.length;++i)s.data[i]+=(r.data[i]-s.data[i])*this.guidance_scale;return s}}class Qm extends Fm{constructor(e){if(super(),"number"!==typeof e||e<=0){let t=`\`temperature\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=" If you're looking for greedy decoding strategies, set `do_sample=false`.")}this.temperature=e}_call(e,t){const n=t.data;for(let r=0;r<n.length;++r)n[r]/=this.temperature;return t}}class Zm extends Fm{constructor(e){let{filter_value:t=-1/0,min_tokens_to_keep:n=1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=n}}class Jm extends Fm{constructor(e){let{filter_value:t=-1/0,min_tokens_to_keep:n=1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=t}}class eg{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,z(e,Object.getOwnPropertyNames(this)))}}class tg extends ${_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class ng extends ${constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof ng?e=e.criteria:e instanceof tg&&(e=[e]),this.criteria.push(...e)}_call(e,t){const n=new Array(e.length).fill(!1);for(const r of this.criteria){const s=r(e,t);for(let e=0;e<n.length;++e)n[e]||=s[e]}return n}[Symbol.iterator](){return this.criteria.values()}}class rg extends tg{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map((e=>e.length>=this.max_length))}}class sg extends tg{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map((e=>{const t=e.at(-1);return this.eos_token_id.some((e=>t==e))}))}}class ig extends ${constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{let e=t*n;r=r.slice(e,e+n)}return r}randomSelect(e){let t=0;for(let r=0;r<e.length;++r)t+=e[r];let n=Math.random()*t;for(let r=0;r<e.length;++r)if(n-=e[r],n<=0)return r;return 0}static getSampler(e){if(e.do_sample)return new og(e);if(e.num_beams>1)return new lg(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new ag(e)}}class ag extends ig{async sample(e){const t=G(e.data)[1];return[[BigInt(t),0]]}}class og extends ig{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await ap(e,t),s=V(n.data);return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(s);return[r.data[e],Math.log(s[e])]}))}}class lg extends ig{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await ap(e,t),s=V(n.data);return Array.from({length:this.generation_config.num_beams},((e,t)=>[r.data[t],Math.log(s[t])]))}}class ug extends eg{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}const dg=0,cg=1,pg=2,hg=3,fg=4,mg=5,gg=6,_g=7,wg=new Map,yg=new Map,bg=new Map;async function vg(e,t,n){const r=n.config?.["transformers.js_config"]??{};let s=n.device??r.device;s&&"string"!==typeof s&&(s.hasOwnProperty(t)?s=s[t]:(console.warn(`device not specified for "${t}". Using the default device.`),s=null));const i=s??(g.IS_NODE_ENV?"cpu":"wasm"),a=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(!e)return Wc;switch(e){case"auto":return qc;case"gpu":return qc.filter((e=>["webgpu","cuda","dml","webnn-gpu"].includes(e)))}if(qc.includes(e))return[Vc[e]??e];throw new Error(`Unsupported device: "${e}". Should be one of: ${qc.join(", ")}.`)}(i);let o=n.dtype??r.dtype;"string"!==typeof o&&(o&&o.hasOwnProperty(t)?o=o[t]:(o=Pm[i]??Rm.fp32,console.warn(`dtype not specified for "${t}". Using the default dtype (${o}) for this device (${i}).`)));const l=o;if(!Dm.hasOwnProperty(l))throw new Error(`Invalid dtype: ${l}. Should be one of: ${Object.keys(Rm).join(", ")}`);if(l===Rm.fp16&&"webgpu"===i&&!await Bm())throw new Error(`The device (${i}) does not support fp16.`);const u=Dm[l],d=`${n.subfolder??""}/${t}${u}.onnx`,c={...n.session_options};c.executionProviders??=a;const p=r.free_dimension_overrides;p?c.freeDimensionOverrides??=p:i.startsWith("webnn")&&!c.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const h=N(e,d,!0,n),f=n.use_external_data_format??r.use_external_data_format;let m=[];if(f&&(!0===f||"object"===typeof f&&f.hasOwnProperty(t)&&!0===f[t])){if(g.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const r=`${t}${u}.onnx_data`,s=`${n.subfolder??""}/${r}`;m.push(new Promise((async(t,i)=>{const a=await N(e,s,!0,n);t({path:r,data:a})})))}else void 0!==c.externalData&&(m=c.externalData.map((async t=>{if("string"===typeof t.data){const r=await N(e,t.data,!0,n);return{...t,data:r}}return t})));if(m.length>0&&(c.externalData=await Promise.all(m)),"webgpu"===i){const e=zm(n.config,{prefix:"present"});if(Object.keys(e).length>0&&!Jc()){const t={};for(const n in e)t[n]="gpu-buffer";c.preferredOutputLocation=t}}return{buffer:await h,session_options:c}}async function xg(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async r=>{const{buffer:s,session_options:i}=await vg(e,t[r],n);return[r,await Yc(s,i)]}))))}async function $g(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async r=>[r,await U(e,t[r],!1,n)]))))}async function kg(e,t){const n=function(e,t){const n=Object.create(null),r=[];for(const a of e.inputNames){const e=t[a];e instanceof rp?n[a]=Jc()?e.clone():e:r.push(a)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const s=Object.keys(t).length,i=e.inputNames.length;if(s>i){let n=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${s} > ${i}). The following inputs will be ignored: "${n.join(", ")}".`)}return n}(e,t);try{const t=Object.fromEntries(Object.entries(n).map((e=>{let[t,n]=e;return[t,n.ort_tensor]})));let r=await e.run(t);return r=Eg(r),r}catch(ee){throw console.error(`An error occurred during model execution: "${ee}".`),console.error("Inputs given to model:",n),ee}}function Eg(e){for(let t in e)Qc(e[t])?e[t]=new rp(e[t]):"object"===typeof e[t]&&Eg(e[t]);return e}function Sg(e){if(e instanceof rp)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new rp("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new rp("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function Cg(e){return new rp("bool",[e],[1])}async function Ag(e,t){let{encoder_outputs:n,input_ids:r,decoder_input_ids:s,...i}=t;if(!n){const r=z(t,e.sessions.model.inputNames);n=(await Tg(e,r)).last_hidden_state}i.input_ids=s,i.encoder_hidden_states=n,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(i.encoder_attention_mask=t.attention_mask);return await zg(e,i,!0)}async function Tg(e,t){const n=e.sessions.model,r=z(t,n.inputNames);if(n.inputNames.includes("inputs_embeds")&&!r.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}return n.inputNames.includes("token_type_ids")&&!r.token_type_ids&&(r.token_type_ids=new rp("int64",new BigInt64Array(r.input_ids.data.length),r.input_ids.dims)),await kg(n,r)}async function zg(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=e.sessions[n?"decoder_model_merged":"model"],{past_key_values:s,...i}=t;r.inputNames.includes("use_cache_branch")&&(i.use_cache_branch=Cg(!!s)),r.inputNames.includes("position_ids")&&i.attention_mask&&!i.position_ids&&(i.position_ids=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const{input_ids:n,inputs_embeds:r,attention_mask:s}=e,[i,a]=s.dims,o=new BigInt64Array(s.data.length);for(let u=0;u<i;++u){const e=u*a;let t=BigInt(0);for(let n=0;n<a;++n){const r=e+n;0n===s.data[r]?o[r]=BigInt(1):(o[r]=t,t+=s.data[r])}}let l=new rp("int64",o,s.dims);if(t){const e=-(n??r).dims.at(1);l=l.slice(null,[e,null])}return l}(i,s)),e.addPastKeyValues(i,s);const a=z(i,r.inputNames);return await kg(r,a)}async function Ig(e,t){let{input_ids:n=null,attention_mask:r=null,pixel_values:s=null,position_ids:i=null,inputs_embeds:a=null,past_key_values:o=null,generation_config:l=null,logits_processor:u=null,...d}=t;if(!a)if(a=await e.encode_text({input_ids:n}),s&&1!==n.dims[1]){const t=await e.encode_image({pixel_values:s});({inputs_embeds:a,attention_mask:r}=e._merge_input_ids_with_image_features({image_features:t,inputs_embeds:a,input_ids:n,attention_mask:r}))}else if(o&&s&&1===n.dims[1]){const e=n.dims[1],t=Object.values(o)[0].dims.at(-2);r=dp([gp([n.dims[0],t]),r.slice(null,[r.dims[1]-e,r.dims[1]])],1)}return await zg(e,{inputs_embeds:a,past_key_values:o,attention_mask:r,position_ids:i,generation_config:l,logits_processor:u},!0)}function Mg(e,t,n,r){if(n.past_key_values){const t=Object.values(n.past_key_values)[0].dims.at(-2),{input_ids:r,attention_mask:s}=n;if(s&&s.dims[1]>r.dims[1]);else if(t<r.dims[1])n.input_ids=r.slice(null,[t,null]);else if(null!=e.config.image_token_index&&r.data.some((t=>t==e.config.image_token_index))){const s=e.config.num_image_tokens;if(!s)throw new Error("`num_image_tokens` is missing in the model configuration.");const i=r.dims[1]-(t-s);n.input_ids=r.slice(null,[-i,null]),n.attention_mask=gp([1,t+i])}}return n}function Og(e,t,n,r){return n.past_key_values&&(t=t.map((e=>[e.at(-1)]))),{...n,decoder_input_ids:Sg(t)}}function Bg(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return e.config.is_encoder_decoder?Og(e,...n):Mg(e,...n)}class Rg extends ${main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,t,n){super(),this.config=e,this.sessions=t,this.configs=n;const r=bg.get(this.constructor),s=wg.get(r);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,s){case fg:this.can_generate=!0,this._forward=zg,this._prepare_inputs_for_generation=Mg;break;case pg:case hg:case _g:this.can_generate=!0,this._forward=Ag,this._prepare_inputs_for_generation=Og;break;case cg:this._forward=Ag;break;case gg:this.can_generate=!0,this._forward=Ig,this._prepare_inputs_for_generation=Bg;break;default:this._forward=Tg}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await Promise.all(e)}static async from_pretrained(e){let{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main",model_file_name:a=null,subfolder:o="onnx",device:l=null,dtype:u=null,use_external_data_format:d=null,session_options:c={}}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},p={progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i,model_file_name:a,subfolder:o,device:l,dtype:u,use_external_data_format:d,session_options:c};const h=bg.get(this),f=wg.get(h);let m;if(n=p.config=await Mm.from_pretrained(e,p),f===fg)m=await Promise.all([xg(e,{model:p.model_file_name??"model"},p),$g(e,{generation_config:"generation_config.json"},p)]);else if(f===pg||f===hg)m=await Promise.all([xg(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p),$g(e,{generation_config:"generation_config.json"},p)]);else if(f===mg)m=await Promise.all([xg(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},p)]);else if(f===cg)m=await Promise.all([xg(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p)]);else if(f===gg){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};n.is_encoder_decoder&&(t.model="encoder_model"),m=await Promise.all([xg(e,t,p),$g(e,{generation_config:"generation_config.json"},p)])}else f===_g?m=await Promise.all([xg(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},p),$g(e,{generation_config:"generation_config.json"},p)]):(f!==dg&&console.warn(`Model type for '${h??n?.model_type}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),m=await Promise.all([xg(e,{model:p.model_file_name??"model"},p)]));return new this(n,...m)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(e){const t=new Nm;return null!==e.temperature&&1!==e.temperature&&t.push(new Qm(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new Jm(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new Zm(e.top_p)),t}_get_logits_processor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const r=new Nm;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new Gm(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new Wm(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new Xm(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new Hm(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new Km(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new Um(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new jm(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const n=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new Vm(e.begin_suppress_tokens,n))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new Ym(e.guidance_scale)),null!==n&&r.extend(n),r}_prepare_generation_config(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:eg;const r={...this.config};for(const i of["decoder","generator","text_config"])i in r&&Object.assign(r,r[i]);const s=new n(r);return Object.assign(s,this.generation_config??{}),e&&Object.assign(s,e),t&&Object.assign(s,z(t,Object.getOwnPropertyNames(s))),s}_get_stopping_criteria(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const n=new ng;return null!==e.max_length&&n.push(new rg(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&n.push(new sg(e.eos_token_id)),t&&n.extend(t),n}_validate_model_class(){if(!this.can_generate){const e=[sy,oy,ry,Zw],t=bg.get(this.constructor),n=new Set,r=this.config.model_type;for(const i of e){const e=i.get(r);e&&n.add(e[0])}let s=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw n.size>0&&(s+=` Please use the following class instead: ${[...n].join(", ")}`),Error(s)}}prepare_inputs_for_generation(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this._prepare_inputs_for_generation(this,...t)}_update_model_kwargs_for_generation(e){let{generated_input_ids:t,outputs:n,model_inputs:r,is_encoder_decoder:s}=e;return r.past_key_values=this.getPastKeyValues(n,r.past_key_values),r.input_ids=new rp("int64",t.flat(),[t.length,1]),s||(r.attention_mask=dp([r.attention_mask,gp([r.attention_mask.dims[0],1])],1)),r.position_ids=null,r}_prepare_model_inputs(e){let{inputs:t,bos_token_id:n,model_kwargs:r}=e;const s=z(r,this.forward_params),i=this.main_input_name;if(i in s){if(t)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else s[i]=t;return{inputs_tensor:s[i],model_inputs:s,model_input_name:i}}async _prepare_encoder_decoder_kwargs_for_generation(e){let{inputs_tensor:t,model_inputs:n,model_input_name:r,generation_config:s}=e;if(this.sessions.model.inputNames.includes("inputs_embeds")&&!n.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:t,attention_mask:r,...s}=n;n={...s,...z(await this._prepare_inputs_embeds(n),["inputs_embeds","attention_mask"])}}let{last_hidden_state:i}=await Tg(this,n);if(null!==s.guidance_scale&&s.guidance_scale>1)i=dp([i,(a=i,o=0,mp(a.dims,o))],0),"attention_mask"in n&&(n.attention_mask=dp([n.attention_mask,_p(n.attention_mask)],0));else if(n.decoder_input_ids){const e=Sg(n.decoder_input_ids).dims[0];if(e!==i.dims[0]){if(1!==i.dims[0])throw new Error(`The encoder outputs have a different batch size (${i.dims[0]}) than the decoder inputs (${e}).`);i=dp(Array.from({length:e},(()=>i)),0)}}var a,o;return n.encoder_outputs=i,n}_prepare_decoder_input_ids_for_generation(e){let{batch_size:t,model_input_name:n,model_kwargs:r,decoder_start_token_id:s,bos_token_id:i,generation_config:a}=e,{decoder_input_ids:o,...l}=r;if(o)Array.isArray(o[0])||(o=Array.from({length:t},(()=>o)));else if(s??=i,"musicgen"===this.config.model_type)o=Array.from({length:t*this.config.decoder.num_codebooks},(()=>[s]));else if(Array.isArray(s)){if(s.length!==t)throw new Error(`\`decoder_start_token_id\` expcted to have length ${t} but got ${s.length}`);o=s}else o=Array.from({length:t},(()=>[s]));return o=Sg(o),r.decoder_attention_mask=gp(o.dims),{input_ids:o,model_inputs:l}}async generate(e){let{inputs:t=null,generation_config:n=null,logits_processor:r=null,stopping_criteria:s=null,streamer:i=null,...a}=e;this._validate_model_class(),n=this._prepare_generation_config(n,a);let{inputs_tensor:o,model_inputs:l,model_input_name:u}=this._prepare_model_inputs({inputs:t,model_kwargs:a});const d=this.config.is_encoder_decoder;let c;d&&("encoder_outputs"in l||(l=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:o,model_inputs:l,model_input_name:u,generation_config:n}))),d?({input_ids:c,model_inputs:l}=this._prepare_decoder_input_ids_for_generation({batch_size:l[u].dims.at(0),model_input_name:u,model_kwargs:l,decoder_start_token_id:n.decoder_start_token_id,bos_token_id:n.bos_token_id,generation_config:n})):c=l[u];let p=c.dims.at(-1);null!==n.max_new_tokens&&(n.max_length=p+n.max_new_tokens);const h=this._get_logits_processor(n,p,r),f=this._get_stopping_criteria(n,s),m=l[u].dims.at(0),g=ig.getSampler(n),_=new Array(m).fill(0),w=c.tolist();let y;i&&i.put(w);let b={};for(;;){if(l=this.prepare_inputs_for_generation(w,l,n),y=await this.forward(l),n.output_attentions&&n.return_dict_in_generate){const e=this.getAttentions(y);for(const t in e)t in b||(b[t]=[]),b[t].push(e[t])}const e=h(w,y.logits.slice(null,-1,null)),t=[];for(let n=0;n<e.dims.at(0);++n){const r=e[n],s=await g(r);for(const[e,i]of s){const r=BigInt(e);_[n]+=i,w[n].push(r),t.push([r]);break}}i&&i.put(t);if(f(w).every((e=>e)))break;l=this._update_model_kwargs_for_generation({generated_input_ids:t,outputs:y,model_inputs:l,is_encoder_decoder:d})}i&&i.end();const v=this.getPastKeyValues(y,l.past_key_values,!0),x=new rp("int64",w.flat(),[w.length,w[0].length]);if(n.return_dict_in_generate)return{sequences:x,past_key_values:v,...b};for(const $ of Object.values(y))"gpu-buffer"===$.location&&$.dispose();return x}getPastKeyValues(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Object.create(null);for(const s in e)if(s.startsWith("present")){const i=s.replace("present","past_key_values"),a=s.includes("encoder");if(r[i]=a&&t?t[i]:e[s],t&&(!a||n)){const e=t[i];"gpu-buffer"===e.location&&e.dispose()}}return r}getAttentions(e){const t={};for(const n of["cross_attentions","encoder_attentions","decoder_attentions"])for(const r in e)r.startsWith(n)&&(n in t||(t[n]=[]),t[n].push(e[r]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.custom_config.kv_cache_dtype??"float32",n="float16"===t?new Uint16Array:[],r=zm(this.config);for(const s in r)e[s]=new rp(t,n,r[s])}}async encode_image(e){let{pixel_values:t}=e;const n=(await kg(this.sessions.vision_encoder,{pixel_values:t})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${n.dims[1]}).`),this.config.num_image_tokens=n.dims[1]),n}async encode_text(e){let{input_ids:t}=e;return(await kg(this.sessions.embed_tokens,{input_ids:t})).inputs_embeds}}class Pg{}class Dg extends Rg{}class Lg extends Rg{}class Fg extends Rg{}class Ng extends Rg{}class Ug extends Rg{}class jg extends Rg{}class Vg extends Rg{}class qg extends Rg{}class Wg extends Rg{}class Gg extends Rg{}class Hg extends Rg{}class Kg extends Rg{}class Xg extends Rg{}class Yg extends Rg{}class Qg extends Rg{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Zg extends Rg{}class Jg extends Rg{}class e_ extends Rg{}class t_ extends Rg{}class n_ extends Rg{}class r_ extends Rg{}class s_ extends Rg{}class i_ extends Rg{}class a_ extends Rg{}class o_ extends Rg{}class l_ extends Rg{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class u_ extends Rg{main_input_name="pixel_values";forward_params=["pixel_values","input_ids","encoder_hidden_states","past_key_values"]}class d_ extends Rg{forward_params=["input_ids","pixel_values","attention_mask","position_ids","past_key_values"]}class c_ extends d_{_merge_input_ids_with_image_features(e){let{inputs_embeds:t,image_features:n,input_ids:r,attention_mask:s}=e;const i=this.config.image_token_index,a=r.tolist().map((e=>e.findIndex((e=>e==i)))),o=a.every((e=>-1===e)),l=a.every((e=>-1!==e));if(!o&&!l)throw new Error("Every input should contain either 0 or 1 image token.");if(o)return{inputs_embeds:t,attention_mask:s};const u=[],d=[];for(let c=0;c<a.length;++c){const e=a[c],r=t[c],i=n[c],o=s[c];u.push(dp([r.slice([0,e]),i,r.slice([e+1,r.dims[0]])],0)),d.push(dp([o.slice([0,e]),gp([i.dims[0]]),o.slice([e+1,o.dims[0]])],0))}return{inputs_embeds:cp(u,0),attention_mask:cp(d,0)}}}class p_ extends Rg{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class h_ extends p_{_merge_input_ids_with_image_features(e){let{inputs_embeds:t,image_features:n,input_ids:r,attention_mask:s}=e;return{inputs_embeds:dp([n,t],1),attention_mask:dp([gp(n.dims.slice(0,2)),s],1)}}async _prepare_inputs_embeds(e){let t,n,{input_ids:r,pixel_values:s,inputs_embeds:i,attention_mask:a}=e;if(!r&&!s)throw new Error("Either `input_ids` or `pixel_values` should be provided.");return r&&(t=await this.encode_text({input_ids:r})),s&&(n=await this.encode_image({pixel_values:s})),t&&n?({inputs_embeds:i,attention_mask:a}=this._merge_input_ids_with_image_features({inputs_embeds:t,image_features:n,input_ids:r,attention_mask:a})):i=t||n,{inputs_embeds:i,attention_mask:a}}async forward(e){let{input_ids:t,pixel_values:n,attention_mask:r,decoder_input_ids:s,decoder_attention_mask:i,encoder_outputs:a,past_key_values:o,inputs_embeds:l,decoder_inputs_embeds:u}=e;if(l||({inputs_embeds:l,attention_mask:r}=await this._prepare_inputs_embeds({input_ids:t,pixel_values:n,inputs_embeds:l,attention_mask:r})),!a){let{last_hidden_state:e}=await Tg(this,{inputs_embeds:l,attention_mask:r});a=e}if(!u){if(!s)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");u=await this.encode_text({input_ids:s})}const d={inputs_embeds:u,attention_mask:i,encoder_attention_mask:r,encoder_hidden_states:a,past_key_values:o};return await zg(this,d,!0)}}class f_ extends Rg{}class m_ extends Rg{}class g_ extends Rg{}class __ extends Rg{}class w_ extends Rg{}class y_ extends Rg{}class b_ extends Rg{}class v_ extends Rg{}class x_ extends Rg{}class $_ extends Rg{}class k_ extends Rg{}class E_ extends Rg{}class S_ extends Rg{}class C_ extends Rg{}class A_ extends Rg{}class T_ extends Rg{}class z_ extends Rg{}class I_ extends Rg{}class M_ extends Rg{}class O_ extends Rg{}class B_ extends Rg{}class R_ extends Rg{}class P_ extends Rg{}class D_ extends Rg{}class L_ extends Rg{}class F_ extends Rg{}class N_ extends Rg{}class U_ extends Rg{}class j_ extends Rg{}class V_ extends Rg{}class q_ extends Rg{}class W_ extends Rg{}class G_ extends Rg{}class H_ extends Rg{}class K_ extends Rg{}class X_ extends Rg{}class Y_ extends X_{async _call(e){return new Z_(await super._call(e))}}class Q_ extends Pg{constructor(e){let{logits:t,pred_boxes:n}=e;super(),this.logits=t,this.pred_boxes=n}}class Z_ extends Pg{constructor(e){let{logits:t,pred_boxes:n,pred_masks:r}=e;super(),this.logits=t,this.pred_boxes=n,this.pred_masks=r}}class J_ extends Rg{}class ew extends Pg{constructor(e){let{logits:t,pred_boxes:n}=e;super(),this.logits=t,this.pred_boxes=n}}class tw extends Rg{}class nw extends Q_{}class rw extends Rg{}class sw extends Rg{}class iw extends Rg{}class aw extends Rg{}class ow extends Rg{}class lw extends Rg{}class uw extends Rg{}class dw extends Rg{}class cw extends Rg{}class pw extends Rg{}class hw extends Rg{}class fw extends Rg{}class mw extends Rg{}class gw extends Rg{}class _w extends Rg{}class ww extends Rg{}class yw extends Pg{constructor(e){let{logits:t,pred_boxes:n}=e;super(),this.logits=t,this.pred_boxes=n}}class bw extends Rg{}class vw extends Pg{constructor(e){let{iou_scores:t,pred_masks:n}=e;super(),this.iou_scores=t,this.pred_masks=n}}class xw extends Rg{}class $w extends Rg{}class kw extends Rg{}class Ew extends Rg{}class Sw extends Rg{}class Cw extends Rg{}class Aw extends Rg{}class Tw extends Rg{}class zw extends Rg{}class Iw extends Rg{}class Mw extends Rg{}class Ow extends Rg{}class Bw extends Rg{}class Rw extends Rg{}class Pw extends Rg{}class Dw extends Rg{}class Lw extends Dw{async _call(e){return new sb(await super._call(e))}}class Fw extends Rg{}class Nw extends Rg{}class Uw extends Rg{}class jw extends Rg{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(e){const[t,n]=e.dims,r=this.config.decoder.num_codebooks,s=n-r;let i=0;for(let l=0;l<e.size;++l){if(e.data[l]===this.config.decoder.pad_token_id)continue;const t=l%n-Math.floor(l/n)%r;t>0&&t<=s&&(e.data[i++]=e.data[l])}const a=Math.floor(t/r),o=i/(a*r);return new rp(e.type,e.data.slice(0,i),[a,r,o])}prepare_inputs_for_generation(e,t,n){let r=structuredClone(e);for(let s=0;s<r.length;++s)for(let e=0;e<r[s].length;++e)s%this.config.decoder.num_codebooks>=e&&(r[s][e]=BigInt(this.config.decoder.pad_token_id));null!==n.guidance_scale&&n.guidance_scale>1&&(r=r.concat(r));return super.prepare_inputs_for_generation(r,t,n)}async generate(e){const t=await super.generate(e),n=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await kg(this.sessions.encodec_decode,{audio_codes:n});return r}}class Vw extends Rg{}class qw extends Rg{}class Ww extends Rg{}class Gw extends Rg{}class Hw extends Rg{}class Kw{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e){let{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main",model_file_name:a=null,subfolder:o="onnx",device:l=null,dtype:u=null,use_external_data_format:d=null,session_options:c={}}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const p={progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i,model_file_name:a,subfolder:o,device:l,dtype:u,use_external_data_format:d,session_options:c};if(p.config=await Mm.from_pretrained(e,p),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const h of this.MODEL_CLASS_MAPPINGS){const t=h.get(p.config.model_type);if(t)return await t[1].from_pretrained(e,p)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${p.config.model_type}", attempting to construct from base class.`),await Rg.from_pretrained(e,p);throw Error(`Unsupported model type: ${p.config.model_type}`)}}const Xw=new Map([["bert",["BertModel",class extends Dg{}]],["nomic_bert",["NomicBertModel",class extends Lg{}]],["roformer",["RoFormerModel",class extends Fg{}]],["electra",["ElectraModel",class extends Ug{}]],["esm",["EsmModel",class extends Gg{}]],["convbert",["ConvBertModel",class extends Ng{}]],["camembert",["CamembertModel",class extends jg{}]],["deberta",["DebertaModel",class extends Vg{}]],["deberta-v2",["DebertaV2Model",class extends qg{}]],["mpnet",["MPNetModel",class extends Kg{}]],["albert",["AlbertModel",class extends Yg{}]],["distilbert",["DistilBertModel",class extends Wg{}]],["roberta",["RobertaModel",class extends s_{}]],["xlm",["XLMModel",class extends i_{}]],["xlm-roberta",["XLMRobertaModel",class extends a_{}]],["clap",["ClapModel",class extends Pw{}]],["clip",["CLIPModel",class extends f_{}]],["clipseg",["CLIPSegModel",class extends __{}]],["chinese_clip",["ChineseCLIPModel",class extends g_{}]],["siglip",["SiglipModel",class extends m_{}]],["mobilebert",["MobileBertModel",class extends Hg{}]],["squeezebert",["SqueezeBertModel",class extends Xg{}]],["wav2vec2",["Wav2Vec2Model",class extends kw{}]],["wav2vec2-bert",["Wav2Vec2BertModel",class extends Tw{}]],["unispeech",["UniSpeechModel",class extends Cw{}]],["unispeech-sat",["UniSpeechSatModel",class extends Aw{}]],["hubert",["HubertModel",class extends kw{}]],["wavlm",["WavLMModel",class extends zw{}]],["audio-spectrogram-transformer",["ASTModel",class extends o_{}]],["vits",["VitsModel",Lw]],["pyannote",["PyAnnoteModel",class extends Ew{}]],["wespeaker-resnet",["WeSpeakerResNetModel",class extends Sw{}]],["detr",["DetrModel",class extends X_{}]],["rt_detr",["RTDetrModel",class extends J_{}]],["table-transformer",["TableTransformerModel",class extends tw{}]],["vit",["ViTModel",class extends D_{}]],["pvt",["PvtModel",class extends L_{}]],["vit_msn",["ViTMSNModel",class extends N_{}]],["vit_mae",["ViTMAEModel",class extends F_{}]],["groupvit",["GroupViTModel",class extends U_{}]],["fastvit",["FastViTModel",class extends j_{}]],["mobilevit",["MobileViTModel",class extends q_{}]],["mobilevitv2",["MobileViTV2Model",class extends W_{}]],["owlvit",["OwlViTModel",class extends G_{}]],["owlv2",["Owlv2Model",class extends H_{}]],["beit",["BeitModel",class extends K_{}]],["deit",["DeiTModel",class extends rw{}]],["hiera",["HieraModel",class extends sw{}]],["convnext",["ConvNextModel",class extends mw{}]],["convnextv2",["ConvNextV2Model",class extends gw{}]],["dinov2",["Dinov2Model",class extends _w{}]],["resnet",["ResNetModel",class extends iw{}]],["swin",["SwinModel",class extends aw{}]],["swin2sr",["Swin2SRModel",class extends ow{}]],["donut-swin",["DonutSwinModel",class extends fw{}]],["yolos",["YolosModel",class extends ww{}]],["dpt",["DPTModel",class extends lw{}]],["glpn",["GLPNModel",class extends hw{}]],["hifigan",["SpeechT5HifiGan",class extends Rg{main_input_name="spectrogram"}]],["efficientnet",["EfficientNetModel",class extends Uw{}]],["decision_transformer",["DecisionTransformerModel",class extends Hw{}]],["mobilenet_v1",["MobileNetV1Model",class extends Vw{}]],["mobilenet_v2",["MobileNetV2Model",class extends qw{}]],["mobilenet_v3",["MobileNetV3Model",class extends Ww{}]],["mobilenet_v4",["MobileNetV4Model",class extends Gw{}]],["maskformer",["MaskFormerModel",class extends pw{}]]]),Yw=new Map([["t5",["T5Model",class extends Qg{}]],["longt5",["LongT5Model",class extends Zg{}]],["mt5",["MT5Model",class extends Jg{}]],["bart",["BartModel",class extends e_{}]],["mbart",["MBartModel",class extends t_{}]],["marian",["MarianModel",class extends xw{}]],["whisper",["WhisperModel",class extends l_{}]],["m2m_100",["M2M100Model",class extends $w{}]],["blenderbot",["BlenderbotModel",class extends n_{}]],["blenderbot-small",["BlenderbotSmallModel",class extends r_{}]]]),Qw=new Map([["bloom",["BloomModel",class extends B_{}]],["jais",["JAISModel",class extends y_{}]],["gpt2",["GPT2Model",class extends w_{}]],["gptj",["GPTJModel",class extends x_{}]],["gpt_bigcode",["GPTBigCodeModel",class extends $_{}]],["gpt_neo",["GPTNeoModel",class extends b_{}]],["gpt_neox",["GPTNeoXModel",class extends v_{}]],["codegen",["CodeGenModel",class extends k_{}]],["llama",["LlamaModel",class extends E_{}]],["granite",["GraniteModel",class extends S_{}]],["cohere",["CohereModel",class extends C_{}]],["gemma",["GemmaModel",class extends A_{}]],["gemma2",["Gemma2Model",class extends T_{}]],["openelm",["OpenELMModel",class extends z_{}]],["qwen2",["Qwen2Model",class extends I_{}]],["phi",["PhiModel",class extends M_{}]],["phi3",["Phi3Model",class extends O_{}]],["mpt",["MptModel",class extends R_{}]],["opt",["OPTModel",class extends P_{}]],["mistral",["MistralModel",class extends Ow{}]],["starcoder2",["Starcoder2Model",class extends Bw{}]],["falcon",["FalconModel",class extends Rw{}]],["stablelm",["StableLmModel",class extends Nw{}]]]),Zw=new Map([["speecht5",["SpeechT5ForSpeechToText",class extends Iw{}]],["whisper",["WhisperForConditionalGeneration",class extends l_{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,ug)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let n=e.language;const r=e.task;if(e.is_multilingual){n||(console.warn("No language specified - defaulting to English (en)."),n="en");const s=function(e){e=e.toLowerCase();let t=$h.get(e);if(void 0===t){if(!xh.has(e)){const t=2===e.length?xh.keys():xh.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(t)}`)}t=e}return t}(n),i=`<|${s}|>`;t.push(e.lang_to_id[i]),t.push(e.task_to_id[r??"transcribe"])}else if(n||r)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),t.pop()),t.filter((e=>null!=e))}async generate(e){let{inputs:t=null,generation_config:n=null,logits_processor:r=null,stopping_criteria:s=null,...i}=e;n=this._prepare_generation_config(n,i);const a=i.decoder_input_ids??this._retrieve_init_tokens(n);if(n.return_timestamps&&(r??=new Nm,r.push(new qm(n,a))),n.begin_suppress_tokens&&(r??=new Nm,r.push(new Vm(n.begin_suppress_tokens,a.length))),n.return_token_timestamps){if(!n.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===n.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),n.output_attentions=!0,n.return_dict_in_generate=!0}const o=await super.generate({inputs:t,generation_config:n,logits_processor:r,decoder_input_ids:a,...i});return n.return_token_timestamps&&(o.token_timestamps=this._extract_token_timestamps(o,n.alignment_heads,n.num_frames)),o}_extract_token_timestamps(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.02;if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==n&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let s=this.config.median_filter_width;void 0===s&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),s=7);const i=e.cross_attentions,a=Array.from({length:this.config.decoder_layers},((e,t)=>dp(i.map((e=>e[t])),2))),o=cp(t.map((e=>{let[t,r]=e;if(t>=a.length)throw new Error(`Layer index ${t} is out of bounds for cross attentions (length ${a.length}).`);return n?a[t].slice(null,r,null,[0,n]):a[t].slice(null,r)}))).transpose(1,0,2,3),[l,u]=pp(o,-2,0,!0),d=o.clone();for(let f=0;f<d.dims[0];++f){const e=d[f];for(let t=0;t<e.dims[0];++t){const n=e[t],r=l[f][t][0].data,i=u[f][t][0].data;for(let e=0;e<n.dims[0];++e){let t=n[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-i[e])/r[e];t.set(Q(t,s))}}}const c=[hp(d,1)],p=e.sequences.dims,h=new rp("float32",new Float32Array(p[0]*p[1]),p);for(let f=0;f<p[0];++f){const e=c[f].neg().squeeze_(0),[t,n]=J(e.tolist()),s=C([1],Array.from({length:t.length-1},((e,n)=>t[n+1]-t[n]))).map((e=>!!e)),i=[];for(let a=0;a<s.length;++a)s[a]&&i.push(n[a]*r);h[f].data.set(i,1)}return h}}]]]),Jw=new Map([["speecht5",["SpeechT5ForTextToSpeech",class extends Iw{async generate_speech(e,t){let{threshold:n=.5,minlenratio:r=0,maxlenratio:s=20,vocoder:i=null}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a={input_ids:e},{encoder_outputs:o,encoder_attention_mask:l}=await Tg(this,a),u=o.dims[1]/this.config.reduction_factor,d=Math.floor(u*s),c=Math.floor(u*r),p=this.config.num_mel_bins;let h=[],f=null,m=null,g=0;for(;;){++g;const e=Cg(!!m);let r;r=m?m.output_sequence_out:new rp("float32",new Float32Array(p),[1,1,p]);let s={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:o};this.addPastKeyValues(s,f),m=await kg(this.sessions.decoder_model_merged,s),f=this.getPastKeyValues(m,f);const{prob:i,spectrum:a}=m;if(h.push(a),g>=c&&(Array.from(i.data).filter((e=>e>=n)).length>0||g>=d))break}const _=dp(h),{waveform:w}=await kg(i.sessions.model,{spectrogram:_});return{spectrogram:_,waveform:w}}}]]]),ey=new Map([["vits",["VitsModel",Lw]],["musicgen",["MusicgenForConditionalGeneration",jw]]]),ty=new Map([["bert",["BertForSequenceClassification",class extends Dg{async _call(e){return new Qy(await super._call(e))}}]],["roformer",["RoFormerForSequenceClassification",class extends Fg{async _call(e){return new Qy(await super._call(e))}}]],["electra",["ElectraForSequenceClassification",class extends Ug{async _call(e){return new Qy(await super._call(e))}}]],["esm",["EsmForSequenceClassification",class extends Gg{async _call(e){return new Qy(await super._call(e))}}]],["convbert",["ConvBertForSequenceClassification",class extends Ng{async _call(e){return new Qy(await super._call(e))}}]],["camembert",["CamembertForSequenceClassification",class extends jg{async _call(e){return new Qy(await super._call(e))}}]],["deberta",["DebertaForSequenceClassification",class extends Vg{async _call(e){return new Qy(await super._call(e))}}]],["deberta-v2",["DebertaV2ForSequenceClassification",class extends qg{async _call(e){return new Qy(await super._call(e))}}]],["mpnet",["MPNetForSequenceClassification",class extends Kg{async _call(e){return new Qy(await super._call(e))}}]],["albert",["AlbertForSequenceClassification",class extends Yg{async _call(e){return new Qy(await super._call(e))}}]],["distilbert",["DistilBertForSequenceClassification",class extends Wg{async _call(e){return new Qy(await super._call(e))}}]],["roberta",["RobertaForSequenceClassification",class extends s_{async _call(e){return new Qy(await super._call(e))}}]],["xlm",["XLMForSequenceClassification",class extends i_{async _call(e){return new Qy(await super._call(e))}}]],["xlm-roberta",["XLMRobertaForSequenceClassification",class extends a_{async _call(e){return new Qy(await super._call(e))}}]],["bart",["BartForSequenceClassification",class extends e_{async _call(e){return new Qy(await super._call(e))}}]],["mbart",["MBartForSequenceClassification",class extends t_{async _call(e){return new Qy(await super._call(e))}}]],["mobilebert",["MobileBertForSequenceClassification",class extends Hg{async _call(e){return new Qy(await super._call(e))}}]],["squeezebert",["SqueezeBertForSequenceClassification",class extends Xg{async _call(e){return new Qy(await super._call(e))}}]]]),ny=new Map([["bert",["BertForTokenClassification",class extends Dg{async _call(e){return new Jy(await super._call(e))}}]],["roformer",["RoFormerForTokenClassification",class extends Fg{async _call(e){return new Jy(await super._call(e))}}]],["electra",["ElectraForTokenClassification",class extends Ug{async _call(e){return new Jy(await super._call(e))}}]],["esm",["EsmForTokenClassification",class extends Gg{async _call(e){return new Jy(await super._call(e))}}]],["convbert",["ConvBertForTokenClassification",class extends Ng{async _call(e){return new Jy(await super._call(e))}}]],["camembert",["CamembertForTokenClassification",class extends jg{async _call(e){return new Jy(await super._call(e))}}]],["deberta",["DebertaForTokenClassification",class extends Vg{async _call(e){return new Jy(await super._call(e))}}]],["deberta-v2",["DebertaV2ForTokenClassification",class extends qg{async _call(e){return new Jy(await super._call(e))}}]],["mpnet",["MPNetForTokenClassification",class extends Kg{async _call(e){return new Jy(await super._call(e))}}]],["distilbert",["DistilBertForTokenClassification",class extends Wg{async _call(e){return new Jy(await super._call(e))}}]],["roberta",["RobertaForTokenClassification",class extends s_{async _call(e){return new Jy(await super._call(e))}}]],["xlm",["XLMForTokenClassification",class extends i_{async _call(e){return new Jy(await super._call(e))}}]],["xlm-roberta",["XLMRobertaForTokenClassification",class extends a_{async _call(e){return new Jy(await super._call(e))}}]]]),ry=new Map([["t5",["T5ForConditionalGeneration",class extends Qg{}]],["longt5",["LongT5ForConditionalGeneration",class extends Zg{}]],["mt5",["MT5ForConditionalGeneration",class extends Jg{}]],["bart",["BartForConditionalGeneration",class extends e_{}]],["mbart",["MBartForConditionalGeneration",class extends t_{}]],["marian",["MarianMTModel",class extends xw{}]],["m2m_100",["M2M100ForConditionalGeneration",class extends $w{}]],["blenderbot",["BlenderbotForConditionalGeneration",class extends n_{}]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",class extends r_{}]]]),sy=new Map([["bloom",["BloomForCausalLM",class extends B_{}]],["gpt2",["GPT2LMHeadModel",class extends w_{}]],["jais",["JAISLMHeadModel",class extends y_{}]],["gptj",["GPTJForCausalLM",class extends x_{}]],["gpt_bigcode",["GPTBigCodeForCausalLM",class extends $_{}]],["gpt_neo",["GPTNeoForCausalLM",class extends b_{}]],["gpt_neox",["GPTNeoXForCausalLM",class extends v_{}]],["codegen",["CodeGenForCausalLM",class extends k_{}]],["llama",["LlamaForCausalLM",class extends E_{}]],["granite",["GraniteForCausalLM",class extends S_{}]],["cohere",["CohereForCausalLM",class extends C_{}]],["gemma",["GemmaForCausalLM",class extends A_{}]],["gemma2",["Gemma2ForCausalLM",class extends T_{}]],["openelm",["OpenELMForCausalLM",class extends z_{}]],["qwen2",["Qwen2ForCausalLM",class extends I_{}]],["phi",["PhiForCausalLM",class extends M_{}]],["phi3",["Phi3ForCausalLM",class extends O_{}]],["mpt",["MptForCausalLM",class extends R_{}]],["opt",["OPTForCausalLM",class extends P_{}]],["mbart",["MBartForCausalLM",class extends t_{}]],["mistral",["MistralForCausalLM",class extends Ow{}]],["starcoder2",["Starcoder2ForCausalLM",class extends Bw{}]],["falcon",["FalconForCausalLM",class extends Rw{}]],["trocr",["TrOCRForCausalLM",class extends Mw{}]],["stablelm",["StableLmForCausalLM",class extends Nw{}]]]),iy=new Map([["bert",["BertForMaskedLM",class extends Dg{async _call(e){return new eb(await super._call(e))}}]],["roformer",["RoFormerForMaskedLM",class extends Fg{async _call(e){return new eb(await super._call(e))}}]],["electra",["ElectraForMaskedLM",class extends Ug{async _call(e){return new eb(await super._call(e))}}]],["esm",["EsmForMaskedLM",class extends Gg{async _call(e){return new eb(await super._call(e))}}]],["convbert",["ConvBertForMaskedLM",class extends Ng{async _call(e){return new eb(await super._call(e))}}]],["camembert",["CamembertForMaskedLM",class extends jg{async _call(e){return new eb(await super._call(e))}}]],["deberta",["DebertaForMaskedLM",class extends Vg{async _call(e){return new eb(await super._call(e))}}]],["deberta-v2",["DebertaV2ForMaskedLM",class extends qg{async _call(e){return new eb(await super._call(e))}}]],["mpnet",["MPNetForMaskedLM",class extends Kg{async _call(e){return new eb(await super._call(e))}}]],["albert",["AlbertForMaskedLM",class extends Yg{async _call(e){return new eb(await super._call(e))}}]],["distilbert",["DistilBertForMaskedLM",class extends Wg{async _call(e){return new eb(await super._call(e))}}]],["roberta",["RobertaForMaskedLM",class extends s_{async _call(e){return new eb(await super._call(e))}}]],["xlm",["XLMWithLMHeadModel",class extends i_{async _call(e){return new eb(await super._call(e))}}]],["xlm-roberta",["XLMRobertaForMaskedLM",class extends a_{async _call(e){return new eb(await super._call(e))}}]],["mobilebert",["MobileBertForMaskedLM",class extends Hg{async _call(e){return new eb(await super._call(e))}}]],["squeezebert",["SqueezeBertForMaskedLM",class extends Xg{async _call(e){return new eb(await super._call(e))}}]]]),ay=new Map([["bert",["BertForQuestionAnswering",class extends Dg{async _call(e){return new tb(await super._call(e))}}]],["roformer",["RoFormerForQuestionAnswering",class extends Fg{async _call(e){return new tb(await super._call(e))}}]],["electra",["ElectraForQuestionAnswering",class extends Ug{async _call(e){return new tb(await super._call(e))}}]],["convbert",["ConvBertForQuestionAnswering",class extends Ng{async _call(e){return new tb(await super._call(e))}}]],["camembert",["CamembertForQuestionAnswering",class extends jg{async _call(e){return new tb(await super._call(e))}}]],["deberta",["DebertaForQuestionAnswering",class extends Vg{async _call(e){return new tb(await super._call(e))}}]],["deberta-v2",["DebertaV2ForQuestionAnswering",class extends qg{async _call(e){return new tb(await super._call(e))}}]],["mpnet",["MPNetForQuestionAnswering",class extends Kg{async _call(e){return new tb(await super._call(e))}}]],["albert",["AlbertForQuestionAnswering",class extends Yg{async _call(e){return new tb(await super._call(e))}}]],["distilbert",["DistilBertForQuestionAnswering",class extends Wg{async _call(e){return new tb(await super._call(e))}}]],["roberta",["RobertaForQuestionAnswering",class extends s_{async _call(e){return new tb(await super._call(e))}}]],["xlm",["XLMForQuestionAnswering",class extends i_{async _call(e){return new tb(await super._call(e))}}]],["xlm-roberta",["XLMRobertaForQuestionAnswering",class extends a_{async _call(e){return new tb(await super._call(e))}}]],["mobilebert",["MobileBertForQuestionAnswering",class extends Hg{async _call(e){return new tb(await super._call(e))}}]],["squeezebert",["SqueezeBertForQuestionAnswering",class extends Xg{async _call(e){return new tb(await super._call(e))}}]]]),oy=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",u_]]]),ly=new Map([["llava",["LlavaForConditionalGeneration",c_]],["moondream1",["Moondream1ForConditionalGeneration",class extends c_{}]],["florence2",["Florence2ForConditionalGeneration",h_]]]),uy=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",u_]]]),dy=new Map([["vit",["ViTForImageClassification",class extends D_{async _call(e){return new Qy(await super._call(e))}}]],["pvt",["PvtForImageClassification",class extends L_{async _call(e){return new Qy(await super._call(e))}}]],["vit_msn",["ViTMSNForImageClassification",class extends N_{async _call(e){return new Qy(await super._call(e))}}]],["fastvit",["FastViTForImageClassification",class extends j_{async _call(e){return new Qy(await super._call(e))}}]],["mobilevit",["MobileViTForImageClassification",class extends q_{async _call(e){return new Qy(await super._call(e))}}]],["mobilevitv2",["MobileViTV2ForImageClassification",class extends W_{async _call(e){return new Qy(await super._call(e))}}]],["beit",["BeitForImageClassification",class extends K_{async _call(e){return new Qy(await super._call(e))}}]],["deit",["DeiTForImageClassification",class extends rw{async _call(e){return new Qy(await super._call(e))}}]],["hiera",["HieraForImageClassification",class extends sw{async _call(e){return new Qy(await super._call(e))}}]],["convnext",["ConvNextForImageClassification",class extends mw{async _call(e){return new Qy(await super._call(e))}}]],["convnextv2",["ConvNextV2ForImageClassification",class extends gw{async _call(e){return new Qy(await super._call(e))}}]],["dinov2",["Dinov2ForImageClassification",class extends _w{async _call(e){return new Qy(await super._call(e))}}]],["resnet",["ResNetForImageClassification",class extends iw{async _call(e){return new Qy(await super._call(e))}}]],["swin",["SwinForImageClassification",class extends aw{async _call(e){return new Qy(await super._call(e))}}]],["segformer",["SegformerForImageClassification",class extends Fw{}]],["efficientnet",["EfficientNetForImageClassification",class extends Uw{async _call(e){return new Qy(await super._call(e))}}]],["mobilenet_v1",["MobileNetV1ForImageClassification",class extends Vw{async _call(e){return new Qy(await super._call(e))}}]],["mobilenet_v2",["MobileNetV2ForImageClassification",class extends qw{async _call(e){return new Qy(await super._call(e))}}]],["mobilenet_v3",["MobileNetV3ForImageClassification",class extends Ww{async _call(e){return new Qy(await super._call(e))}}]],["mobilenet_v4",["MobileNetV4ForImageClassification",class extends Gw{async _call(e){return new Qy(await super._call(e))}}]]]),cy=new Map([["detr",["DetrForObjectDetection",class extends X_{async _call(e){return new Q_(await super._call(e))}}]],["rt_detr",["RTDetrForObjectDetection",class extends J_{async _call(e){return new ew(await super._call(e))}}]],["table-transformer",["TableTransformerForObjectDetection",class extends tw{async _call(e){return new nw(await super._call(e))}}]],["yolos",["YolosForObjectDetection",class extends ww{async _call(e){return new yw(await super._call(e))}}]]]),py=new Map([["owlvit",["OwlViTForObjectDetection",class extends G_{}]],["owlv2",["Owlv2ForObjectDetection",class extends H_{}]]]),hy=new Map([["detr",["DetrForSegmentation",Y_]],["clipseg",["CLIPSegForImageSegmentation",class extends __{}]]]),fy=new Map([["segformer",["SegformerForSemanticSegmentation",class extends Fw{}]],["sapiens",["SapiensForSemanticSegmentation",class extends dw{}]]]),my=new Map([["detr",["DetrForSegmentation",Y_]],["maskformer",["MaskFormerForInstanceSegmentation",class extends pw{}]]]),gy=new Map([["sam",["SamModel",class extends bw{async get_image_embeddings(e){let{pixel_values:t}=e;return await Tg(this,{pixel_values:t})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),n=t.reduce(((e,t)=>e*t),1);e.input_labels=new rp("int64",new BigInt64Array(n).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await kg(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new vw(await super._call(e))}}]]]),_y=new Map([["wav2vec2",["Wav2Vec2ForCTC",class extends kw{async _call(e){return new nb(await super._call(e))}}]],["wav2vec2-bert",["Wav2Vec2BertForCTC",class extends Tw{async _call(e){return new nb(await super._call(e))}}]],["unispeech",["UniSpeechForCTC",class extends Cw{async _call(e){return new nb(await super._call(e))}}]],["unispeech-sat",["UniSpeechSatForCTC",class extends Aw{async _call(e){return new nb(await super._call(e))}}]],["wavlm",["WavLMForCTC",class extends zw{async _call(e){return new nb(await super._call(e))}}]],["hubert",["HubertForCTC",class extends kw{async _call(e){return new nb(await super._call(e))}}]]]),wy=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",class extends kw{async _call(e){return new Qy(await super._call(e))}}]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",class extends Tw{async _call(e){return new Qy(await super._call(e))}}]],["unispeech",["UniSpeechForSequenceClassification",class extends Cw{async _call(e){return new Qy(await super._call(e))}}]],["unispeech-sat",["UniSpeechSatForSequenceClassification",class extends Aw{async _call(e){return new Qy(await super._call(e))}}]],["wavlm",["WavLMForSequenceClassification",class extends zw{async _call(e){return new Qy(await super._call(e))}}]],["hubert",["HubertForSequenceClassification",class extends kw{async _call(e){return new Qy(await super._call(e))}}]],["audio-spectrogram-transformer",["ASTForAudioClassification",class extends o_{}]]]),yy=new Map([["wavlm",["WavLMForXVector",class extends zw{async _call(e){return new Zy(await super._call(e))}}]]]),by=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",class extends Aw{async _call(e){return new Jy(await super._call(e))}}]],["wavlm",["WavLMForAudioFrameClassification",class extends zw{async _call(e){return new Jy(await super._call(e))}}]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",class extends kw{async _call(e){return new Jy(await super._call(e))}}]],["pyannote",["PyAnnoteForAudioFrameClassification",class extends Ew{async _call(e){return new Jy(await super._call(e))}}]]]),vy=new Map([["vitmatte",["VitMatteForImageMatting",class extends V_{async _call(e){return new rb(await super._call(e))}}]]]),xy=new Map([["swin2sr",["Swin2SRForImageSuperResolution",class extends ow{}]]]),$y=new Map([["dpt",["DPTForDepthEstimation",class extends lw{}]],["depth_anything",["DepthAnythingForDepthEstimation",class extends uw{}]],["glpn",["GLPNForDepthEstimation",class extends hw{}]],["sapiens",["SapiensForDepthEstimation",class extends dw{}]],["depth_pro",["DepthProForDepthEstimation",class extends cw{}]]]),ky=new Map([["sapiens",["SapiensForNormalEstimation",class extends dw{}]]]),Ey=new Map([["clip",["CLIPVisionModelWithProjection",class extends f_{static async from_pretrained(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}]],["siglip",["SiglipVisionModel",class extends f_{static async from_pretrained(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}]]]),Sy=[[Xw,dg],[Yw,cg],[Qw,fg],[ty,dg],[ny,dg],[ry,pg],[Zw,pg],[sy,fg],[iy,dg],[ay,dg],[oy,hg],[ly,gg],[dy,dg],[hy,dg],[my,dg],[fy,dg],[vy,dg],[xy,dg],[$y,dg],[ky,dg],[cy,dg],[py,dg],[gy,mg],[_y,dg],[wy,dg],[Jw,pg],[ey,dg],[yy,dg],[by,dg],[Ey,dg]];for(const[Uv,jv]of Sy)for(const[e,t]of Uv.values())wg.set(e,jv),bg.set(t,e),yg.set(e,t);const Cy=[["MusicgenForConditionalGeneration",jw,_g],["CLIPTextModelWithProjection",class extends f_{static async from_pretrained(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.model_file_name??="text_model",super.from_pretrained(e,t)}},dg],["SiglipTextModel",class extends m_{static async from_pretrained(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.model_file_name??="text_model",super.from_pretrained(e,t)}},dg],["ClapTextModelWithProjection",class extends Pw{static async from_pretrained(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.model_file_name??="text_model",super.from_pretrained(e,t)}},dg],["ClapAudioModelWithProjection",class extends Pw{static async from_pretrained(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t.model_file_name??="audio_model",super.from_pretrained(e,t)}},dg]];for(const[Uv,jv,Vv]of Cy)wg.set(Uv,Vv),bg.set(jv,Uv),yg.set(Uv,jv);class Ay extends Kw{static MODEL_CLASS_MAPPINGS=(()=>Sy.map((e=>e[0])))();static BASE_IF_FAIL=!0}class Ty extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[ty])()}class zy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[ny])()}class Iy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[ry])()}class My extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[Zw])()}class Oy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[Jw])()}class By extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[ey])()}class Ry extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[sy])()}class Py extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[iy])()}class Dy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[ay])()}class Ly extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[oy])()}class Fy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[dy])()}class Ny extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[hy])()}class Uy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[fy])()}class jy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[my])()}class Vy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[cy])()}class qy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[py])()}class Wy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[_y])()}class Gy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[wy])()}class Hy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[uy])()}class Ky extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[xy])()}class Xy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[$y])()}class Yy extends Kw{static MODEL_CLASS_MAPPINGS=(()=>[Ey])()}class Qy extends Pg{constructor(e){let{logits:t}=e;super(),this.logits=t}}class Zy extends Pg{constructor(e){let{logits:t,embeddings:n}=e;super(),this.logits=t,this.embeddings=n}}class Jy extends Pg{constructor(e){let{logits:t}=e;super(),this.logits=t}}class eb extends Pg{constructor(e){let{logits:t}=e;super(),this.logits=t}}class tb extends Pg{constructor(e){let{start_logits:t,end_logits:n}=e;super(),this.start_logits=t,this.end_logits=n}}class nb extends Pg{constructor(e){let{logits:t}=e;super(),this.logits=t}}class rb extends Pg{constructor(e){let{alphas:t}=e;super(),this.alphas=t}}class sb extends Pg{constructor(e){let{waveform:t,spectrogram:n}=e;super(),this.waveform=t,this.spectrogram=n}}var ib=n(806);const ab="undefined"!==typeof self,ob=ab&&"DedicatedWorkerGlobalScope"===self.constructor.name;let lb,ub,db;if(ab)lb=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},db=self.createImageBitmap,ub=self.ImageData;else{if(!ib)throw new Error("Unable to load image processing library.");db=async e=>{const t=(await e.metadata()).channels,{data:n,info:r}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),s=new hb(new Uint8ClampedArray(n),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&s.convert(t),s}}const cb={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},pb=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class hb{constructor(e,t,n,r){this.data=e,this.width=t,this.height=n,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof hb)return e;if("string"===typeof e||e instanceof URL)return await this.fromURL(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!ab)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new hb(t,e.width,e.height,4)}static async fromURL(e){const t=await D(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const n=await t.blob();return this.fromBlob(n)}static async fromBlob(e){if(ab){const t=await db(e),n=lb(t.width,t.height).getContext("2d");return n.drawImage(t,0,0),new this(n.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=ib(await e.arrayBuffer());return await db(t)}}static fromTensor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"CHW";if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new hb(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,n=0;t<this.data.length;t+=this.channels){const r=this.data[t],s=this.data[t+1],i=this.data[t+2];e[n++]=Math.round(.2989*r+.587*s+.114*i)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t];break;case 4:for(let t=0,n=0;t<this.data.length;t+=4)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=255;break;case 3:for(let t=0,n=0;t<this.data.length;t+=3)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}async resize(e,t){let{resample:n=2}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=cb[n]??n;if(ab){const n=this.channels,r=this.toCanvas(),s=lb(e,t).getContext("2d");s.drawImage(r,0,0,e,t);return new hb(s.getImageData(0,0,e,t).data,e,t,4).convert(n)}{let n=this.toSharp();switch(r){case"box":case"hamming":"box"!==r&&"hamming"!==r||(console.warn(`Resampling method ${r} is not yet supported. Using bilinear instead.`),r="bilinear");case"nearest":case"bilinear":case"bicubic":n=n.affine([e/this.width,0,0,t/this.height],{interpolator:r});break;case"lanczos":n=n.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${r} is not supported.`)}return await db(n)}}async pad(e){let[t,n,r,s]=e;if(t=Math.max(t,0),n=Math.max(n,0),r=Math.max(r,0),s=Math.max(s,0),0===t&&0===n&&0===r&&0===s)return this;if(ab){const e=this.channels,i=this.toCanvas(),a=this.width+t+n,o=this.height+r+s,l=lb(a,o).getContext("2d");l.drawImage(i,0,0,this.width,this.height,t,r,a,o);return new hb(l.getImageData(0,0,a,o).data,a,o,4).convert(e)}{const e=this.toSharp().extend({left:t,right:n,top:r,bottom:s});return await db(e)}}async crop(e){let[t,n,r,s]=e;if(t=Math.max(t,0),n=Math.max(n,0),r=Math.min(r,this.width-1),s=Math.min(s,this.height-1),0===t&&0===n&&r===this.width-1&&s===this.height-1)return this;const i=r-t+1,a=s-n+1;if(ab){const e=this.channels,r=this.toCanvas(),s=lb(i,a).getContext("2d");s.drawImage(r,t,n,i,a,0,0,i,a);return new hb(s.getImageData(0,0,i,a).data,i,a,4).convert(e)}{const e=this.toSharp().extract({left:t,top:n,width:i,height:a});return await db(e)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const n=(this.width-e)/2,r=(this.height-t)/2;if(ab){const s=this.channels,i=this.toCanvas(),a=lb(e,t).getContext("2d");let o=0,l=0,u=0,d=0;n>=0?o=n:u=-n,r>=0?l=r:d=-r,a.drawImage(i,o,l,e,t,u,d,e,t);return new hb(a.getImageData(0,0,e,t).data,e,t,4).convert(s)}{let s=this.toSharp();if(n>=0&&r>=0)s=s.extract({left:Math.floor(n),top:Math.floor(r),width:e,height:t});else if(n<=0&&r<=0){const i=Math.floor(-r),a=Math.floor(-n);s=s.extend({top:i,left:a,right:e-this.width-a,bottom:t-this.height-i})}else{let i=[0,0],a=0;r<0?(i[0]=Math.floor(-r),i[1]=t-this.height-i[0]):a=Math.floor(r);let o=[0,0],l=0;n<0?(o[0]=Math.floor(-n),o[1]=e-this.width-o[0]):l=Math.floor(n),s=s.extend({top:i[0],bottom:i[1],left:o[0],right:o[1]}).extract({left:l,top:a,width:e,height:t})}return await db(s)}}async toBlob(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"image/png",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(!ab)throw new Error("toBlob() is only supported in browser environments.");const n=this.toCanvas();return await n.convertToBlob({type:e,quality:t})}toTensor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"CHW",t=new rp("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!ab)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=lb(e.width,e.height),n=new ub(e.data,e.width,e.height);return t.getContext("2d").putImageData(n,0,0),t}_update(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return this.data=e,this.width=t,this.height=n,null!==r&&(this.channels=r),this}clone(){return new hb(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!ab){if(v.useFS){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(ob)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),n=pb.get(t)??"image/png",r=await this.toBlob(n),s=URL.createObjectURL(r),i=document.createElement("a");i.href=s,i.download=e,i.click(),i.remove()}}toSharp(){if(ab)throw new Error("toSharp() is only supported in server-side environments.");return ib(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}function fb(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const n=1-t,r=2*Math.PI/(e-1),s=new Float64Array(e);for(let i=0;i<e;++i)s[i]=t-n*Math.cos(i*r);return s}function mb(e){return fb(e,.5)}const gb={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:15,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:27/Math.log(6.4);return e>=t?n+Math.log(e/t)*r:3*e/200}};function _b(e){const t=gb[arguments.length>1&&void 0!==arguments[1]?arguments[1]:"htk"];if(!t)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"===typeof e?t(e):e.map((e=>t(e)))}const wb={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:15,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Math.log(6.4)/27;return e>=n?t*Math.exp(r*(e-n)):200*e/3}};function yb(e,t,n){const r=(t-e)/(n-1);return Float64Array.from({length:n},((t,n)=>e+r*n))}function bb(e,t,n,r,s){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"htk",o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];if(null!==i&&"slaney"!==i)throw new Error('norm must be one of null or "slaney"');const l=yb(_b(n,a),_b(r,a),t+2);let u,d=function(e){const t=wb[arguments.length>1&&void 0!==arguments[1]?arguments[1]:"htk"];if(!t)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"===typeof e?t(e):e.map((e=>t(e)))}(l,a);if(o){const t=s/(2*e);u=_b(Float64Array.from({length:e},((e,n)=>n*t)),a),d=l}else u=yb(0,Math.floor(s/2),e);const c=function(e,t){const n=Float64Array.from({length:t.length-1},((e,n)=>t[n+1]-t[n])),r=Array.from({length:e.length},(()=>new Array(t.length)));for(let a=0;a<e.length;++a){const n=r[a];for(let r=0;r<t.length;++r)n[r]=t[r]-e[a]}const s=t.length-2,i=Array.from({length:s},(()=>new Array(e.length)));for(let a=0;a<e.length;++a){const e=r[a];for(let t=0;t<s;++t){const r=-e[t]/n[t],s=e[t+2]/n[t+1];i[t][a]=Math.max(0,Math.min(r,s))}}return i}(u,d);if(null!==i&&"slaney"===i)for(let p=0;p<t;++p){const t=c[p],n=2/(d[p+2]-d[p]);for(let r=0;r<e;++r)t[r]*=n}return c}function vb(e,t,n,r,s){if(n<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");n=Math.max(r,n);const i=Math.log10(n);for(let a=0;a<e.length;++a)e[a]=t*Math.log10(Math.max(r,e[a])-i);if(null!==s){if(s<=0)throw new Error("db_range must be greater than zero");const t=G(e)[0]-s;for(let n=0;n<e.length;++n)e[n]=Math.max(e[n],t)}return e}async function xb(e,t,n,r){let{fft_length:s=null,power:i=1,center:a=!0,pad_mode:o="reflect",onesided:l=!0,preemphasis:u=null,mel_filters:d=null,mel_floor:c=1e-10,log_mel:p=null,reference:h=1,min_value:f=1e-10,db_range:m=null,remove_dc_offset:g=null,min_num_frames:_=null,max_num_frames:w=null,do_pad:y=!0,transpose:b=!1}=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const v=t.length;if(null===s&&(s=n),n>s)throw Error(`frame_length (${n}) may not be larger than fft_length (${s})`);if(v!==n)throw new Error(`Length of the window (${v}) must equal frame_length (${n})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(null===i&&null!==d)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(a){if("reflect"!==o)throw new Error(`pad_mode="${o}" not implemented yet.`);const t=Math.floor((s-1)/2)+1;e=function(e,t,n){const r=new e.constructor(e.length+t+n),s=e.length-1;for(let i=0;i<e.length;++i)r[t+i]=e[i];for(let i=1;i<=t;++i)r[t-i]=e[T(i,s)];for(let i=1;i<=n;++i)r[s+t+i]=e[T(s-i,s)];return r}(e,t,t)}let x=Math.floor(1+Math.floor((e.length-n)/r));null!==_&&x<_&&(x=_);const $=l?Math.floor(s/2)+1:s;let k=x,E=x;null!==w&&(w>x?y&&(E=w):E=k=w);const S=new Y(s),C=new Float64Array(s),A=new Float64Array(S.outputBufferSize),z=new Float32Array($*E);for(let T=0;T<k;++T){const s=T*r,i=Math.min(e.length-s,n);i!==n&&C.fill(0,0,n);for(let t=0;t<i;++t)C[t]=e[s+t];if(g){let e=0;for(let n=0;n<i;++n)e+=C[n];const t=e/i;for(let n=0;n<i;++n)C[n]-=t}if(null!==u){for(let e=i-1;e>=1;--e)C[e]-=u*C[e-1];C[0]*=1-u}for(let e=0;e<t.length;++e)C[e]*=t[e];S.realTransform(A,C);for(let e=0;e<$;++e){const t=e<<1;z[e*E+T]=A[t]**2+A[t+1]**2}}if(null!==i&&2!==i){const e=2/i;for(let t=0;t<z.length;++t)z[t]**=e}const I=d.length;let M=await async function(e,t){const n=await tp.matmul;return await n({a:e,b:t})}(new rp("float32",d.flat(),[I,$]),new rp("float32",z,[$,E]));b&&(M=M.transpose(1,0));const O=M.data;for(let T=0;T<O.length;++T)O[T]=Math.max(c,O[T]);if(null!==i&&null!==p){const e=Math.min(O.length,k*I);switch(p){case"log":for(let t=0;t<e;++t)O[t]=Math.log(O[t]);break;case"log10":for(let t=0;t<e;++t)O[t]=Math.log10(O[t]);break;case"dB":if(1===i)!function(e){vb(e,20,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e-5,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}(O,h,f,m);else{if(2!==i)throw new Error(`Cannot use log_mel option '${p}' with power ${i}`);!function(e){vb(e,10,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e-10,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}(O,h,f,m)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${p}'`)}}return M}function $b(e,t){let{periodic:n=!0,frame_length:r=null,center:s=!0}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=n?e+1:e;let a;switch(t){case"boxcar":a=new Float64Array(i).fill(1);break;case"hann":case"hann_window":a=mb(i);break;case"hamming":a=function(e){return fb(e,.54)}(i);break;case"povey":a=mb(i).map((e=>Math.pow(e,.85)));break;default:throw new Error(`Unknown window type ${t}.`)}if(n&&(a=a.subarray(0,e)),null===r)return a;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return a}function kb(e){let[t,n,r,s]=e;return[t-r/2,n-s/2,t+r/2,n+s/2]}function Eb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e.logits,i=e.pred_boxes,[a,o,l]=s.dims;if(null!==n&&n.length!==a)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let u=[];for(let d=0;d<a;++d){let e=null!==n?n[d]:null,a={boxes:[],classes:[],scores:[]},c=s[d],p=i[d];for(let n=0;n<o;++n){let s,i=c[n],o=[];if(r){s=i.sigmoid().data;for(let e=0;e<s.length;++e)s[e]>t&&o.push(e)}else{let e=G(i.data)[1];if(e===l-1)continue;if(s=V(i.data),s[e]<t)continue;o.push(e)}for(const t of o){let r=p[n].data;r=kb(r),null!==e&&(r=r.map(((t,n)=>t*e[(n+1)%2]))),a.boxes.push(r),a.classes.push(t),a.scores.push(s[t])}}u.push(a)}return u}function Sb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const n=e.logits,r=n.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const s=[];for(let i=0;i<r;++i){const e=null!==t?t[i]:null;let r=n[i];null!==e&&(r=sp(r,e,"bilinear",!1));const[a,o]=e??r.dims.slice(-2),l=new rp("int32",new Int32Array(a*o),[a,o]),u=r[0].data,d=l.data;for(let t=1;t<r.dims[0];++t){const e=r[t].data;for(let n=0;n<e.length;++n)e[n]>u[n]&&(u[n]=e[n],d[n]=t)}const c=new Array(r.dims[0]);for(let t=0;t<d.length;++t){const e=d[t];c[e]=e}const p=c.filter((e=>void 0!==e));s.push({segmentation:l,labels:p})}return s}function Cb(e,t,n,r){const s=[],i=[],a=[];for(let o=0;o<e.dims[0];++o){const l=e[o],u=t[o],d=G(l.data)[1];if(d===r)continue;const c=V(l.data)[d];c>n&&(s.push(u),i.push(c),a.push(d))}return[s,i,a]}function Ab(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.8;const i=[];let a=0,o=0;const l=t[n].data;for(let d=0;d<e.length;++d)e[d]===n&&(i.push(d),++a),l[d]>=r&&++o;let u=a>0&&o>0;if(u){u=a/o>s}return[u,i]}function Tb(e,t,n,r,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const[a,o]=i??e[0].dims,l=new rp("int32",new Int32Array(a*o),[a,o]),u=[];if(null!==i)for(let f=0;f<e.length;++f)e[f]=sp(e[f],i,"bilinear",!1);const d=new Int32Array(e[0].data.length),c=new Float32Array(e[0].data.length);for(let f=0;f<e.length;++f){let n=t[f];const r=e[f].data;for(let e=0;e<r.length;++e)r[e]*=n,r[e]>c[e]&&(d[e]=f,c[e]=r[e])}let p=0;const h=l.data;for(let f=0;f<n.length;++f){const i=n[f],[a,o]=Ab(d,e,f,r,s);if(a){++p;for(const e of o)h[e]=p;u.push({id:p,label_id:i,score:t[f]})}}return[l,u]}function zb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.8,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;null===s&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),s=new Set);const a=e.class_queries_logits??e.logits,o=(e.masks_queries_logits??e.pred_masks).sigmoid();let[l,u,d]=a.dims;if(d-=1,null!==i&&i.length!==l)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let c=[];for(let p=0;p<l;++p){let e=null!==i?i[p]:null,l=a[p],u=o[p],[h,f,m]=Cb(l,u,t,d);if(0===m.length){let[t,n]=e??u.dims.slice(-2),r=new rp("int32",new Int32Array(t*n).fill(-1),[t,n]);c.push({segmentation:r,segments_info:[]});continue}let[g,_]=Tb(h,f,m,n,r,s,e);c.push({segmentation:g,segments_info:_})}return c}function Ib(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function Mb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const s=e/t;let i=function(e){const t=Math.round(e);return Math.abs(e)%1===.5?t%2===0?t:t-1:t}(s)*t;return null!==r&&i>r&&(i=Math.floor(s)*t),i<n&&(i=Math.ceil(s)*t),i}function Ob(e,t){let[n,r]=e;return[Math.max(Math.floor(n/t),1)*t,Math.max(Math.floor(r/t),1)*t]}class Bb extends ${constructor(e){super(),this.config=e}}class Rb extends Bb{constructor(e){super(e),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2;const r=e.height,s=e.width,i=t.height,a=t.width;let o=Math.min(r,i),l=Math.min(s,a);return o===r&&l===s?e:(r>s?l=Math.floor(s*o/r):s>r&&(o=Math.floor(r*l/s)),await e.resize(l,o,{resample:n}))}async crop_margin(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:200;const n=e.clone().grayscale(),r=W(n.data)[0],s=G(n.data)[0]-r;if(0===s)return e;const i=t/255;let a=n.width,o=n.height,l=0,u=0;const d=n.data;for(let c=0;c<n.height;++c){const e=c*n.width;for(let t=0;t<n.width;++t)(d[e+t]-r)/s<i&&(a=Math.min(a,t),o=Math.min(o,c),l=Math.max(l,t),u=Math.max(u,c))}return e=await e.crop([a,o,l,u])}pad_image(e,t,n){let{mode:r="constant",center:s=!1,constant_values:i=0}=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const[a,o,l]=t;let u,d;if("number"===typeof n?(u=n,d=n):(u=n.width,d=n.height),u!==o||d!==a){const n=new Float32Array(u*d*l);if(Array.isArray(i))for(let e=0;e<n.length;++e)n[e]=i[e%l];else 0!==i&&n.fill(i);const[c,p]=s?[Math.floor((u-o)/2),Math.floor((d-a)/2)]:[0,0];for(let t=0;t<a;++t){const r=(t+p)*u,s=t*o;for(let t=0;t<o;++t){const i=(r+t+c)*l,a=(s+t)*l;for(let t=0;t<l;++t)n[i+t]=e[a+t]}}if("symmetric"===r){if(s)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=a-1,r=o-1;for(let s=0;s<d;++s){const i=s*u,d=T(s,t)*o;for(let t=0;t<u;++t){if(s<a&&t<o)continue;const u=(i+t)*l,c=(d+T(t,r))*l;for(let t=0;t<l;++t)n[u+t]=e[c+t]}}}e=n,t=[d,u,l]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[n,r]=e.size;let s,i;if(this.do_thumbnail){const{height:e,width:n}=t;s=Math.min(e,n)}else Number.isInteger(t)?(s=t,i=this.config.max_size??s):void 0!==t&&(s=t.shortest_edge,i=t.longest_edge);if(void 0!==s||void 0!==i){const e=void 0===s?1:Math.max(s/n,s/r),t=n*e,a=r*e,o=void 0===i?1:Math.min(i/t,i/a);let l=Math.floor(Number((t*o).toFixed(2))),u=Math.floor(Number((a*o).toFixed(2)));return void 0!==this.size_divisibility&&([l,u]=Ob([l,u],this.size_divisibility)),[l,u]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,s=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=s/r,i=e/n;Math.abs(1-i)<Math.abs(1-t)?t=i:i=t,s=Mb(t*r,this.config.ensure_multiple_of),e=Mb(i*n,this.config.ensure_multiple_of)}return[e,s]}if(void 0!==this.size_divisibility)return Ob([n,r],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,n]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,n,{resample:this.resample})}async preprocess(e){let{do_normalize:t=null,do_pad:n=null,do_convert_rgb:r=null,do_convert_grayscale:s=null,do_flip_channel_order:i=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.do_crop_margin&&(e=await this.crop_margin(e));const[a,o]=e.size;if(r??this.do_convert_rgb?e=e.rgb():s&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,n;Number.isInteger(this.crop_size)?(t=this.crop_size,n=this.crop_size):(t=this.crop_size.width,n=this.crop_size.height),e=await e.center_crop(t,n)}const l=[e.height,e.width];let u=Float32Array.from(e.data),d=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(u),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let n=this.image_std;if(Array.isArray(this.image_std)||(n=new Array(e.channels).fill(t)),t.length!==e.channels||n.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${n.length}) must match the number of channels in the image (${e.channels}).`);for(let r=0;r<u.length;r+=e.channels)for(let s=0;s<e.channels;++s)u[r+s]=(u[r+s]-t[s])/n[s]}if(n??this.do_pad)if(this.pad_size){const t=this.pad_image(u,[e.height,e.width,e.channels],this.pad_size);[u,d]=t}else if(this.size_divisibility){const[e,t]=Ob([d[1],d[0]],this.size_divisibility);[u,d]=this.pad_image(u,d,{width:e,height:t})}if(i??this.do_flip_channel_order){if(3!==d[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<u.length;e+=3){const t=u[e];u[e]=u[e+2],u[e+2]=t}}return{original_size:[o,a],reshaped_input_size:l,pixel_values:new rp("float32",u,d).permute(2,0,1)}}async _call(e){Array.isArray(e)||(e=[e]);const t=await Promise.all(e.map((e=>this.preprocess(e))));return{pixel_values:cp(t.map((e=>e.pixel_values)),0),original_sizes:t.map((e=>e.original_size)),reshaped_input_sizes:t.map((e=>e.reshaped_input_size))}}}class Pb extends Rb{post_process_semantic_segmentation(){return Sb(...arguments)}}class Db extends Rb{post_process_semantic_segmentation(){return Sb(...arguments)}}class Lb extends Rb{}class Fb extends Rb{}class Nb extends Fb{}class Ub extends Rb{}class jb extends Rb{}class Vb extends Rb{}class qb extends Vb{}class Wb extends Rb{}class Gb extends Rb{}class Hb extends Rb{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const n=Math.floor(t/this.crop_pct),[r,s]=this.get_resize_output_image_size(e,{shortest_edge:n});e=await e.resize(r,s,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class Kb extends Hb{}class Xb extends Rb{}class Yb extends Rb{}class Qb extends Rb{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map((e=>e*e)))}}class Zb extends Rb{}class Jb extends Rb{}class ev extends Rb{}class tv extends Rb{}class nv extends Rb{}class rv extends nv{}class sv extends Rb{post_process_object_detection(){return Eb(...arguments)}}class iv extends sv{}class av extends Rb{post_process_object_detection(){return Eb(...arguments)}}class ov extends Rb{}class lv extends Rb{}class uv extends Rb{pad_image(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const[s,i,a]=t;let o=this.image_mean;Array.isArray(this.image_mean)||(o=new Array(a).fill(o));let l=this.image_std;Array.isArray(l)||(l=new Array(a).fill(o));const u=o.map(((e,t)=>-e/l[t]));return super.pad_image(e,t,n,{center:!0,constant_values:u,...r})}}class dv extends uv{}class cv extends Rb{async _call(e){const t=await super._call(e),n=mp([t.pixel_values.dims[0],64,64],1n);return{...t,pixel_mask:n}}post_process_object_detection(){return Eb(...arguments)}post_process_panoptic_segmentation(){return zb(...arguments)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class pv extends Rb{post_process_panoptic_segmentation(){return zb(...arguments)}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class hv extends Rb{post_process_object_detection(){return Eb(...arguments)}}class fv extends Rb{reshape_input_points(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=S(e=structuredClone(e));if(3===s.length)r||(s=[1,...s]),e=[e];else if(4!==s.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let i=0;i<e.length;++i){let r=t[i],s=n[i],a=[s[0]/r[0],s[1]/r[1]];for(let t=0;t<e[i].length;++t)for(let n=0;n<e[i][t].length;++n)for(let r=0;r<e[i][t][n].length;++r)e[i][t][n][r]*=a[r%2]}return new rp("float32",Float32Array.from(e.flat(1/0)),s)}add_input_labels(e,t){let n=S(e);if(2===n.length)n=[1,...n],e=[e];else if(3!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(n.some(((e,n)=>e!==t.dims[n])))throw Error(`The first ${n.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new rp("int64",e.flat(1/0).map(BigInt),n)}async _call(e){let{input_points:t=null,input_labels:n=null,input_boxes:r=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=await super._call(e);if(t&&(s.input_points=this.reshape_input_points(t,s.original_sizes,s.reshaped_input_sizes)),n){if(!s.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");s.input_labels=this.add_input_labels(n,s.input_points)}return r&&(s.input_boxes=this.reshape_input_points(r,s.original_sizes,s.reshaped_input_sizes,!0)),s}async post_process_masks(e,t,n){let{mask_threshold:r=0,binarize:s=!0,pad_size:i=null}=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const a=[];i=i??this.pad_size;const o=[i.height,i.width];for(let l=0;l<t.length;++l){const i=t[l],u=n[l];let d=await ip(e[l],{mode:"bilinear",size:o});if(d=d.slice(null,null,[0,u[0]],[0,u[1]]),d=await ip(d,{mode:"bilinear",size:i}),s){const e=d.data,t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)e[n]>r&&(t[n]=1);d=new rp("bool",t,d.dims)}a.push(d)}return a}generate_crop_boxes(e,t){let{crop_n_layers:n=0,overlap_ratio:r=512/1500,points_per_crop:s=32,crop_n_points_downscale_factor:i=1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}}}class mv extends Rb{pad_image(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const[s,i,a]=t;return super.pad_image(e,t,{width:i+(n-i%n)%n,height:s+(n-s%n)%n},{mode:"symmetric",center:!1,constant_values:-1,...r})}}class gv extends Rb{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const n=await Promise.all(e.map((e=>this.preprocess(e)))),r=await Promise.all(t.map((e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0}))));return{pixel_values:cp(n.map(((e,t)=>dp([e.pixel_values,r[t].pixel_values],0))),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}}class _v extends Bb{constructor(e){super(e),this.config.mel_filters??=bb(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=$b(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await xb(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),n=t.data,r=G(n)[0];for(let s=0;s<n.length;++s)n[s]=(Math.max(n[s],r-8)+4)/4;return t}async _call(e){let t;Ib(e,"WhisperFeatureExtractor"),e.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),t=e.slice(0,this.config.n_samples)):(t=new Float32Array(this.config.n_samples),t.set(e));return{input_features:(await this._extract_fbank_features(t)).unsqueeze_(0)}}}class wv extends Bb{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,n=e.reduce(((e,n)=>e+(n-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(n+1e-7)))}async _call(e){Ib(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const n=[1,t.length];return{input_values:new rp("float32",t,n),attention_mask:new rp("int64",new BigInt64Array(t.length).fill(1n),n)}}}class yv extends Bb{constructor(e){super(e);const t=this.config.sampling_rate,n=bb(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let r=0;r<n.length;++r)n[r].push(0);this.mel_filters=n,this.window=$b(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return xb(e=e.map((e=>32768*e)),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){let{padding:t=!0,pad_to_multiple_of:n=2,do_normalize_per_mel_bins:r=!0,return_attention_mask:s=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Ib(e,"SeamlessM4TFeatureExtractor");let i,a=await this._extract_fbank_features(e,this.config.max_length);if(r){const[e,t]=a.dims,n=a.data;for(let r=0;r<t;++r){let s=0;for(let l=0;l<e;++l)s+=n[l*t+r];const i=s/e;let a=0;for(let l=0;l<e;++l)a+=(n[l*t+r]-i)**2;a/=e-1;const o=Math.sqrt(a+1e-7);for(let l=0;l<e;++l){const e=l*t+r;n[e]=(n[e]-i)/o}}}if(t){const[e,t]=a.dims,r=a.data,o=e%n;if(o>0){const n=new Float32Array(t*(e+o));n.set(r),n.fill(this.config.padding_value,r.length);const l=e+o;a=new rp(a.type,n,[l,t]),s&&(i=new rp("int64",new BigInt64Array(l),[1,l]),i.data.fill(1n,0,e))}}const[o,l]=a.dims,u=this.config.stride;if(0!==o%u)throw new Error(`The number of frames (${o}) must be a multiple of the stride (${u}).`);const d=a.view(1,Math.floor(o/u),l*u),c={input_features:d};if(s){const e=d.dims[1],t=new BigInt64Array(e);if(i){const e=i.data;for(let n=1,r=0;n<o;n+=u,++r)t[r]=e[n]}else t.fill(1n);c.attention_mask=new rp("int64",t,[1,e])}return c}}class bv extends Bb{constructor(e){super(e);const t=this.config.sampling_rate,n=bb(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let r=0;r<n.length;++r)n[r].push(0);this.mel_filters=n,this.window=$b(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return xb(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){Ib(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,n=t.data;for(let t=0;t<n.length;++t)n[t]=(n[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}class vv extends Bb{constructor(e){super(e),this.mel_filters=bb(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=bb(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=$b(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,n,r){let s,i=!1;const a=e.length-t;if(a>0){if("rand_trunc"!==n)throw new Error(`Truncation strategy "${n}" not implemented`);{i=!0;const n=Math.floor(Math.random()*(a+1));e=e.subarray(n,n+t),s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(a<0){let n=new Float64Array(t);if(n.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)n.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-a;t+=e.length)n.set(e,t);e=n}if("fusion"===n)throw new Error(`Truncation strategy "${n}" not implemented`);s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return s.unsqueeze_(0)}async _extract_fbank_features(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return xb(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:n,do_pad:!1,transpose:!0})}async _call(e){let{max_length:t=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Ib(e,"ClapFeatureExtractor");return{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class xv extends Bb{async _call(e){Ib(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new rp("float32",e,t)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const n=t/this.samples_to_frames(t)/this.config.sampling_rate,r=[];for(const s of e.tolist()){const e=[];let t=-1;for(let n=0;n<s.length;++n){const r=V(s[n]),[i,a]=G(r),[o,l]=[n,n+1];a!==t?(t=a,e.push({id:a,start:o,end:l,score:i})):(e.at(-1).end=l,e.at(-1).score+=i)}r.push(e.map((e=>{let{id:t,start:r,end:s,score:i}=e;return{id:t,start:r*n,end:s*n,confidence:i/(s-r)}})))}return r}}class $v extends Bb{constructor(e){super(e);const t=this.config.sampling_rate,n=bb(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let r=0;r<n.length;++r)n[r].push(0);this.mel_filters=n,this.window=$b(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return xb(e=e.map((e=>32768*e)),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){Ib(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,n=t.data,[r,s,i]=t.dims;for(let t=0;t<r;++t){const r=t*s*i,a=t*i;for(let t=0;t<s;++t){const s=r+t*i;for(let t=0;t<i;++t)n[s+t]-=e[a+t]}}}return{input_features:t}}}class kv extends Bb{}class Ev extends ${constructor(e){super(),this.feature_extractor=e}async _call(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return await this.feature_extractor(e,...n)}}class Sv extends Ev{async _call(){return await this.feature_extractor(...arguments)}post_process_masks(){return this.feature_extractor.post_process_masks(...arguments)}reshape_input_points(){return this.feature_extractor.reshape_input_points(...arguments)}}class Cv extends Ev{async _call(e){return await this.feature_extractor(e)}}class Av extends Ev{async _call(e){return await this.feature_extractor(e)}}class Tv extends Ev{async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(){return this.feature_extractor.post_process_speaker_diarization(...arguments)}}class zv extends Ev{async _call(e){return await this.feature_extractor(e)}}class Iv extends Ev{}class Mv extends Ev{constructor(e){super(e);const{tasks_answer_post_processing_type:t,task_prompts_without_inputs:n,task_prompts_with_input:r}=e.config;this.tasks_answer_post_processing_type=new Map(Object.entries(t??{})),this.task_prompts_without_inputs=new Map(Object.entries(n??{})),this.task_prompts_with_input=new Map(Object.entries(r??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"===typeof e&&(e=[e]);const t=[];for(const n of e)if(this.task_prompts_without_inputs.has(n))t.push(this.task_prompts_without_inputs.get(n));else{for(const[e,r]of this.task_prompts_with_input)if(n.includes(e)){t.push(r.replaceAll("{input}",n).replaceAll(e,""));break}t.length!==e.length&&t.push(n)}return t}post_process_generation(e,t,n){const r=this.tasks_answer_post_processing_type.get(t)??"pure_text";let s;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),r){case"pure_text":s=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const i="ocr"===r?"quad_boxes":"bboxes",a=e.matchAll(this.regexes[i]),o=[],l=[];for(const[e,t,...r]of a)o.push(t?t.trim():o.at(-1)??""),l.push(r.map(((e,t)=>(Number(e)+.5)/this.size_per_bin*n[t%2])));s={labels:o,[i]:l};break;default:throw new Error(`Task "${t}" (of type "${r}") not yet implemented.`)}return{[t]:s}}}class Ov{static FEATURE_EXTRACTOR_CLASS_MAPPING=(()=>({ImageFeatureExtractor:Rb,WhisperFeatureExtractor:_v,ViTFeatureExtractor:Xb,MobileViTFeatureExtractor:nv,MobileViTImageProcessor:rv,MobileNetV1FeatureExtractor:Zb,MobileNetV2FeatureExtractor:Jb,MobileNetV3FeatureExtractor:ev,MobileNetV4FeatureExtractor:tv,OwlViTFeatureExtractor:sv,Owlv2ImageProcessor:iv,CLIPFeatureExtractor:Vb,CLIPImageProcessor:qb,Florence2Processor:Mv,ChineseCLIPFeatureExtractor:Wb,SiglipImageProcessor:Gb,ConvNextFeatureExtractor:Hb,ConvNextImageProcessor:Kb,SegformerFeatureExtractor:Db,SapiensFeatureExtractor:Pb,BitImageProcessor:Ub,DPTImageProcessor:Nb,DPTFeatureExtractor:Fb,PvtImageProcessor:Lb,GLPNFeatureExtractor:jb,BeitFeatureExtractor:lv,DeiTFeatureExtractor:ov,DetrFeatureExtractor:cv,RTDetrImageProcessor:av,MaskFormerFeatureExtractor:pv,YolosFeatureExtractor:hv,DonutFeatureExtractor:uv,NougatImageProcessor:dv,EfficientNetImageProcessor:Qb,ViTImageProcessor:Yb,VitMatteImageProcessor:gv,SamImageProcessor:fv,Swin2SRImageProcessor:mv,Wav2Vec2FeatureExtractor:wv,SeamlessM4TFeatureExtractor:yv,SpeechT5FeatureExtractor:kv,ASTFeatureExtractor:bv,ClapFeatureExtractor:vv,PyAnnoteFeatureExtractor:xv,WeSpeakerFeatureExtractor:$v}))();static PROCESSOR_CLASS_MAPPING=(()=>({WhisperProcessor:Cv,Wav2Vec2ProcessorWithLM:Av,PyAnnoteProcessor:Tv,SamProcessor:Sv,SpeechT5Processor:zv,OwlViTProcessor:Iv,Florence2Processor:Mv}))();static async from_pretrained(e){let{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main"}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=n??await U(e,"preprocessor_config.json",!0,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i}),o=a.feature_extractor_type??a.image_processor_type,l=this.FEATURE_EXTRACTOR_CLASS_MAPPING[o];if(!l){if(void 0===a.size)throw new Error(`Unknown Feature Extractor type: ${o}`);console.warn(`Feature extractor type "${o}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),l=Rb}return new(this.PROCESSOR_CLASS_MAPPING[a.processor_class]??Ev)(new l(a))}}async function Bv(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>hb.read(e))))}async function Rv(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>"string"===typeof e||e instanceof URL?async function(e,t){if("undefined"===typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const n=await(await D(e)).arrayBuffer(),r=new AudioContext({sampleRate:t});"undefined"===typeof t&&console.warn(`No sampling rate provided, using default of ${r.sampleRate}Hz.`);const s=await r.decodeAudioData(n);let i;if(2===s.numberOfChannels){const e=Math.sqrt(2),t=s.getChannelData(0),n=s.getChannelData(1);i=new Float32Array(t.length);for(let r=0;r<s.length;++r)i[r]=e*(t[r]+n[r])/2}else i=s.getChannelData(0);return i}(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function Pv(e,t){t&&(e=e.map((e=>0|e)));const[n,r,s,i]=e;return{xmin:n,ymin:r,xmax:s,ymax:i}}class Dv extends ${constructor(e){let{task:t,model:n,tokenizer:r=null,processor:s=null}=e;super(),this.task=t,this.model=n,this.tokenizer=r,this.processor=s}async dispose(){await this.model.dispose()}}class Lv extends Dv{_key="generated_text";constructor(e){super(e)}async _call(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map((e=>n[this.task].prefix+e)));const r=this.tokenizer,s={padding:!0,truncation:!0};let i;i=this instanceof Fv&&"_build_translation_inputs"in r?r._build_translation_inputs(e,s,t):r(e,s);const a=await this.model.generate({...i,...t});return r.batch_decode(a,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class Fv extends Lv{_key="translation_text";constructor(e){super(e)}}function Nv(e){return Array.isArray(e)&&e.every((e=>"role"in e&&"content"in e))}Object.freeze({"text-classification":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let{top_k:t=1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),s="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new rp("float32",V(e.data),e.dims),i=this.model.config.id2label,a=[];for(const o of r.logits){const e=s(o),n=await ap(e,t),r=n[0].tolist(),l=n[1].tolist().map(((e,t)=>({label:i?i[e]:`LABEL_${e}`,score:r[t]})));1===t?a.push(...l):a.push(l)}return Array.isArray(e)||1===t?a:a[0]}},model:Ty,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let{ignore_labels:t=["O"]}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Array.isArray(e),r=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),s=(await this.model(r)).logits,i=this.model.config.id2label,a=[];for(let o=0;o<s.dims[0];++o){const e=r.input_ids[o],n=s[o],l=[];for(let r=0;r<n.dims[0];++r){const s=n[r],a=G(s.data)[1],o=i?i[a]:`LABEL_${a}`;if(t.includes(o))continue;const u=this.tokenizer.decode([e[r].item()],{skip_special_tokens:!0});if(""===u)continue;const d=V(s.data);l.push({entity:o,score:d[a],index:r,word:u})}a.push(l)}return n?a:a[0]}},model:zy,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e,t){let{top_k:n=1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:s,end_logits:i}=await this.model(r),a=r.input_ids.tolist(),o=r.attention_mask.tolist(),l=this.tokenizer.all_special_ids,u=[];for(let d=0;d<s.dims[0];++d){const e=a[d],t=e.findIndex((e=>e==this.tokenizer.sep_token_id)),r=(o[d].map(((n,r)=>1==n&&(0===r||r>t&&-1===l.findIndex((t=>t==e[r]))))),s[d].tolist()),c=i[d].tolist();for(let n=1;n<r.length;++n)(0==o[d]||n<=t||-1!==l.findIndex((t=>t==e[n])))&&(r[n]=-1/0,c[n]=-1/0);const p=V(r).map(((e,t)=>[e,t])),h=V(c).map(((e,t)=>[e,t]));p[0][0]=0,h[0][0]=0;const f=A(p,h).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let s=0;s<Math.min(f.length,n);++s){const[t,n,r]=f[s],i=e.slice(t,n+1),a=this.tokenizer.decode(i,{skip_special_tokens:!0});u.push({answer:a,score:r})}}return 1===n?u[0]:u}},model:Dy,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let{top_k:t=5}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(n),s=[],i=n.input_ids.tolist();for(let a=0;a<i.length;++a){const e=i[a],n=e.findIndex((e=>e==this.tokenizer.mask_token_id));if(-1===n)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const o=r[a][n],l=await ap(new rp("float32",V(o.data),o.dims),t),u=l[0].tolist(),d=l[1].tolist();s.push(d.map(((t,r)=>{const s=e.slice();return s[n]=t,{score:u[r],token:Number(t),token_str:this.tokenizer.model.vocab[t],sequence:this.tokenizer.decode(s,{skip_special_tokens:!0})}})))}return Array.isArray(e)?s:s[0]}},model:Py,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:Am,pipeline:class extends Lv{_key="summary_text";constructor(e){super(e)}},model:Iy,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:Am,pipeline:Fv,model:Iy,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:Am,pipeline:Lv,model:Iy,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=!1,s=!1;if("string"===typeof e)t=e=[e];else if(Array.isArray(e)&&e.every((e=>"string"===typeof e)))r=!0,t=e;else{if(Nv(e))e=[e];else{if(!Array.isArray(e)||!e.every(Nv))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");r=!0}s=!0,t=e.map((e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})))}const i=n.add_special_tokens??!1,a=!s&&(n.return_full_text??!0);this.tokenizer.padding_side="left";const o=this.tokenizer(t,{add_special_tokens:i,padding:!0,truncation:!0}),l=await this.model.generate({...o,...n}),u=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let d;!a&&o.input_ids.dims.at(-1)>0&&(d=this.tokenizer.batch_decode(o.input_ids,{skip_special_tokens:!0}).map((e=>e.length)));const c=Array.from({length:e.length},(e=>[]));for(let p=0;p<u.length;++p){const t=Math.floor(p/l.dims[0]*e.length);d&&(u[p]=u[p].slice(d[t])),c[t].push({generated_text:s?[...e[t],{role:"assistant",content:u[p]}]:u[p]})}return r||1!==c.length?c:c[0]}},model:Ry,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((e=>{let[t,n]=e;return[t.toLowerCase(),n]}))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t){let{hypothesis_template:n="This example is {}.",multi_label:r=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=Array.isArray(e);s||(e=[e]),Array.isArray(t)||(t=[t]);const i=t.map((e=>n.replace("{}",e))),a=r||1===t.length,o=[];for(const l of e){const e=[];for(const t of i){const n=this.tokenizer(l,{text_pair:t,padding:!0,truncation:!0}),r=await this.model(n);a?e.push([r.logits.data[this.contradiction_id],r.logits.data[this.entailment_id]]):e.push(r.logits.data[this.entailment_id])}const n=(a?e.map((e=>V(e)[1])):V(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));o.push({sequence:l,labels:n.map((e=>t[e[1]])),scores:n.map((e=>e[0]))})}return s?o:o[0]}},model:Ty,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let{top_k:t=5}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.processor.feature_extractor.config.sampling_rate,r=await Rv(e,n),s=this.model.config.id2label,i=[];for(const a of r){const e=await this.processor(a),n=(await this.model(e)).logits[0],r=await ap(new rp("float32",V(n.data),n.dims),t),o=r[0].tolist(),l=r[1].tolist().map(((e,t)=>({label:s?s[e]:`LABEL_${e}`,score:o[t]})));i.push(l)}return Array.isArray(e)?i:i[0]}},model:Gy,processor:Ov,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e,t){let{hypothesis_template:n="This is a sound of {}."}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=!Array.isArray(e);r&&(e=[e]);const s=t.map((e=>n.replace("{}",e))),i=this.tokenizer(s,{padding:!0,truncation:!0}),a=this.processor.feature_extractor.config.sampling_rate,o=await Rv(e,a),l=[];for(const u of o){const e=await this.processor(u),n=V((await this.model({...i,...e})).logits_per_audio.data);l.push([...n].map(((e,n)=>({score:e,label:t[n]}))))}return r?l[0]:l}},model:Ay,processor:Ov,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(this.model.config.model_type){case"whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,s=await Rv(e,r),i=[];for(const a of s){const e=await this.processor(a),t=(await this.model(e)).logits[0],n=[];for(const s of t)n.push(G(s.data)[1]);const r=this.tokenizer.decode(n);i.push({text:r})}return n?i[0]:i}async _call_whisper(e,t){const n=t.return_timestamps??!1,r=t.chunk_length_s??0,s=t.force_full_sequences??!1;let i=t.stride_length_s??null;const a={...t};"word"===n&&(a.return_token_timestamps=!0,a.return_timestamps=!1);const o=!Array.isArray(e);o&&(e=[e]);const l=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,u=this.processor.feature_extractor.config.hop_length,d=this.processor.feature_extractor.config.sampling_rate,c=await Rv(e,d),p=[];for(const h of c){let e=[];if(r>0){if(null===i)i=r/6;else if(r<=i)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const t=d*r,n=d*i,s=t-2*n;let a=0;for(;;){const r=a+t,i=h.subarray(a,r),o=await this.processor(i),l=0===a,u=r>=h.length;if(e.push({stride:[i.length,l?0:n,u?0:n],input_features:o.input_features,is_last:u}),u)break;a+=s}}else e=[{stride:[h.length,0,0],input_features:(await this.processor(h)).input_features,is_last:!0}];for(const r of e){a.num_frames=Math.floor(r.stride[0]/u);const e=await this.model.generate({inputs:r.input_features,...a});"word"===n?(r.tokens=e.sequences.tolist()[0],r.token_timestamps=e.token_timestamps.tolist()[0].map((e=>Z(e,2)))):r.tokens=e[0].tolist(),r.stride=r.stride.map((e=>e/d))}const[t,o]=this.tokenizer._decode_asr(e,{time_precision:l,return_timestamps:n,force_full_sequences:s});p.push({text:t,...o})}return o?p[0]:p}},model:[My,Wy],processor:Ov,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:Am,pipeline:class extends Dv{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e){let{speaker_embeddings:t=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model(t),r=this.model.config.sampling_rate;return{audio:n.data,sampling_rate:r}}async _call_text_to_spectrogram(e,t){let{speaker_embeddings:n}=t;if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await Ay.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"===typeof n||n instanceof URL)&&(n=new Float32Array(await(await fetch(n)).arrayBuffer())),n instanceof Float32Array)n=new rp("float32",n,[1,n.length]);else if(!(n instanceof rp))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:r}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:s}=await this.model.generate_speech(r,n,{vocoder:this.vocoder}),i=this.processor.feature_extractor.config.sampling_rate;return{audio:s.data,sampling_rate:i}}},model:[By,Oy],processor:[Ov,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Array.isArray(e),r=await Bv(e),{pixel_values:s}=await this.processor(r),i=[];for(const a of s){a.dims=[1,...a.dims];const e=await this.model.generate({inputs:a,...t}),n=this.tokenizer.batch_decode(e,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));i.push(n)}return n?i:i[0]}},model:Ly,processor:Ov,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let{top_k:t=5}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=await Bv(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r}),i=this.model.config.id2label,a=[];for(const o of s.logits){const e=await ap(new rp("float32",V(o.data),o.dims),t),n=e[0].tolist(),r=e[1].tolist().map(((e,t)=>({label:i?i[e]:`LABEL_${e}`,score:n[t]})));a.push(r)}return Array.isArray(e)?a:a[0]}},model:Fy,processor:Ov,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:class extends Dv{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e){let{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:s=null,target_sizes:i=null,subtask:a=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const o=await Bv(e),l=o.map((e=>[e.height,e.width])),{pixel_values:u,pixel_mask:d}=await this.processor(o),c=await this.model({pixel_values:u,pixel_mask:d});let p=null;if(null!==a)p=this.subtasks_mapping[a];else for(let[m,g]of Object.entries(this.subtasks_mapping))if(g in this.processor.feature_extractor){p=this.processor.feature_extractor[g].bind(this.processor.feature_extractor),a=m;break}const h=this.model.config.id2label,f=[];if("panoptic"===a||"instance"===a){const e=p(c,t,n,r,s,i??l)[0],a=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(a.data.length);for(let r=0;r<a.data.length;++r)a.data[r]===t.id&&(e[r]=255);const n=new hb(e,a.dims[1],a.dims[0],1);f.push({score:t.score,label:h[t.label_id],mask:n})}}else{if("semantic"!==a)throw Error(`Subtask ${a} not supported.`);{const{segmentation:e,labels:t}=p(c,i??l)[0];for(const n of t){const t=new Uint8ClampedArray(e.data.length);for(let s=0;s<e.data.length;++s)e.data[s]===n&&(t[s]=255);const r=new hb(t,e.dims[1],e.dims[0],1);f.push({score:null,label:h[n],mask:r})}}}return f}},model:[Ny,Uy,jy],processor:Ov,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e,t){let{hypothesis_template:n="This is a photo of {}"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=Array.isArray(e),s=await Bv(e),i=t.map((e=>n.replace("{}",e))),a=this.tokenizer(i,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:o}=await this.processor(s),l=await this.model({...a,pixel_values:o}),u="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>V(e.data),d=[];for(const c of l.logits_per_image){const e=[...u(c)].map(((e,n)=>({score:e,label:t[n]})));e.sort(((e,t)=>t.score-e.score)),d.push(e)}return r?d:d[0]}},model:Ay,processor:Ov,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let{threshold:t=.9,percentage:n=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const s=await Bv(e),i=n?null:s.map((e=>[e.height,e.width])),{pixel_values:a,pixel_mask:o}=await this.processor(s),l=await this.model({pixel_values:a,pixel_mask:o}),u=this.processor.feature_extractor.post_process_object_detection(l,t,i),d=this.model.config.id2label,c=u.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:d[e.classes[r]],box:Pv(t,!n)})))));return r?c:c[0]}},model:Vy,processor:Ov,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e,t){let{threshold:n=.1,top_k:r=null,percentage:s=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=Array.isArray(e),a=await Bv(e),o=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(a),u=[];for(let d=0;d<a.length;++d){const e=a[d],i=s?null:[[e.height,e.width]],c=l.pixel_values[d].unsqueeze_(0),p=await this.model({...o,pixel_values:c}),h=this.processor.feature_extractor.post_process_object_detection(p,n,i,!0)[0];let f=h.boxes.map(((e,n)=>({score:h.scores[n],label:t[h.classes[n]],box:Pv(e,!s)}))).sort(((e,t)=>t.score-e.score));null!==r&&(f=f.slice(0,r)),u.push(f)}return i?u:u[0]}},model:qy,processor:Ov,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e,t){throw new Error("This pipeline is not yet supported in Transformers.js v3.")}},model:Hy,processor:Ov,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:class extends Dv{constructor(e){super(e)}async _call(e){const t=await Bv(e),n=await this.processor(t),r=await this.model(n),s=[];for(const i of r.reconstruction){const e=i.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");s.push(hb.fromTensor(e))}return s.length>1?s:s[0]}},model:Ky,processor:Ov,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:class extends Dv{constructor(e){super(e)}async _call(e){const t=await Bv(e),n=await this.processor(t),{predicted_depth:r}=await this.model(n),s=[];for(let i=0;i<t.length;++i){const e=sp(r[i],t[i].size.reverse(),"bilinear",!1),n=e.mul_(255/G(e.data)[0]).to("uint8");s.push({predicted_depth:r[i],depth:hb.fromTensor(n)})}return s.length>1?s:s[0]}},model:Xy,processor:Ov,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:Am,pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let{pooling:t="none",normalize:n=!1,quantize:r=!1,precision:s="binary"}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=this.tokenizer(e,{padding:!0,truncation:!0}),a=await this.model(i);let o=a.last_hidden_state??a.logits??a.token_embeddings;if("none"===t);else if("mean"===t)o=function(e,t){const n=e.data,r=t.data,s=[e.dims[0],e.dims[2]],i=new n.constructor(s[0]*s[1]),[a,o,l]=e.dims;let u=0;for(let d=0;d<a;++d){const e=d*l*o;for(let t=0;t<l;++t){let s=0,a=0;const c=d*o,p=e+t;for(let e=0;e<o;++e){const t=Number(r[c+e]);a+=t,s+=n[p+e*l]*t}const h=s/a;i[u++]=h}}return new rp(e.type,i,s)}(o,i.attention_mask);else{if("cls"!==t)throw Error(`Pooling method '${t}' not supported.`);o=o.slice(null,0)}return n&&(o=o.normalize(2,-1)),r&&(o=function(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const n="binary"===t,r=n?"int8":"uint8",s=n?Int8Array:Uint8Array,i=e.data,a=new s(i.length/8);for(let o=0;o<i.length;++o){const e=i[o]>0?1:0,t=Math.floor(o/8),r=o%8;a[t]|=e<<7-r,n&&0===r&&(a[t]-=128)}return new rp(r,a,[e.dims[0],e.dims[1]/8])}(o,s)),o}},model:Ay,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:Ov,pipeline:class extends Dv{constructor(e){super(e)}async _call(e){let{pool:t=null}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=await Bv(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r});let i;if(t){if(!("pooler_output"in s))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");i=s.pooler_output}else i=s.last_hidden_state??s.logits??s.image_embeds;return i}},model:[Yy,Ay],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});g.IS_PROCESS_AVAILABLE}}]);
//# sourceMappingURL=552.5bacf88e.chunk.js.map